#LyX 1.6.2 created this file. For more info see http://www.lyx.org/
\lyxformat 345
\begin_document
\begin_header
\textclass amsbook
\use_default_options true
\begin_modules
theorems-ams
\end_modules
\language english
\inputencoding auto
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Chapter
\begin_inset Index
status open

\begin_layout Plain Layout
Validator
\end_layout

\end_inset

Validator
\begin_inset CommandInset label
LatexCommand label
name "cha:Validator"

\end_inset

 
\end_layout

\begin_layout Section
Overview 
\end_layout

\begin_layout Standard
The Validator is a new tool introduced with OH 2.0.0, that is aimed to help
 people to develop more reliable bots and 
\begin_inset Index
status open

\begin_layout Plain Layout
Table Map
\end_layout

\end_inset

Table Maps.
 It will execute several hundred consistency-checks at the symbol level
 to detect invalid game-states, mis-scrapes or incomplete information.
 The Validator will write possible problems to the log-file and also show
 a message box, as long as messages are not disabled in {Preferences}.
 
\end_layout

\begin_layout Standard
This feature is being actively developed, please see the forum for more
 information
\begin_inset Foot
status open

\begin_layout Plain Layout
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.maxinmontreal.com/forums/viewtopic.php?f=189
\end_layout

\end_inset


\end_layout

\end_inset

.
 
\end_layout

\begin_layout Section
Preferences 
\end_layout

\begin_layout Standard
!!! move!!!
\end_layout

\begin_layout Standard
The Validator offers several options, available at "Edit -> Preferences
 -> Validator".
 
\end_layout

\begin_layout Standard
Never: The Validator will be turned off completely.
 Not recommended for real-money-play.
 
\end_layout

\begin_layout Standard
When it is my turn: The Validator will check the rules, when it is your
 turn, i.e when buttons are visible.
 This setting offers a good tradeoff between reliability and performance.
 Recommended for real-money-botting.
 
\end_layout

\begin_layout Standard
Always: The validator will check all rules once per heartbeat-cycle.
 This setting will detect errors, even if it is not your turn, but it causes
 also a higher CPU-usage.
 Recommended for verification of new or modified TableMaps and for testing
 of bots.
\end_layout

\begin_layout Standard
Use 
\begin_inset Index
status open

\begin_layout Plain Layout
heuristic
\end_layout

\end_inset

heuristic rules: Some rules are heuristic, i.e.
 they are "common sense", but not always true.
 Example: A game does usually not last longer than 2 minutes, so the Autoplayer
 has to act at least once per 120 seconds.
 If it does not do so, there seems to be a problem.
 Maybe the Table Map does not detect the players cards or the buttons.
 This setting can result in false positives and is recommended for testing
 only, but not for real-money-play.
 
\end_layout

\begin_layout Standard
Stop Autoplayer on error: This setting will quit playing immediately, if
 an error occurs.
 Recommended for testing, if you want to investigate the error immediately,
 and maybe for very conservative real-money-botting.
 
\end_layout

\begin_layout Section
Technical documentation 
\end_layout

\begin_layout Standard
The Validator basically consists of a set of several hundred rules to be
 checked.
 Each rule is written in pseudo-code, that can be translated into C-macros
 easily (there is a little Perl-script for that purpose, "rules2cpp.pl").
 Each rule consists of:
\end_layout

\begin_layout Itemize
a(n) unique ID for the test case 
\end_layout

\begin_layout Itemize
a flag to distinguish 
\begin_inset Index
status open

\begin_layout Plain Layout
heuristic
\end_layout

\end_inset

heuristic and non-heuristic rules 
\end_layout

\begin_layout Itemize
some verbal 
\begin_inset Index
status open

\begin_layout Plain Layout
reasoning
\end_layout

\end_inset

reasoning 
\end_layout

\begin_layout Itemize
a 
\begin_inset Index
status open

\begin_layout Plain Layout
precondition
\end_layout

\end_inset

precondition, that checks, if a rule can be applied to the current game
 state 
\end_layout

\begin_layout Itemize
a 
\begin_inset Index
status open

\begin_layout Plain Layout
postcondition
\end_layout

\end_inset

postcondition, that has to be met, if a rule can be applied a list of symbols,
 that got used and are possibly affected in case of an error
\end_layout

\begin_layout Standard
In practice it looks like this:
\end_layout

\begin_layout Standard

\noun on
BEGIN_TESTCASE
\end_layout

\begin_layout Standard

\noun on
    TESTCASE_ID ("0501") 
\end_layout

\begin_layout Standard

\noun on
HEURISTIC_RULE (false) 
\end_layout

\begin_layout Standard

\noun on
    REASONING ("If it's my turn, then there has to be always a check or
 a call button.") 
\end_layout

\begin_layout Standard

\noun on
    PRECONDITION ("ismyturn") 
\end_layout

\begin_layout Standard

\noun on
    POSTCONDITION ((("myturnbits" & BUTTON_CHECK) != 0) 
\end_layout

\begin_layout Standard

\noun on
        || (("myturnbits" & BUTTON_CALL) != 0)) 
\end_layout

\begin_layout Standard

\noun on
    SYMBOLS_POSSIBLY_AFFECTED ("ismyturn, myturnbits") 
\end_layout

\begin_layout Standard

\noun on
END_TESTCASE
\end_layout

\end_body
\end_document
