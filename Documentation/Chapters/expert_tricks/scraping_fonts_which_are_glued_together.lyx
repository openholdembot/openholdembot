#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass amsbook
\use_default_options true
\begin_modules
theorems-ams
eqs-within-sections
figs-within-sections
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 0
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 0
\use_package mhchem 1
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth -2
\tocdepth -2
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
Scraping fonts which are glued together
\end_layout

\begin_layout Standard
This chapter is about font creation, precisely about the main difficulty
 that can happen: sometime two or more characters seem to touch each other,
 they are printed without any visible distance.
 This can cause problems because the scraper tries to recognize one character
 after another, but out of the box it can't handle groups of characters
 that look like something unknown.
\end_layout

\begin_layout Standard
At the first picture below you see the good case: OpenScrape tries to recognize
 the playername 
\begin_inset Quotes eld
\end_inset

platinum333
\begin_inset Quotes erd
\end_inset

 and the first character 
\begin_inset Quotes eld
\end_inset

p
\begin_inset Quotes erd
\end_inset

 gets properly separated from the rest.
 All we have to do here: tell OpenScrape that this group of pixels is a
 
\begin_inset Quotes eld
\end_inset

p
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/scraping_glued_fonts_01.jpg

\end_inset


\end_layout

\begin_layout Standard
The second character 
\begin_inset Quotes eld
\end_inset

l
\begin_inset Quotes erd
\end_inset

 works also properly, but the next two characters are glued together: they
 can't be separated by a vertical empty line of pixels.
 OpenScrape would like to know what 
\begin_inset Quotes eld
\end_inset

at
\begin_inset Quotes erd
\end_inset

 means in the alphabet..
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/scraping_glued_fonts_02.jpg

\end_inset


\end_layout

\begin_layout Standard
Unfortunatelly 
\begin_inset Quotes eld
\end_inset

at
\begin_inset Quotes erd
\end_inset

 is no proper character, but there is a little trick to separate these two
 characters.
 We temporary make the boundaries of the name-region smaller so that it
 only contains the first of these two characters -- the 
\begin_inset Quotes eld
\end_inset

a
\begin_inset Quotes erd
\end_inset

.
 Then OpenScrape will try to recognize all characters in this small region,
 which contains only the pixels of 
\begin_inset Quotes eld
\end_inset

a
\begin_inset Quotes erd
\end_inset

.
 Now we can define 
\begin_inset Quotes eld
\end_inset

a
\begin_inset Quotes erd
\end_inset

 just like any other normal font.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/scraping_glued_fonts_03.jpg

\end_inset


\end_layout

\begin_layout Standard
We repeat this process for the second critical character 
\begin_inset Quotes eld
\end_inset

t
\begin_inset Quotes erd
\end_inset

.
 Then both of them can be recognized individually.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/scraping_glued_fonts_04.jpg

\end_inset


\end_layout

\begin_layout Standard
Once this got done we can restore the original region.
 The first 4 characters get now recognized properly and we can continue
 with the rest.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/scraping_glued_fonts_05.jpg

\end_inset


\end_layout

\end_body
\end_document
