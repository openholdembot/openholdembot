#LyX 1.6.5 created this file. For more info see http://www.lyx.org/
\lyxformat 345
\begin_document
\begin_header
\textclass amsbook
\use_default_options true
\begin_modules
theorems-ams
eqs-within-sections
figs-within-sections
\end_modules
\language english
\inputencoding auto
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth -2
\tocdepth -2
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Section
Symbol Records 
\end_layout

\begin_layout Subsection
Description 
\end_layout

\begin_layout Standard
Symbol records are a general purpose record type that serves many different
 purposes within OpenHoldem and OpenScrape.
 The common characteristic of these records is that they all contain a name
 and a free-form text field.
 The interpretation of that text field is different, depending on the name
 of the symbol record.
 The table in the technical reference section below describes how the free-form
 text is interpreted for each different Symbol record type.
 
\end_layout

\begin_layout Subsection
Manipulating symbol records using OpenScrape 
\end_layout

\begin_layout Standard
To create a new symbol record, select the “Symbols” category in the record
 tree display on the Table Map Editor window, and click the “New” button.
 A window will be displayed that allows you to enter the free-form text
 for this new record.
 To edit an existing symbol record, select the record in the record tree
 display on the Table Map Editor window, and click the “Edit” button.
 A window will be displayed that allows you to adjust the free-form text
 for this record, or change the record name itself.
 To delete an existing symbol record, select the record in the record tree
 display on the Table Map Editor window, and click the “Delete” button.
 A window will be displayed asking for verification of this action.
\end_layout

\begin_layout Standard
Note: The Insert and Delete keys can also be used as a shortcut for adding
 and deleting Symbol records.
\end_layout

\begin_layout Standard
In the case of the “New” and “Edit” actions, the window that pops up also
 contains a field for “Titlebar text”, a button to parse the title bar text,
 and a field to display the parse results.
 These three controls are only relevant if the record name is one of the
 ttlimits types.
 If a ttlimits record type is selected, these fields will be enabled, otherwise
 they will be grayed out.
 
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename ../../Images/OpenScrape/OS_NewEditWindow.bmp

\end_inset


\end_layout

\begin_layout Standard
These three fields allow you to test the parsing of the window’s title bar
 text with the parse string that is specified in the “String” field, and
 see the results of this parse in the results field at the bottom of the
 window.
 The “Titlebar text” field is initially populated with the titlebar text
 of the window that OpenScrape is attached to (via the “Green Circle Button”),
 but this text can be overridden with anything you want to test parse.
\end_layout

\begin_layout Subsection
Technical Reference
\end_layout

\begin_layout Standard
In the Table Map (.tm) file, these records will be preceded with the characters
 "s$".
 Symbol records have the following format: 
\end_layout

\begin_layout Standard
s$<name> <text> 
\end_layout

\begin_layout Standard
<name> is the name of the record (see table below) <text> is the content
 of the record 
\end_layout

\begin_layout Subsection
Valid symbol records 
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="23" columns="2">
<features islongtable="true">
<column alignment="left" valignment="top" width="25text%">
<column alignment="left" valignment="top" width="75text%">
<row endhead="true">
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Symbol record 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
 Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
titletext, titletext0 - titletext9
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
When the “Green Circle Button” is pressed, OpenHoldem will look through
 each of these symbols and do a partial match of <text> to each window’s
 title bar text.
 If any substring provided in any of these symbols matches, then the window
 is considered a match.
 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
!titletext,  !titletext0 - !titletext9
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
When the “Green Circle Button” is pressed, OpenHoldem will look through
 each of these symbols and do a partial match of <text> to each window’s
 title bar text.
 If all substrings provided in all of these symbols do not match, then the
 window is considered a match.
 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ttlimits, ttlimits0 - ttlimits9
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
These symbols are intended to provide a format string that is used to parse
 the window's titlebar text, and extract sblind, bblind, bigbet, ante and
 game type information.
 The syntax usage of the format string is very much like the standard C-language
 format strings for scanf and printf.
 The placeholders use the caret character as the indicator and have the
 following meanings: ^h hand number ^d dummy integer (read chars 0-9 only)
 ^f dummy float (read chars 0-9 including decimal '.') ^s sblind ^b bblind
 ^B bigbet ^a ante ^v sb or bb depending on limit type ^V bb or BB depending
 on limit type ^* skip all text up to the literal character following the
 * ^R roman numeral as in "Level VIII" as typically seen in SNGs ^L limit
 indicator 
\end_layout

\begin_layout Plain Layout
For the integer and float numerics, the scanner will automatically accept
 and skip a leading dollar sign “$” or leading/trailing cent sign “¢” (ascii
 162 hex a2).
 In the case of the cent sign the target number will be divided by 100.
 The scanner will also recognize the standard trailing metric unit multipliers
 of “k” and “m” (1000 and 1000000 respectively).
 
\end_layout

\begin_layout Plain Layout
The following case-insensitive strings are recognized for the ^L limit indicator
: no limit, no-limit, nolimit, nl pot limit, pot-limit, potlimit, pl fixed
 limit, fixed-limit, fixedlimit, fl, limit 
\end_layout

\begin_layout Plain Layout
As an example, this title bar text "NL SNG Level VI 25/50 (2)" could be
 parsed with this format string "^L SNG Level ^R ^s/^b (^a)" to result in
 the sblind, bblind and game type being recognized.
 
\end_layout

\begin_layout Plain Layout
If multiple ttlimits symbols are provided, then the engine will scan each
 in order, and extract matching information from the first time it is found.
 That means that if you specify ^s in both ttlimits and ttlimits3, for example,
 it will be extracted from ttlimits and ignored in ttlimits3.
 OpenHoldem allows you to specify up to 11 ttlimits records in any single
 Table Map file.
 Specifying multiple ttlimits records might be needed if a given Table Map
 file is intended to describe multiple Texas Hold’em game flavors.
 However, it is a best practice to define different game flavors in different
 Table Maps, and thus most Table Maps contain a single ttlimits symbol record.
 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
c0limits, c0limits0-c0limits9
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
These are text format strings with the same structure as the ttlimits records
 described above.
 They are intended to be used to extract blind/limit information from the
 c0limits regions using text transforms.
 As a poker site could certainly paint the various blind/limit information
 in different locations in the window, it is very likely that multiple c0limits
 records are required, if any are needed at all.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
sitename
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
This record describes the name of the poker site that this Table Map is
 for.
 It is good practice to include the number of chairs and game flavor that
 this Table Map is intended to be used for.
 You might have a "fulltilt9sng", "fulltilt6ring" and "fulltilt2ring" for
 different Table Map files for Full Tilt's various table layouts and flavors.
 This record is what is queried via the OpenHoldem "sitename$" symbol.
 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
network
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The name of the poker network that this Table Map is for.
 This is used to determine the appropriate network to query Poker Tracker
 data for when s$sitename is not a Poker Tracker-supported site.
 OpenHoldem will first check s$sitename for a supported network name, then
 s$network.
 
\end_layout

\begin_layout Plain Layout
Both s$sitename and s$network are not case-sensitive.
 OpenHoldem converts them internally to lowercases.
 
\end_layout

\begin_layout Plain Layout
The following names are supported for PT2: 
\end_layout

\begin_layout Itemize
stars
\end_layout

\begin_layout Itemize
party
\end_layout

\begin_layout Itemize
ultimate
\end_layout

\begin_layout Itemize
absolute
\end_layout

\begin_layout Itemize
microgaming
\end_layout

\begin_layout Itemize
ongame
\end_layout

\begin_layout Itemize
cryptologic
\end_layout

\begin_layout Itemize
pacific
\end_layout

\begin_layout Itemize
fulltilt
\end_layout

\begin_layout Itemize
b2b
\end_layout

\begin_layout Itemize
tribeca
\end_layout

\begin_layout Itemize
worldpex
\end_layout

\begin_layout Itemize
ipoker
\end_layout

\begin_layout Itemize
tain,
\end_layout

\begin_layout Itemize
bodog
\end_layout

\begin_layout Itemize
everest
\end_layout

\begin_layout Itemize
boss
\end_layout

\begin_layout Itemize
betfair
\end_layout

\begin_layout Plain Layout
The following names are supported for PT3: 
\end_layout

\begin_layout Itemize
stars
\end_layout

\begin_layout Itemize
party
\end_layout

\begin_layout Itemize
fulltilt
\end_layout

\begin_layout Itemize
ipoker
\end_layout

\begin_layout Itemize
everest
\end_layout

\begin_layout Itemize
ongame
\end_layout

\begin_layout Itemize
boss
\end_layout

\begin_layout Itemize
cereus
\end_layout

\begin_layout Itemize
pacific
\end_layout

\begin_layout Itemize
b2b
\end_layout

\begin_layout Itemize
microgaming
\end_layout

\begin_layout Itemize
cake
\end_layout

\begin_layout Itemize
bodog
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
nchairs 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The number of chairs that this Table Map supports.
 The value of this record is what is returned via the OpenHoldem "nchairs"
 symbol.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
reseller 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Legacy support of WinScrape's symbol.
 Not particularly relevant in the open source world, but there if you need
 it.
 This is not used in the OpenHoldem engine anywhere, and is just metadata
 for the Table Map file.
 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
mechanic 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Legacy support of WinScrape's symbol.
 Not particularly relevant in the open source world, but there if you need
 it.
 This is not used in the OpenHoldem engine anywhere, and is just metadata
 for the Table Map file.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
chairconfig
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Legacy support of WinScrape's symbol.
 OpenHoldem does not adjust its display layout based on the value of this
 symbol like WinHoldem, and thus this is not used in the OpenHoldem engine
 anywhere.
 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
swagtextmethod 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Used by the Autoplayer to determine how to enter the f$swag amount into
 the swag entry box on the casino window.
 This is necessary, as bets and raises get interpreted differently by different
 casinos.
 Therefore WinHoldem did introduce the following logic:
\end_layout

\begin_layout Plain Layout
\begin_inset listings
inline false
status open

\begin_layout Plain Layout
f$swag = f$srai + f$swag_adjust
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
where f$srai means 
\begin_inset Quotes eld
\end_inset

stated rais
\begin_inset Quotes erd
\end_inset

 and f$swag_adjust is a casino-specific adjustment.
\end_layout

\begin_layout Plain Layout
The following values for swagtextmethod are valid and mean:
\end_layout

\begin_layout Enumerate
f$swag_adjust = 0
\end_layout

\begin_layout Enumerate
f$swag_adjust = currentbet
\end_layout

\begin_layout Enumerate
f$swag_adjust = currentbet + call
\end_layout

\begin_layout Plain Layout
Default: 3
\end_layout

\begin_layout Plain Layout
(
\emph on
Attention
\emph default
: Currently all these computations have to be done by the user at the formula
 level, using f$srai, f$swag_adjust and swagtextmethod.
 This is some crappy design inherited from WinHoldem; a future version of
 OpenHoldem will handle such adjustments internally.)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
 potmethod 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
This is used to determine the appropriate site interpretation for the contents
 of c0pot0: 
\end_layout

\begin_layout Enumerate
Common pot 
\end_layout

\begin_layout Enumerate
Total pot, includes current bets and side bets
\end_layout

\begin_layout Enumerate
Largest of all pots (common pot and sidepots)
\end_layout

\begin_layout Plain Layout
Default: 1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
activemethod 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
This is used to determine how OH treats information from the pXactive and
 uXactive regions: 
\end_layout

\begin_layout Enumerate
Inactive unless pXactive/uXactive returns true/active
\end_layout

\begin_layout Enumerate
Active unless pXactive/uXactive returns false/inactive/out/away
\end_layout

\begin_layout Plain Layout
Default: 1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
t0type - t3type 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
These symbols control which OCR algorithm will get used for the specific
 text transform 0-3.
 For example if the symbol h3type is defined as fuzzy then all regions with
 transform Text3 will use the fuzzy algorithm.
 The default value is "plain" if no symbol exists for a given group.
\end_layout

\begin_layout Plain Layout
The possible values for these symbols are "fuzzy", "plain", or a specific
 tolerance value.
 The default fuzzy text tolerance is 25%, but can be overridden by stating
 the value in this symbol, such as "0.355", which would cause the scraper
 engine to use the fuzzy text algorithm with a 35.5% tolerance value.
 Values of 0 are the same as "plain".
 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
swagselectionmethod 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
New Symbol in version 2.0; previously, this was a global preference set from
 the OpenHoldem preferences GUI.
\end_layout

\begin_layout Plain Layout
This symbol instructs the Autoplayer how to take the first action in a SWAG
 sequence.
 A SWAG sequence always consists of: 
\end_layout

\begin_layout Enumerate
select the text in the SWAG box 
\end_layout

\begin_layout Enumerate
delete the text in the SWAG box 
\end_layout

\begin_layout Enumerate
enter the new bet in the SWAG box 
\end_layout

\begin_layout Enumerate
confirm the SWAG bet amount.
 
\end_layout

\begin_layout Plain Layout
Valid values for this Symbol are available in a drop down control and are:
 
\end_layout

\begin_layout Itemize
"Sgl Click" – Single left click on the SWAG box to select the existing text
 
\end_layout

\begin_layout Itemize
"Dbl Click" – Double left click on the SWAG box to select the existing text
 
\end_layout

\begin_layout Itemize
"Click Drag" – Left click on the leftmost pixel of the SWAG box, drag to
 the rightmost pixel of the SWAG box, and then release the left mouse button
 to select the existing text 
\end_layout

\begin_layout Itemize
"Nothing" – Skip the text selection step of the SWAG action 
\end_layout

\begin_layout Plain Layout
Default: None, must be explicitly specified
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
swagdeletionmethod
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
New Symbol in version 2.0; previously, this was a global preference set from
 the OpenHoldem preferences GUI.
 This symbol instructs the Autoplayer how to take the second action in a
 SWAG sequence.
 A SWAG sequence always consists of: 
\end_layout

\begin_layout Enumerate
select the text in the SWAG box 
\end_layout

\begin_layout Enumerate
delete the text in the SWAG box 
\end_layout

\begin_layout Enumerate
enter the new bet in the SWAG box 
\end_layout

\begin_layout Enumerate
confirm the SWAG bet amount.
 
\end_layout

\begin_layout Plain Layout
Valid values for this Symbol are available in a drop down control and are:
 
\end_layout

\begin_layout Itemize
"Delete" – Press the “Delete” key to delete the selected text in the SWAG
 box 
\end_layout

\begin_layout Itemize
"Backspace" – Press the “Backspace” key to delete the selected text in the
 SWAG box 
\end_layout

\begin_layout Itemize
"Nothing" – Skip the text deletion step of the SWAG action 
\end_layout

\begin_layout Plain Layout
Default: None, must be explicitly specified
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
swagconfirmationmethod
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
New Symbol in version 2.0; previously, this was a global preference set from
 the OpenHoldem preferences GUI.
 This symbol instructs the Autoplayer how to take the fourth action in a
 SWAG sequence.
 A SWAG sequence always consists of: 
\end_layout

\begin_layout Enumerate
select the text in the SWAG box 
\end_layout

\begin_layout Enumerate
delete the text in the SWAG box 
\end_layout

\begin_layout Enumerate
enter the new bet in the SWAG box 
\end_layout

\begin_layout Enumerate
confirm the SWAG bet amount.
 
\end_layout

\begin_layout Plain Layout
Valid values for this Symbol are available in a drop down control and are:
 
\end_layout

\begin_layout Itemize
"Enter" – Press the “Enter” key to confirm the SWAG bet entry 
\end_layout

\begin_layout Itemize
"Click Bet" – Click the “Bet” button to confirm the SWAG bet entry 
\end_layout

\begin_layout Itemize
"Nothing" – Skip the bet confirmation step of the SWAG action
\end_layout

\begin_layout Plain Layout
Default: None, must be explicitly specified
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
buttonclickmethod
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
New Symbol in version 2.0; previously, this was a global preference set from
 the OpenHoldem preferences GUI.
 This symbol instructs the Autoplayer how to click any button defined by
 the iXbutton region records.
\end_layout

\begin_layout Plain Layout
Valid values for this Symbol are available in a drop down control and are:
 
\end_layout

\begin_layout Itemize
"Single" – Single left click on buttons 
\end_layout

\begin_layout Itemize
"Double" – Double left click on buttons
\end_layout

\begin_layout Plain Layout
Default: "Single"
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
handresetmethod 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
This symbol identifies which scrape changes should be used as a trigger
 to identify a "hand reset" event.
 This is a bitmapped integer; only one of the selected scrape changes needs
 to occur in order for the scrape to be considered a "hand reset".
 
\end_layout

\begin_layout Plain Layout
The values below are in hexadecimal format for explanatory purposes, but
 the value assigned to the handresetmethod symbol must be specified in decimal
 (base-10) format.
 As an example, if you want to instruct OpenHoldem to treat a change in
 dealer button OR a change in player cards as a "hand reset", then handresetmeth
od should be set to 5.
 If you want to instruct OpenHoldem to treat only a change in dealer button
 as a “hand reset", then handresetmethod should be set to 1.
\end_layout

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="3">
<features>
<column alignment="center" valignment="top" width="15col%">
<column alignment="center" valignment="top" width="15col%">
<column alignment="left" valignment="top" width="45col%">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
bit
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
binary
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
meaning
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0b00000001
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
dealer button
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0b00000010
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
handnumber 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0b00000100
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
player cards (not triggered by change to "no cards" or to "card backs")
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
Default: None, must be explicitly specified
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
balancenumbersonly 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
This Symbol instructs the screen scraper that all characters besides numbers
 (0-9 and dot/decimal separator) are stripped from the text transform result
 for balance regions.
 This is useful for those casinos that include spurious/changing alphanumeric
 information in their balance boxes.
 Setting this string to "True" or "Yes" will enable balance cleansing, any
 other value or the absence of this Symbol will result in no balance cleansing.
 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
chipscrapemethod
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
This Symbol instructs the “chip stack counter” within the screen scraper
 engine to act in one of three distinct modes of operation: If this Symbol
 is not present, or does not match one of the other formats, the “chip stack
 counter” begins counting chips at the 00 Region record, stops counting
 a given stack when a chip match is not found, and stops counting all stacks
 when the first chip in a given stack is not matched.
 This is the default, pre-2.0 behavior.
 If this symbol is set to "All”, then the scraper engine will check all
 200 possible chip locations (10 stacks of 20 chips) every time a chip count
 is required.
 If this symbol is set to the format "XxY", where X is an integer between
 1 and 10 representing the number of stacks, and Y is an integer between
 1 and 20 representing the number of chips in each stack, then the scraper
 engine will check X times Y chip locations every time a chip count is required.
 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Scraperdll
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
This Symbol instructs OpenHoldem to load a user-supplied external scraper
 override DLL when this Table Map is used.
 This external DLL can be used to override the results of the internal scraper
 engine.
 This DLL is called immediately after the internal scraper engine finishes
 its pass every heartbeat, at which point the current state of the internal
 screen scraper is passed to the DLL for inspection and modification.
 A reference scraper DLL is provided in the source code as a starting point.
 An obvious use of this would be to hook or inject the target casino client
 to retrieve better state information than that which could be collected
 using the built-in pixel-based screen scraper.
 
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard

\end_layout

\end_body
\end_document
