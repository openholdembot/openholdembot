#LyX 1.6.2 created this file. For more info see http://www.lyx.org/
\lyxformat 345
\begin_document
\begin_header
\textclass amsbook
\use_default_options true
\begin_modules
theorems-ams
\end_modules
\language english
\inputencoding auto
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Chapter
\begin_inset Index
status open

\begin_layout Plain Layout
Perl
\end_layout

\end_inset

Perl 
\end_layout

\begin_layout Standard
The purpose of the Perl option is to provide a scripting language for beginners
 that is possibly easier to get productive with, if you either already familiar
 with Perl, or have a strong disposition for not using OH-Script.
\end_layout

\begin_layout Section
Advantages of Perl 
\end_layout

\begin_layout Itemize
Suitability for rapid prototyping 
\end_layout

\begin_layout Itemize
Wide-spread usage
\end_layout

\begin_layout Itemize
Many libraries available and an active community at 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://cpan.org
\end_layout

\end_inset

 
\end_layout

\begin_layout Itemize
Really good interfacing, e.g.
 to C.
 
\end_layout

\begin_layout Itemize
Syntax similar to C and some other script languages (bash, awk, tcl)
\end_layout

\begin_layout Section
Disadvantages of Perl 
\end_layout

\begin_layout Itemize
Performance: Perl compiles to intermediate code (similar to bytecode), which
 gets executed by the interpreter.
 This is slower than compiled binary code, however some built-in functions
 (e.g.
 string- and list-operations) are said to be faster than C.
 
\end_layout

\begin_layout Itemize
Clarity.
 Perl is a language, which bought good ideas from nearly everywhere.
 You can write clear and understandable programs, if you want; but most
 Perl "gurus" are famous for the opposite.
 It is quite easy to write non-maintainable obfuscated Perl code.
\end_layout

\begin_layout Section
Installation and configuration of Perl 
\end_layout

\begin_layout Itemize
Download ActivePerl
\begin_inset Foot
status open

\begin_layout Plain Layout
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.activestate.com/Products/activeperl 
\end_layout

\end_inset


\end_layout

\end_inset

 install.
\end_layout

\begin_layout Itemize
Perl needs the package "Win32::API" to interact with the callback DLL.
 Download this package using Perl’s package manager.
 Type at the command line (case sensitive; you should have administrator
 privileges to do this): 
\family typewriter
ppm install Win32::API
\family default
 .
\end_layout

\begin_layout Itemize
OpenHoldem must be able to find "PerlEz.dll" which contains our embedded
 interpreter.
 You must change the DLL search path from the DOS prompt: 
\family typewriter
set PATH = C:
\backslash
Programs
\backslash
Perl
\backslash
Bin;%PATH%
\family default
.
 
\end_layout

\begin_layout Itemize
You need Visual C++ 2005 redist.
 package from Microsoft (SP1), especially msvcrt.dll, otherwise Perl can't
 load correctly (you will get a message: "PerlEz.dll not found or not accessible"
).
\end_layout

\begin_layout Section
Perl usage 
\end_layout

\begin_layout Standard
All symbols beginning with "pl_" (e.g.
 "pl_call") in your formula will be treated as Perl symbols and requested
 from OpenHoldem’s built-in Perl interpreter.
 The same for gws-calls inside the dll.
 All symbols are expected to be either double constants, double variables
 or functions without parameters returning a double value.
 
\end_layout

\begin_layout Standard
Perl for OpenHoldem has a built-in function "gws" (get_WinHoldem_Symbol),
 allowing you to request OpenHoldem symbols or DLL symbols in your Perl
 formulas.
 (Therefore you have full interoperability of OH script, DLL and Perl.
 You can further use all your existing code)
\begin_inset Marginal
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename C:/Dokumente und Einstellungen/TheRoot/Desktop/OH_SVN/trunk/Documentation/Images/Hint.jpg

\end_inset


\end_layout

\end_inset

.
 This function "gws" resides in a package called "Perl_OH_Interaction.pm",
 which you have to include in your bot: use Perl_OH_Interaction; 
\end_layout

\begin_layout Standard
The table name can be accessed using the function gwt().
 To get a player name for a given chair use gwp(N), where N is the chair
 number.
 Load a Perl file via the menu or using the preferences.
\end_layout

\begin_layout Section
Perl recommended Resources
\end_layout

\begin_layout Itemize
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://en.wikipedia.org/wiki/Perl 
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Wainwright: Professional Perl Programing 
\end_layout

\begin_layout Itemize
Schwartz: Learning Perl, Intermediate Perl, Mastering 
\end_layout

\begin_layout Itemize
Perl Conway: Perl hacks, tips and tools for programing, debugging and surviving
 
\end_layout

\begin_layout Itemize
Till: Teach yourself Perl in 21 days
\end_layout

\begin_layout Section
Perl editors 
\end_layout

\begin_layout Standard
You may need an editor with syntax-highlighting for Perl.
 
\end_layout

\begin_layout Itemize
emacs
\begin_inset Foot
status open

\begin_layout Plain Layout
\begin_inset Flex URL
status open

\begin_layout Plain Layout

ftp://ftp.gnu.org/gnu/emacs/windows/
\end_layout

\end_inset

 Take the bin.tar.gz.
\end_layout

\end_inset

 (wonderful editor from the UNIX world; for windows and free) 
\end_layout

\begin_layout Itemize
Komodo-Edit
\begin_inset Foot
status open

\begin_layout Plain Layout
recommended by 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://www.activestate.com
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Perl demo bot 
\end_layout

\begin_layout Standard
You will find an extremely simple demo bot at 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.maxinmontreal.com/forums/viewtopic.php?p=20129 
\end_layout

\end_inset


\begin_inset Note Note
status open

\begin_layout Plain Layout
!!!download package!!!
\end_layout

\end_inset

.
 It contains including:
\end_layout

\begin_layout Itemize
A classic formula, redirecting some symbols to Perl functions 
\end_layout

\begin_layout Itemize
A nearly empty Perl bot, giving you a start 
\end_layout

\begin_layout Itemize
The module Perl_OH_Interaction.pm, providing the "gws" function
\end_layout

\begin_layout Standard
To use it, you have to adapt the following lines according to your system
 settings: 
\end_layout

\begin_layout Itemize

\family typewriter
use lib "C:
\backslash
..."
\end_layout

\begin_layout Itemize

\family typewriter
use constant the_DebugFile => "..."
\end_layout

\end_body
\end_document
