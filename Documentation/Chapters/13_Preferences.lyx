#LyX 1.6.2 created this file. For more info see http://www.lyx.org/
\lyxformat 345
\begin_document
\begin_header
\textclass amsbook
\use_default_options true
\begin_modules
theorems-ams
\end_modules
\language english
\inputencoding auto
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Chapter
\begin_inset Index
status open

\begin_layout Plain Layout
Preferences
\end_layout

\end_inset

Preferences
\end_layout

\begin_layout Standard
The preferences for OpenHoldem’s operation can be accessed via the Edit/Preferen
ces menu item from the main window.
 A description of each preference follows.
\end_layout

\begin_layout Standard
Figure 5.18-45
\end_layout

\begin_layout Section
OpenHoldem Preferences – 
\begin_inset Index
status open

\begin_layout Plain Layout
Analyzer
\end_layout

\end_inset

Analyzer
\end_layout

\begin_layout Standard
Analyzer preferences control how the OpenHoldem Iterator functions.
 At the moment there is only one preference available here.
 See the {The Iterator} section for more information.
\end_layout

\begin_layout Itemize

\emph on
Max opponents
\emph default
: The OpenHoldem Iterator uses the value of the 
\begin_inset Index
status open

\begin_layout Plain Layout
f$P
\end_layout

\end_inset

f$P function as the number of opponents in its Monte Carlo simulation.
 The maximum value that f$P can return is set here, any value of f$P greater
 than this will result in the number specified in this preference being
 used instead.
\end_layout

\begin_layout Standard
Figure 5.18-46 
\end_layout

\begin_layout Section
OpenHoldem Preferences – 
\begin_inset Index
status open

\begin_layout Plain Layout
Autoconnector
\end_layout

\end_inset

Autoconnector
\end_layout

\begin_layout Standard
Autoconnector preferences control how the OpenHoldem Autoconnector functions.
 See the {The Automation} section for more information.
\end_layout

\begin_layout Itemize

\emph on
Window selection:
\end_layout

\begin_deeper
\begin_layout Itemize

\emph on
Manual choice: 
\emph default
The classical method.
 If exactly one table and exactly one matching tablemap exist OpenHoldem
 will connect to that table directly, otherwise it will present a dialog
 with a list of choices for manual selection.
 This behaviour was quite inconvenient in production, but is still supported
 for backward compatibility.
\end_layout

\begin_layout Itemize

\emph on
Automatical choice: 
\emph default
This option will pick the first available table on every attempt to connect,
 that is not yet attached to another instance of OpenHoldem.
 If no such table is available, it will fall silently.
 If multiple tablemaps in the 
\begin_inset Index
status collapsed

\begin_layout Plain Layout
Scraper-folder
\end_layout

\end_inset

scraper-folder fit to that table it will also pick the 
\begin_inset Quotes eld
\end_inset

first
\begin_inset Quotes erd
\end_inset

 one, so be careful, if you want to keep different versions of the same
 map.
\end_layout

\end_deeper
\begin_layout Itemize

\emph on
Auto-connect on start: 
\emph default
This setting is pretty self-explanatory.
 OpenHolden will try to connect once to a table at startup.
 This setting is especially useful in combination with the option to automatical
ly choose a table.
 If no table exists, that fits to a tablemap -- or if all such tables are
 already getting served -- OpenHoldem will skip the connection and start
 normally; in this case you can connect OpenHoldem later, either by pressing
 the greeen button or by sending a connect-message.
\end_layout

\begin_layout Itemize

\emph on
Close OH when table disappears: 
\emph default
This option will terminate OpenHoldem, when the poker table stops to exist,
 e.g.
 when the table got closed by the hopper or when you get moved to another
 table in a MTT.
 This method is for you, if your philosophy to do reconnects is to close
 OpenHoldem and to simply fire up another instance.
 The other way to do reconnects would be to not close OpenHoldem and to
 connect it again, when the ->hopper opens a new table (either by pushing
 the green button or using ->connect by HWND)
\begin_inset Foot
status open

\begin_layout Plain Layout
Fully automated reconnects are not implemented; they would cause a too high
 CPU-load (currently each attempt to connect has to load every single tablemap),
 they would therefore require lots of refactoring and could thus become
 the source of many subtle mistakes in a multi-threaded environment.
 Therefore we decided against that feature.
 This is no loss, as there are at least three other ways to do reconnects
 as described above.
\end_layout

\end_inset

.
\end_layout

\begin_layout Section
OpenHoldem Preferences – 
\begin_inset Index
status open

\begin_layout Plain Layout
Autoplayer
\end_layout

\end_inset

Autoplayer
\end_layout

\begin_layout Standard
Autoplayer preferences control how the OpenHoldem Autoplayer functions.
 See the {The Autoplayer} section for more information.
\end_layout

\begin_layout Itemize

\emph on
Frame delay
\emph default
: This parameter specifies how many simultaneous identical screen scrapes
 must occur prior to the Autoplayer taking action.
 Generally, you want to have a stable poker screen before your take action,
 and this setting will allow various animations and so forth to finish,
 ensuring that your poker logic has correct game state information prior
 to making a decision.
 
\begin_inset Note Note
status open

\begin_layout Plain Layout
What does 0 mean?
\end_layout

\end_inset


\end_layout

\begin_layout Itemize

\emph on
\begin_inset Index
status open

\begin_layout Plain Layout
SWAG-delay
\end_layout

\end_inset

SWAG Delay, select to delete
\emph default
: For SWAG actions, this setting determines how long (in milliseconds) that
 OpenHoldem will pause after performing the SWAG Select action as specified
 in the Table Map, and prior to performing the SWAG Delete action as specified
 in the Table Map.
 These preferences are not set in the Table Map itself, as these are highly
 dependent on your CPU and network capacity and utilization, and thus are
 largely specific to your particular computing environment.
 SWAG Delay, delete to entry: For SWAG actions, this setting determines
 how long (in milliseconds) that OpenHoldem will pause after performing
 the SWAG Delete action as specified in the Table Map and prior to performing
 the SWAG Entry action.
 These preferences are not set in the Table Map itself, as these are highly
 dependent on your CPU and network capacity and utilization, and thus are
 largely specific to your particular computing environment.
 
\end_layout

\begin_layout Itemize

\emph on
SWAG Delay, entry to confirm
\emph default
: For SWAG actions, this setting determines how long (in milliseconds) that
 OpenHoldem will pause after performing the SWAG Entry action, and prior
 to performing the SWAG Confirm action as specified in the Table Map.
 These preferences are not set in the Table Map itself, as these are highly
 dependent on your CPU and network capacity and utilization, and thus are
 largely specific to your particular computing environment.
 
\end_layout

\begin_layout Itemize

\emph on
Engage Autoplayer automatically
\emph default
: This setting instructs OpenHoldem to automatically start the Autoplayer
 when it has identified the user’s chair.
 
\end_layout

\begin_layout Itemize

\emph on
Detect 
\emph default

\begin_inset Index
status open

\begin_layout Plain Layout
loss of Swag-focus
\end_layout

\end_inset


\emph on
loss of focus on SWAG
\emph default
: The SWAG action is the longest running of the poker actions, due to the
 need to select the text, delete it, enter the bet and confirm it.
 Occasionally, focus will be lost from the table that the SWAG action is
 being executed on, either due to multi-tabling (maybe the casino is set
 up to pop the table that requires your attention to the front?), or perhaps
 due to you or your Automation solution clicking elsewhere when the Autoplayer
 was working.
 When this loss of focus occurs, and if this setting is checked, then OpenHoldem
 will cancel the current SWAG attempt and retry on the next scrape cycle.
 
\end_layout

\begin_layout Itemize

\emph on
Use ‘comma’ instead of ‘dot’
\emph default
: Some casinos require the use of the “comma” as a decimal separator rather
 than the “dot”.
 This setting will instruct OpenHoldem to use a comma if needed.
 Eventually this setting should be moved to the Table Map file itself, as
 it is casino-specific.
 
\end_layout

\begin_layout Itemize

\emph on
Only calculate standard function on my turn
\emph default
: Normally, OpenHoldem will calculate the primary functions on every scrape
 cycle.
 This setting will instruct OpenHoldem to only calculate these primary functions
 when it is your turn (card faces and action buttons are present).
 It will also prevent the calculation of most of the CPU expensive symbols
 including prwin/prlos/prtie, however the handrank symbols will be calculated
 as these are commonly used in the 
\begin_inset Index
status open

\begin_layout Plain Layout
f$prefold
\end_layout

\end_inset

f$prefold calculations.
 f$prefold and 
\begin_inset Index
status open

\begin_layout Plain Layout
f$play
\end_layout

\end_inset

f$play are still evaluated regardless if it is your turn or not.
 
\end_layout

\begin_layout Itemize

\emph on
Only act with 
\begin_inset Index
status open

\begin_layout Plain Layout
Balance stability
\end_layout

\end_inset

balance stability
\emph default
: In previous versions of OpenHoldem, the Autoplayer would act even if you
 had critical misscrapes.
 Once of those critical misscrapes is a missing player balance, due to the
 balance box changing to “All-In” instead of zero, for example, when a player
 goes all in.
 Enabling this option will prevent the Autoplayer from acting when a balance
 misscrape is detected.
 If you do not require balance information in your bot logic, you can safely
 leave this box unchecked.
\end_layout

\begin_layout Standard
Figure 5.18-47 
\end_layout

\begin_layout Section
OpenHoldem Preferences – 
\begin_inset Index
status open

\begin_layout Plain Layout
Chat
\end_layout

\end_inset

Chat
\end_layout

\begin_layout Standard
Chat preferences control how the OpenHoldem’s Chat feature in the Autoplayer
 functions.
 See the {f$chat} section for more information.
\end_layout

\begin_layout Itemize

\emph on
Enable Chat
\emph default
: This parameter will completely disable the Chat feature if unchecked 
\end_layout

\begin_layout Itemize

\emph on
Minimum delay
\emph default
: This is the minimum amount of time that Chat will wait (in seconds) between
 the posting of messages to the chat box on the Casino client.
 This is a safety feature and is present to prevent accidental spamming
 of the chat box.
 Feel free to set this to “1” if you are overly confident in your configuration
 skills.
 
\end_layout

\begin_layout Itemize

\emph on
Random delay
\emph default
: In addition to the “Minimum delay”, the amount of time specified in this
 parameter (in seconds) will be used to randomly delay the entry of a chat
 message into the chat box.
 The setting here is the maximum amount of random delay.
\end_layout

\begin_layout Standard
Figure 5.18-48
\end_layout

\begin_layout Section
OpenHoldem Preferences - 
\begin_inset Index
status open

\begin_layout Plain Layout
DLL
\end_layout

\end_inset

DLL Extension
\end_layout

\begin_layout Standard
DLL Extension preferences control how the OpenHoldem works with a User DLL.
 See the {User DLL} section for more information.
\end_layout

\begin_layout Itemize

\emph on
Always send state messages
\emph default
: By default, OpenHoldem will send “state” messages to a loaded User DLL
 on every scrape cycle, regardless of whether or not your player is currently
 in the hand.
 If this box is unchecked, these “state” messages will not be sent when
 you are “not playing”.
 This can be useful to avoid unnecessary consumption of CPU in the DLL when
 not needed.
 
\end_layout

\begin_layout Itemize

\emph on
Load DLL on startup?
\emph default
: If this setting is checked, OpenHoldem will try to automatically load
 a User DLL when the program starts up.
 The order in which files are tried is as follows: The DLL as specified
 in the loaded Formula file The DLL as specified in this preferences window
 (below) 
\end_layout

\begin_layout Itemize

\emph on
Name of DLL to load on startup
\emph default
: This specifies a DLL file to load on startup.
 This file is only attempted if the “Load DLL on startup” setting is checked.
\end_layout

\begin_layout Standard
Figure 5.18-49 
\end_layout

\begin_layout Section
OpenHoldem Preferences – 
\begin_inset Index
status open

\begin_layout Plain Layout
GUI
\end_layout

\end_inset

GUI
\end_layout

\begin_layout Standard
GUI preferences control how the OpenHoldem GUI operates on startup.
\end_layout

\begin_layout Itemize

\emph on
Start minimized: 
\emph default
This option will cause OpenHoldem to start in minimzed mode.
 It is especially useful, if you have to start new bots during a session
 and don't want to accept the risk of occluding tables and causing misscrapes.
\end_layout

\begin_layout Itemize

\emph on
Disable preferences dialog (formula parsing): 
\emph default
If this option is checked OpenHoldem will not show the progress dailog when
 parsion a formula (OHF).
 This is meant to avoid occlusion in a production environment.
 Currently the dialog is created (or not) once at startup, so changes in
 this setting will only take effect, when you start OpenHoldem again.
\end_layout

\begin_layout Section
OpenHoldem Preferences – 
\begin_inset Index
status open

\begin_layout Plain Layout
ICM
\end_layout

\end_inset

ICM
\end_layout

\begin_layout Standard
ICM preferences control how the OpenHoldem Independent Chip Model calculator
 operates.
 There are a plethora of resources online for understanding the Independent
 Chip Model
\begin_inset Foot
status open

\begin_layout Plain Layout
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

!!!
\end_layout

\end_inset


\end_layout

\end_inset

.
 
\end_layout

\begin_layout Itemize

\emph on
1st through 5th place
\emph default
: These settings specify the values of 1st through 5th place of your tournament,
 and are directly used in the ICM Engine’s calculations.
 Specify percentages or absolute prize values here.
 Percentages should add up to 100% if you want to ensure trusted results.
 Enter zero if a prize is not paid out for the structure of the game you
 are playing.
\end_layout

\begin_layout Standard
Figure 5.18-50 
\end_layout

\begin_layout Section
OpenHoldem Preferences – 
\begin_inset Index
status open

\begin_layout Plain Layout
Logging
\end_layout

\end_inset

Logging
\end_layout

\begin_layout Standard
Logging preferences control what information OpenHoldem will periodically
 write to various log files.
 
\end_layout

\begin_layout Itemize

\emph on
Enable Log Symbols
\emph default
: If this setting is checked, any log$ symbols that are encountered in your
 OH-Script will be added to OpenHoldem’s log file.
 Everytime a log$ symbol is accessed it will be flagged for logging.
 You can use this to track which part of your formula is responsible for
 the action taken by OpenHoldem.
 You want to use the log$ symbol at the end of a logic block, to make sure
 it only gets flagged when all the previous statements are true.
 
\end_layout

\begin_layout Itemize

\emph on
Maximum symbols
\emph default
: This is used in conjunction with the “Enable Log Symbols” preference,
 and specifies the maximum number of log$ symbols that will be logged per
 action.
 When “Enable Log Symbols” enabled, up to four log$ symbols will be displayed
 in OpenHoldem's main window in the center information box.
 
\end_layout

\begin_layout Itemize

\emph on
Enable 
\begin_inset Index
status open

\begin_layout Plain Layout
Autoplayer Trace
\end_layout

\end_inset

Autoplayer Trace
\emph default
: This setting will enable tracing to the log file of the Autoplayer’s evaluatio
n process.
 The primary functions that are traced are selected in the listbox control
 directly below.
 See the {Autoplayer Trace} sub-section in the {Validator} section for more
 information.!!!??? 
\end_layout

\begin_layout Itemize

\emph on
Disable all runtime MessageBoxes
\emph default
: This preference will prevent OpenHoldem from displaying warning and error
 message boxes during runtime (when OpenHoldem is connected to a table).
 This is extraordinarily dangerous and should only be used when you have
 a 100% stable bot that you want to move to a fully automated execution
 model.
 It is strongly advised that you do not check this option until you have
 a very stable and thoroughly tested botting environment.
 
\end_layout

\begin_layout Itemize

\emph on
Debug output level
\emph default
: This will control the verbosity of the output written to the log files.
 Zero will disable all logging, and 3 is the highest level of logging.
 At the time of this writing, detailed level-3 logging is available for
 critical parts of OpenHoldem, including the heartbeat thread, the Screen
 Scraper engine, the Autoplayer engine and the Rebuy management.
 
\end_layout

\begin_layout Itemize

\emph on
Poker Tracker debug output level
\emph default
: This will control the verbosity of the output written to the Poker Tracker
 log files.
 Zero will disable all logging, and 3 is the highest level of logging.
 
\end_layout

\begin_layout Standard
Figure 5.19-51 
\end_layout

\begin_layout Section
OpenHoldem Preferences – 
\begin_inset Index
status open

\begin_layout Plain Layout
Obscure
\end_layout

\end_inset

Obscure
\end_layout

\begin_layout Standard
Obscure preferences control various detectable components of OpenHoldem,
 and are primarily useful in setting up a highly stealthed environment.
 See the {Stealth} chapter for more information.
 
\end_layout

\begin_layout Itemize

\emph on
Window Class Name
\emph default
: Every window running under Microsoft Windows has a specific “class name”
 associated with it.
 This is easily identifiable by the casinos’ poker software and it is suggested
 that this be changed to something else.
 
\end_layout

\begin_layout Itemize

\emph on
\begin_inset Index
status open

\begin_layout Plain Layout

\emph on
Mutex
\end_layout

\end_inset

Mutex Name
\emph default
: OpenHoldem uses system-wide mutexes to ensure that multiple running instances
 of OpenHoldem do not interfere with each other when performing Autoplayer
 actions.
 The name of this system-wide mutex is easily identifiable by the casinos’
 poker software and it is suggested that this be changed to something else.
 
\end_layout

\begin_layout Itemize

\emph on
Simple Main Window Title
\emph default
: By default, OpenHoldem will include all sorts of useful information in
 its window title bar.
 This useful information is also easily identifiable by the casinos’ poker
 software.
 Check this preference to use a simple window title instead.
\end_layout

\begin_layout Standard
Figure 5.19-52 
\end_layout

\begin_layout Section
OpenHoldem Preferences – 
\begin_inset Index
status open

\begin_layout Plain Layout
Perl
\end_layout

\end_inset

Perl
\end_layout

\begin_layout Standard
Perl preferences control how OpenHoldem interacts with the installed Perl
 interpreter and your Perl formulas.
 See the {Perl} section for more information on installing and configuring
 Perl.
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="2">
<features>
<column alignment="left" valignment="top" width="35text%">
<column alignment="left" valignment="top" width="65text%">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Load Perl interpreter
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
When checked, this preference will cause the Perl interpreter to be loaded
 into memory.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Load default Perl formula
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
When checked, this preference will cause the default Perl formula (as specified
 in “Default formula” directly below) to be loaded on startup.
 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Default formula
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
This is the path to the Perl formula that will be loaded if the “Load default
 Perl formula” preference is checked.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Perl editor
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
This is the path to the editor that will be launched when a Perl formula
 is selected for editing from the Perl menu on the main window.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Figure 5.19-53 
\end_layout

\begin_layout Section
OpenHoldem Preferences - 
\begin_inset Index
status open

\begin_layout Plain Layout
Poker Tracker
\end_layout

\end_inset

Poker Tracker
\end_layout

\begin_layout Standard
Poker Tracker preferences control how OpenHoldem interacts with a Poker
 Tracker database.
 See the {PokerTracker} section for more information on using Poker Tracker
 with OpenHoldem.
\end_layout

\begin_layout Itemize

\emph on
Disable all Poker Tracker access
\emph default
: Checking this preference will completely disable all Poker Tracker functionali
ty in OpenHoldem.
 If you make no use of any Poker Tracker symbols, then it is safe to check
 this box.
 
\end_layout

\begin_layout Itemize

\emph on
Poker Tracker version
\emph default
: OpenHoldem supports interacting with both 
\begin_inset Index
status open

\begin_layout Plain Layout
PT2
\end_layout

\end_inset

Poker Tracker v2 and 
\begin_inset Index
status open

\begin_layout Plain Layout
PT3
\end_layout

\end_inset

Poker Tracker v3 databases.
 This setting will instruct OpenHoldem as to which flavor of Poker Tracker
 you are using.
 
\end_layout

\begin_layout Itemize

\emph on
Host Name / IP Address, Port, Username, Password, DB Name
\emph default
: These are the parameters that you entered when you setup your Poker Tracker
 
\begin_inset Index
status open

\begin_layout Plain Layout
PostgreSQL
\end_layout

\end_inset

PostgreSQL database.
 Enter them here so OpenHoldem knows how to connect to your database.
 If you do not understand what these settings mean, please refer to the
 Poker Tracker homepage
\begin_inset Foot
status open

\begin_layout Plain Layout
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.pokertracker.com
\end_layout

\end_inset


\end_layout

\end_inset

 for more information.
\end_layout

\begin_layout Itemize

\emph on
Update delay
\emph default
: OpenHoldem maintains an internal cache of Poker Tracker statistics that
 it periodically queries from the Poker Tracker database.
 This setting determines the frequency that OpenHoldem will use (in seconds)
 to consider re-querying those statistics.
 This setting is akin to the “Scrape Delay” setting in the Scraper preferences
 for the screen scraper engine.
 This parameter does not need to be a particularly small value, as the informati
on in Poker Tracker does not change that often itself.
 Note: Just because this delay has expired, and the Poker Tracker query
 engine “wakes up”, does not guarantee that every statistic will be updated.
 Rather, this works in conjunction with the “Cache refresh” parameter below
 to decide if a statistic needs updating or not.
 
\end_layout

\begin_layout Itemize

\emph on
Cache refresh
\emph default
: After the Poker Tracker query engine has been “woken up”, because the
 delay specified in the “Update delay” parameter has expired, the engine
 will scan through each of its statistics for every chair and determine
 if that statistic needs updating or not.
 If the duration between now and the last time that a given statistic was
 retrieved from Poker Tracker is greater than this parameter (in seconds),
 then the engine considers the statistic to be stale and will query Poker
 Tracker for a new value.
 
\end_layout

\begin_layout Itemize

\emph on
Test
\emph default
: This button will test the connection to the Poker Tracker database as
 specified by the above parameters and will report success or failure codes.
 Help with connecting to PostgreSQL databases can be found here: http://www.poker
tracker.com, or here: http://www.postgresql.org 
\end_layout

\begin_layout Standard
Figure 5.19-54 
\end_layout

\begin_layout Section
OpenHoldem Preferences - 
\begin_inset Index
status open

\begin_layout Plain Layout
Rebuy
\end_layout

\end_inset

Rebuy
\end_layout

\begin_layout Standard
Rebuy preferences control how OpenHoldem controls
\begin_inset Note Note
status open

\begin_layout Plain Layout
bad english!
\end_layout

\end_inset

 the external rebuy-script.
 See the {The Automation} section for more information.
\end_layout

\begin_layout Itemize

\emph on
Change in handnumber: 
\emph default
This option will cause OpenHoldem to wait at least for a new hand before
 doing a second rebuy.
 It is a simply sanity-check to prevent too many rebuys, as most casinos
 will increase your balance only after the end of the current hand.
\end_layout

\begin_layout Itemize

\emph on
No cards: 
\emph default
This option will prevent rebuys as long as you are involved in a hand.
\end_layout

\begin_layout Itemize

\emph on
Heuristic occlusion check: 
\emph default
Rebuys are especially volatile against misscrapes of the balance, which
 could be caused e.g.
 by temporary occlusion
\begin_inset Foot
status open

\begin_layout Plain Layout
The truths is: OpenHoldem will keep the last known balance, if it can't
 scrape the balance correctly.
 But it's always good to have another safety-net, isn't it?
\end_layout

\end_inset

.
 The option to do heuristic occlusion checks will cause OpenHoldem to look
 at other players names and balances to guess, if heros balance is occluded.
 In case of a probable occlusion the rebuy-process won't be started.
 Heuristic occlusion checks will add some extra safety, but they won't catch
 every misscrape; e.g.
 the very unfortunate case of a partial occluded, but non-zero balance will
 still get accepted.
\end_layout

\begin_layout Itemize

\emph on
Minimum time to next rebuy: 
\emph default
This option is another sanity check to prevent to much rebuys in a short
 period of time.
 The time difference gets specified in seconds.
\end_layout

\begin_layout Itemize

\emph on
\begin_inset Index
status open

\begin_layout Plain Layout
Rebuy-script
\end_layout

\end_inset

Rebuy-script: 
\emph default
This is the path to the external script that will be launched when a rebuy
 is required.
\end_layout

\begin_layout Section
OpenHoldem Preferences - 
\begin_inset Index
status open

\begin_layout Plain Layout
Replay frames
\end_layout

\end_inset

Replay Frames
\end_layout

\begin_layout Standard
Replay Frames preferences control how OpenHoldem collects Replay Frames
 for offline development and debugging use.
 See the {Replay Frames} section for more information on using Replay Frames.
\end_layout

\begin_layout Itemize

\emph on
Automatically record replay frames
\emph default
: If this setting is checked, OpenHoldem will automatically record Replay
 Frames.
 The alternative is manual Replay Frame collection by using the “camera”
 button on the main toolbar.
\end_layout

\begin_layout Itemize

\emph on
But do it on every change in table state
\emph default
: If the “Automatically record replay frames” preference is checked, this
 option will be available to instruct OpenHoldem to collect Replay Frames
 on every change in table state.
 Typically, OpenHoldem only collects Replay Frames when it is your turn
 to act.
 
\end_layout

\begin_layout Itemize

\emph on
Record every change when in hand
\emph default
: If the “Automatically record replay frames” preference is checked, this
 option will be available to instruct OpenHoldem to collect Replay Frames
 on every screen scrape cycle when you are in the hand.
 Typically, OpenHoldem only collects Replay Frames when it is your turn
 to act.
 
\end_layout

\begin_layout Itemize

\emph on
Maximum frames to store
\emph default
: OpenHoldem will collect a maximum number of Replay Frames as specified
 by this parameter, then it will reuse filenames starting at the beginning.
\end_layout

\begin_layout Standard
Figure 5.19-55 
\end_layout

\begin_layout Section
OpenHoldem Preferences – 
\begin_inset Index
status open

\begin_layout Plain Layout
Scraper
\end_layout

\end_inset

Scraper
\end_layout

\begin_layout Standard
Scraper preferences control how the OpenHoldem Screen Scraper engine functions.
 At the moment there is only one preference available here.
 See the {Creating a Table Map} section for more information.
\end_layout

\begin_layout Itemize

\emph on
\begin_inset Index
status open

\begin_layout Plain Layout
Scrape delay
\end_layout

\end_inset

Scrape Delay
\emph default
: This parameter specifies the amount of time (in milliseconds) that the
 OpenHoldem Screen Scraper engine will pause in between subsequent screen
 scrape passes.
 This amount of time does not specify the time from the beginning of scrape
 1 to the beginning of scrape 2, but rather the amount of delay between
 the end of scrape 1 and the beginning of scrape 2.
 The primary consideration for this parameter is that of CPU consumption,
 and the default of 750ms seems to work well for most people.
\end_layout

\begin_layout Standard
Figure 5.19-56
\end_layout

\begin_layout Section
OpenHoldem Preferences – 
\begin_inset Index
status open

\begin_layout Plain Layout
Symbols
\end_layout

\end_inset

Symbols
\end_layout

\begin_layout Standard
Symbols preferences control various aspects of OpenHoldem’s calculated symbols.
 See the {Calculated SymbolsCreating a Table Map} section for more information.
 
\end_layout

\begin_layout Itemize

\emph on
Time Period to Average 
\begin_inset Index
status open

\begin_layout Plain Layout
Table Stats
\end_layout

\end_inset

Table Stats
\emph default
: As discussed in the {Calculated Symbols} section, the Table Stats symbols
 (floppct, turnpct, riverpct, avgbetspf and tablepfr) are calculated on
 a rolling time average.
 The time frame (in minutes) specified by this parameter determines how
 far back in time these averages are calculated.
 For example, if this is set to 15 minutes, then the averages will be for
 the last 15 minutes of activity at the table.
 
\end_layout

\begin_layout Itemize

\emph on
Value of “handrank”
\emph default
: 
\begin_inset Index
status open

\begin_layout Plain Layout
handrank
\end_layout

\end_inset

handrank is a calculated symbol, and is set to one of 169, 1000, 1326, 2652
 or p.
 Depending on the option selected here, handrank will be set equal to the
 calculated handrank169, handrank1000, handrank1326, handrank2652 or handrankp
 symbols.
 This setting also determines the hand rank value that is displayed on the
 main window’s status bar (see {Status Bar} for more information).
 See section {Starting Hand } for more information on hand ranks.
 
\end_layout

\begin_layout Itemize

\emph on
Disable all 
\begin_inset Index
status open

\begin_layout Plain Layout

\emph on
Symbol caching
\end_layout

\end_inset

symbol caching
\emph default
: The normal operation for the OpenHoldem parsing and decision engine is
 to cache the results of each symbol that it calculates in a given scrape
 cycle.
 The reason for this, is that if a UDF is referenced 100 times in a given
 function calculation, it makes sense to save the results of the first calculati
on, and then reuse the results in the other 99 references.
 This is just an efficient use of CPU resources.
 By checking this preference, you instruct OpenHoldem to bypass this caching
 and guarantee that each symbol is re-calculated each time it is needed.
 Whether this option is checked or unchecked, dll$ symbols are never cached,
 as if a caching of User DLL symbols is needed, that can easily be accommodated
 in the DLL itself by the DLL developer.
\end_layout

\begin_layout Standard
Figure 5.19-57 
\end_layout

\begin_layout Section
OpenHoldem Preferences – 
\begin_inset Index
status open

\begin_layout Plain Layout
Validator
\end_layout

\end_inset

Validator
\end_layout

\begin_layout Standard
Validator preferences control various aspects of OpenHoldem’s Validator
 engine.
 See the {Validator} section for more information.
 This is a new feature in OpenHoldem version 2.0.
 The purpose of the Validator is to help people to develop more reliable
 bots and Table Maps.
 It will execute several hundred 
\begin_inset Index
status open

\begin_layout Plain Layout
Consistency-checks
\end_layout

\end_inset

consistency-checks at the symbol level to detect invalid game-states, 
\begin_inset Index
status open

\begin_layout Plain Layout
Mis-scrapes
\end_layout

\end_inset

mis-scrapes or incomplete information.
 The Validator will write possible problems to the log-file and also show
 a message box, as long as messages are not disabled.
 The rules used by the Validator are always being refined and developed.
 The discussion forum is the best place to keep on top of this
\begin_inset Foot
status open

\begin_layout Plain Layout
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.maxinmontreal.com/forums/viewtopic.php?f=189 
\end_layout

\end_inset


\end_layout

\end_inset

.
\end_layout

\begin_layout Standard

\emph on
Enable Validator
\emph default
: This preference determines when the Validator is engaged to do its work,
 either never (completely off), when it is my turn, or always.
\end_layout

\begin_layout Standard

\emph on
Use Heuristic Rules
\emph default
: Some rules are heuristic, i.e.
 they are "common sense", but not always true.
 Example: A game does usually not last longer than 2 minutes, so the autoplayer
 has to act at least once per 120 seconds.
 If it does not do so, there seems to be a problem.
 Maybe the Table Map does not detect the players cards or the buttons.
 This setting can result in false positives and is recommended for testing
 only, but not for real-money-play.
 
\end_layout

\begin_layout Standard

\emph on
Stop Autoplayer on error
\emph default
: If the Validator discovers an inconsistency, and this preference is checked,
 the 
\begin_inset Index
status open

\begin_layout Plain Layout
Autoplayer
\end_layout

\end_inset

Autoplayer will be instructed to stop autoplaying.
 
\end_layout

\begin_layout Standard

\emph on
!!! Shoot replay-frame on error: 
\emph default
If the Validator discovers an inconsistency, and this preference is checked,
 OpenHoldem will shoot a 
\begin_inset Index
status open

\begin_layout Plain Layout
replay
\end_layout

\end_inset

replay-frame and store it in the replay-folder.
 The replay frame will help you to find the source of the error.
\end_layout

\end_body
\end_document
