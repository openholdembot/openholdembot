<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3c.org/TR/1999/REC-html401-19991224/loose.dtd">
<!-- saved from url=(0259)http://webcache.googleusercontent.com/search -->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><HTML><HEAD>
<META content="text/html; charset=UTF-8" http-equiv="Content-Type">
<META name="GENERATOR" content="MSHTML 9.00.8112.16476"></HEAD>
<BODY class="mediawiki ns-0 ltr page-OpenScrape_EndUserDocumentation_TableMapFormatReference">
<DIV style="background: rgb(255, 255, 255); margin: -1px -1px 0px; padding: 0px; border: 1px solid rgb(153, 153, 153);">
<DIV style="background: rgb(221, 221, 221); font: 13px/normal arial, sans-serif; margin: 12px; padding: 8px; border: 1px solid rgb(153, 153, 153); text-align: left; color: rgb(0, 0, 0); font-size-adjust: none; font-stretch: normal;">This 
is Google's cache of <A style="color: rgb(0, 0, 204); text-decoration: underline;" 
href="http://www.maxinmontreal.com/wiki/index.php5?title=OpenScrape:EndUserDocumentation:TableMapFormatReference&amp;redirect=no">http://www.maxinmontreal.com/wiki/index.php5?title=OpenScrape:EndUserDocumentation:TableMapFormatReference&amp;redirect=no</A>. 
It is a snapshot of the page as it appeared on Mar 9, 2013 08:04:54 GMT. The <A 
style="color: rgb(0, 0, 204); text-decoration: underline;" href="http://www.maxinmontreal.com/wiki/index.php5?title=OpenScrape:EndUserDocumentation:TableMapFormatReference&amp;redirect=no">current 
page</A> could have changed in the meantime. <A style="color: rgb(0, 0, 204); text-decoration: underline;" 
href="http://support.google.com/websearch/bin/answer.py?hl=en&amp;p=cached&amp;answer=1687222">Learn 
more</A><BR>Tip: To quickly find your search term on this page, press 
<B>Ctrl+F</B> or <B>⌘-F</B> (Mac) and use the find bar.<BR><BR>
<DIV style="float: right;"><A style="color: rgb(0, 0, 204); text-decoration: underline;" 
href="http://webcache.googleusercontent.com/search?q=cache:SwVsIld4-d0J:www.maxinmontreal.com/wiki/index.php5%3Ftitle%3DOpenScrape:EndUserDocumentation:TableMapFormatReference%26redirect%3Dno+/wiki/index.php5/OpenScrape:EndUserDocumentation&amp;hl=en&amp;gl=us&amp;strip=1">Text-only 
version</A></DIV>
<DIV>These search terms are highlighted: <SPAN style="background: rgb(255, 255, 102); color: black; font-weight: bold;">wiki</SPAN>&nbsp;<SPAN 
style="background: rgb(255, 255, 102); color: black; font-weight: bold;">index</SPAN>&nbsp;<SPAN 
style="background: rgb(255, 255, 102); color: black; font-weight: bold;">php5</SPAN>&nbsp;<SPAN 
style="background: rgb(255, 255, 102); color: black; font-weight: bold;">openscrape</SPAN>&nbsp;<SPAN 
style="background: rgb(255, 255, 102); color: black; font-weight: bold;">enduserdocumentation</SPAN>&nbsp;&nbsp;</DIV></DIV></DIV>
<DIV style="position: relative;">
<META name="keywords" content="OpenScrape:EndUserDocumentation:TableMapFormatReference,OpenHoldem:EndUserDocumentation:Formulas,OpenScrape,OpenScrape:EndUserDocumentation,OpenScrape:ReleaseNotes:v1.1.0 2008-02-22"><LINK 
rel="shortcut icon" href="/favicon.ico"><LINK title="Maxin Wiki (English)" rel="search" 
type="application/opensearchdescription+xml" 
href="/wiki/opensearch_desc.php"><TITLE>OpenScrape:EndUserDocumentation:TableMapFormatReference 
- Maxin Wiki</TITLE>
<STYLE type="text/css" media="screen, projection">/*<![CDATA[*/
			@import "/wiki/skins/common/shared.css?97";
			@import "/wiki/skins/monobook/main.css?97";
		/*]]>*/</STYLE>
<LINK rel="stylesheet" type="text/css" href="Openscrape_enduserdocumentation_tablemapformatreference_files/commonPrint.css" 
media="print"><!--[if lt IE 5.5000]><style type="text/css">@import "/wiki/skins/monobook/IE50Fixes.css?97";</style><![endif]--><!--[if IE 5.5000]><style type="text/css">@import "/wiki/skins/monobook/IE55Fixes.css?97";</style><![endif]--><!--[if IE 6]><style type="text/css">@import "/wiki/skins/monobook/IE60Fixes.css?97";</style><![endif]--><!--[if IE 7]><style type="text/css">@import "/wiki/skins/monobook/IE70Fixes.css?97";</style><![endif]--><!--[if lt IE 7]><script type="text/javascript" src="/wiki/skins/common/IEFixes.js?97"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->
<SCRIPT type="text/javascript">/*<![CDATA[*/
var skin = "monobook";
var stylepath = "/wiki/skins";
var wgArticlePath = "/wiki/index.php5/$1";
var wgScriptPath = "/wiki";
var wgScript = "/wiki/index.php5";
var wgServer = "http://www.maxinmontreal.com";
var wgCanonicalNamespace = "";
var wgCanonicalSpecialPageName = false;
var wgNamespaceNumber = 0;
var wgPageName = "OpenScrape:EndUserDocumentation:TableMapFormatReference";
var wgTitle = "OpenScrape:EndUserDocumentation:TableMapFormatReference";
var wgAction = "view";
var wgRestrictionEdit = [];
var wgRestrictionMove = [];
var wgArticleId = "57";
var wgIsArticle = true;
var wgUserName = null;
var wgUserGroups = null;
var wgUserLanguage = "en";
var wgContentLanguage = "en";
var wgBreakFrames = false;
var wgCurRevisionId = "310580";
/*]]>*/</SCRIPT>

<SCRIPT type="text/javascript" src="Openscrape_enduserdocumentation_tablemapformatreference_files/wikibits.js"><!-- wikibits js --></SCRIPT>

<SCRIPT type="text/javascript" src=""><!-- site js --></SCRIPT>

<STYLE type="text/css">/*<![CDATA[*/
@import "/wiki/index.php5?title=MediaWiki:Common.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=18000";
@import "/wiki/index.php5?title=MediaWiki:Monobook.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=18000";
@import "/wiki/index.php5?title=-&action=raw&gen=css&maxage=18000";
/*]]>*/</STYLE>
<!-- Head Scripts -->
<SCRIPT type="text/javascript" src="Openscrape_enduserdocumentation_tablemapformatreference_files/ajax.js"></SCRIPT>

<DIV id="globalWrapper">
<DIV id="column-content">
<DIV id="content"><A id="top" name="top"></A>
<H1 
class="firstHeading">OpenScrape:EndUserDocumentation:TableMapFormatReference</H1>
<DIV id="bodyContent">
<H3 id="siteSub">From Maxin Wiki</H3>
<DIV id="contentSub"></DIV>
<DIV id="jump-to-nav">Jump to: <A href="http://www.maxinmontreal.com/wiki/index.php5?title=OpenScrape:EndUserDocumentation:TableMapFormatReference&amp;redirect=no#column-one">navigation</A>, 
<A href="http://www.maxinmontreal.com/wiki/index.php5?title=OpenScrape:EndUserDocumentation:TableMapFormatReference&amp;redirect=no#searchInput">search</A></DIV><!-- start content -->
<P>The format of an OpenScrape Table Map is broken down into several sections, 
each of which contains a collection of related record types.</P>
<P><BR></P>
<TABLE id="toc" class="toc" summary="Contents">
  <TBODY>
  <TR>
    <TD>
      <DIV id="toctitle">
      <H2>Contents</H2></DIV>
      <UL>
        <LI class="toclevel-1"><A href="http://www.maxinmontreal.com/wiki/index.php5?title=OpenScrape:EndUserDocumentation:TableMapFormatReference&amp;redirect=no#Sizes"><SPAN 
        class="tocnumber">1</SPAN> <SPAN class="toctext">Sizes</SPAN></A></LI>
        <LI class="toclevel-1"><A href="http://www.maxinmontreal.com/wiki/index.php5?title=OpenScrape:EndUserDocumentation:TableMapFormatReference&amp;redirect=no#Symbols"><SPAN 
        class="tocnumber">2</SPAN> <SPAN class="toctext">Symbols</SPAN></A></LI>
        <LI class="toclevel-1"><A href="http://www.maxinmontreal.com/wiki/index.php5?title=OpenScrape:EndUserDocumentation:TableMapFormatReference&amp;redirect=no#Regions"><SPAN 
        class="tocnumber">3</SPAN> <SPAN class="toctext">Regions</SPAN></A></LI>
        <LI class="toclevel-1"><A href="http://www.maxinmontreal.com/wiki/index.php5?title=OpenScrape:EndUserDocumentation:TableMapFormatReference&amp;redirect=no#Fonts"><SPAN 
        class="tocnumber">4</SPAN> <SPAN class="toctext">Fonts</SPAN></A></LI>
        <LI class="toclevel-1"><A href="http://www.maxinmontreal.com/wiki/index.php5?title=OpenScrape:EndUserDocumentation:TableMapFormatReference&amp;redirect=no#Hash_Points"><SPAN 
        class="tocnumber">5</SPAN> <SPAN class="toctext">Hash 
        Points</SPAN></A></LI>
        <LI class="toclevel-1"><A href="http://www.maxinmontreal.com/wiki/index.php5?title=OpenScrape:EndUserDocumentation:TableMapFormatReference&amp;redirect=no#Hashes"><SPAN 
        class="tocnumber">6</SPAN> <SPAN class="toctext">Hashes</SPAN></A></LI>
        <LI class="toclevel-1"><A href="http://www.maxinmontreal.com/wiki/index.php5?title=OpenScrape:EndUserDocumentation:TableMapFormatReference&amp;redirect=no#Images"><SPAN 
        class="tocnumber">7</SPAN> <SPAN class="toctext">Images</SPAN></A></LI>
        <LI class="toclevel-1"><A href="http://www.maxinmontreal.com/wiki/index.php5?title=OpenScrape:EndUserDocumentation:TableMapFormatReference&amp;redirect=no#See_also"><SPAN 
        class="tocnumber">8</SPAN> <SPAN class="toctext">See 
        also</SPAN></A></LI></UL></TD></TR></TBODY></TABLE>
<SCRIPT type="text/javascript"> if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } </SCRIPT>
<A name="Sizes"></A>
<H2><SPAN class="editsection">[<A title="Edit section: Sizes" href="http://www.maxinmontreal.com/wiki/index.php5?title=OpenScrape:EndUserDocumentation:TableMapFormatReference&amp;action=edit&amp;section=1">edit</A>]</SPAN> 
<SPAN class="mw-headline">Sizes</SPAN></H2>
<P>Internally in the .tm file, these records will be preceded with the 
characters "z$".  The purpose of size records is to provide the ability to 
specify the accepted sizes for the casino table that the scraper engine will 
recognize.  Size records have the following format:</P><PRE>z$&lt;name&gt; width height
</PRE>
<UL>
  <LI>name is the name of the record (see table below)</LI>
  <LI>width and height are integer values. </LI></UL>
<P><BR>Valid size records and their descriptions:</P>
<TABLE border="1" cellSpacing="0">
  <TBODY>
  <TR>
    <TH>Record </TH>
    <TH> Description</TH></TR>
  <TR>
    <TD>clientsize </TD>
    <TD> Specifies the exact size of the poker table window.</TD></TR>
  <TR>
    <TD>clientsizemin </TD>
    <TD> Specifies the minimum allowed size of the poker table window.</TD></TR>
  <TR>
    <TD>clientsizemax </TD>
    <TD> Specifies the maximum allowed size of the poker table window.
  </TD></TR></TBODY></TABLE>
<P>The OpenHoldem engine will first search for poker table windows that match 
the exact size (clientsize) and if no match is found, will the look for poker 
table windows that are within the min-max boundaries.</P>
<P><B>Source(s):</B><A class="external text" title="http://www.downloadranking.com" 
href="http://www.downloadranking.com/" rel="nofollow">OpenScrape</A></P><A name="Symbols"></A>
<H2><SPAN class="editsection">[<A title="Edit section: Symbols" href="http://www.maxinmontreal.com/wiki/index.php5?title=OpenScrape:EndUserDocumentation:TableMapFormatReference&amp;action=edit&amp;section=2">edit</A>]</SPAN> 
<SPAN class="mw-headline">Symbols</SPAN></H2>
<P>Internally in the .tm file, these records will be preceded with the 
characters "s$".  Symbol records have the following format:</P><PRE>s$&lt;name&gt; text 
</PRE>
<UL>
  <LI>name is the name of the record (see table below)</LI>
  <LI>text is the content of the record</LI></UL>
<P><BR>Valid symbol records and their descriptions:</P>
<TABLE border="1" cellSpacing="0">
  <TBODY>
  <TR>
    <TH>Record </TH>
    <TH> Description</TH></TR>
  <TR>
    <TD>titletext, titletext0 - titletext9 </TD>
    <TD> When searching for poker table windows, OpenHoldem will look through 
      each of these symbols and do a partial match of "text" to a windows title 
      bar text.  If any substring provided in any of these symbols matches, then 
      the window is a match.</TD></TR>
  <TR>
    <TD>!titletext,&nbsp;!titletext0 -&nbsp;!titletext9 </TD>
    <TD> When searching for poker table windows, OpenHoldem will look through 
      each of these symbols and do a partial match of "text" to a windows title 
      bar text.  If all substrings provided in all of these symbols *do not* 
      match, then the window is a match.</TD></TR>
  <TR>
    <TD>ttlimits, ttlimits0 - ttlimits9 </TD>
    <TD> These symbols are intended to provide a format string that is used to 
      parse the window's titlebar text, and extract sblind, bblind, bigbet, ante 
      and game type information.  The syntax usage of the format string is very 
      much like the standard c format strings for scanf and printf.  The 
      placeholders use the caret character as the indicator and have the 
      following meanings:
      <UL>
        <LI>^h hand number</LI>
        <LI>^d dummy integer (read chars 0-9 only)</LI>
        <LI>^f dummy float (read chars 0-9 including decimal '.')</LI>
        <LI>^s sblind</LI>
        <LI>^b bblind</LI>
        <LI>^B bigbet</LI>
        <LI>^a ante</LI>
        <LI>^v sb or bb depending on limit type</LI>
        <LI>^V bb or BB depending on limit type</LI>
        <LI>^* skip all text up to the literal character following the *</LI>
        <LI>^R roman numeral as in "Level VIII" as typically seen in sng's</LI>
        <LI>^L limit indicator </LI></UL>
      <P>For the integer and float numerics, the scanner will automatically 
      accept and skip a leading dollar sign $ or leading/trailing cent sign ¢ 
      (ascii 162 hex a2).  In the case of the cent sign the target number will 
      be divided by 100.  The scanner will also recognize the standard trailing 
      metric unit multipliers of 'k' and 'm' (1000 and 1000000 respectively).
</P>
      <P>The following case-insensitive strings are recognized for the ^L limit 
      indicator:</P>
      <UL>
        <LI>no limit, no-limit, nolimit, nl</LI>
        <LI>pot limit, pot-limit, potlimit, pl</LI>
        <LI>fixed limit, fixed-limit, fixedlimit, fl, limit</LI></UL>
      <P>As an example, this title bar text "NL SNG Level VI 25/50 (2)" could be 
      parsed with this format string "^L SNG Level ^R ^s/^b (^a)" to result in 
      the sblind, bblind and game type being recognized.</P>
      <P>If multiple ttlimits* symbols are provided, then the engine will scan 
      each in order, and extract matching information from the first time it 
      find it.  That means that if you specify ^s in both ttlimits and 
      ttlimits3, for example, it will be extracted from ttlimts and ignored in 
      ttlimits3.  Multiple symbols for this capability are a legacy WinScrape 
      holdover and don't make much sense for a single titlebar text.  It is a 
      best practice to have a single ttlimits* symbol entry.</P></TD></TR>
  <TR>
    <TD>c0limits, c0limits0-c0limits9 </TD>
    <TD> These are text format strings with the same structure as the 
      ttlimits* symbols described above.  They are intended to be used to 
      extract blind/limit information from the c0limits* regions using text 
      transforms.  In this case, it makes sense to have multiple symbols 
      present, as a poker site could certainly paint the various blind/limit 
      information in different locations in the window.</TD></TR>
  <TR>
    <TD>sitename </TD>
    <TD> The name of the poker site that this Table Map is for.  It is good 
      practice to include the number of chairs at this table.  You might have a 
      "fulltilt9", "fulltilt6" and "fulltilt2" for different Table Map files for 
      Full Tilt's various table layouts.  This record is what is queried via the 
      OpenHoldem "sitename$" symbol (<A class="external free" title="http://www.maxinmontreal.com/wiki/index.php5?title=OpenHoldem:EndUserDocumentation:Symbols#Profile_symbols" 
      href="http://www.maxinmontreal.com/wiki/index.php5?title=OpenHoldem:EndUserDocumentation:Symbols#Profile_symbols" 
      rel="nofollow">http://www.maxinmontreal.com/wiki/index.php5?title=OpenHoldem:EndUserDocumentation:Symbols#Profile_symbols</A>).
    </TD></TR>
  <TR>
    <TD>network </TD>
    <TD> The name of the poker network that this Table Map is for.  This is 
      used to determine the appropriate network to pull Poker Tracker data for 
      when s$sitename is not a PT supported site. OH will first check s$sitename 
      for a supported network name, then s$network. These are the supported 
      names for both s$sitename and s$network and must be lowercase: stars, 
      party, ultimate, absolute, microgaming, ongame, cryptologic, pacific, 
      fulltilt, b2b, tribeca, worldpex, ipoker, tain, bodog, everest, boss, and 
      betfair.</TD></TR>
  <TR>
    <TD>nchairs </TD>
    <TD> The number of chairs that this Table Map supports.  The value of this 
      record is what is returned via the OpenHoldem "nchairs" symbol (<A class="external free" 
      title="http://www.maxinmontreal.com/wiki/index.php5?title=OpenHoldem:EndUserDocumentation:Symbols#General_symbols" 
      href="http://www.maxinmontreal.com/wiki/index.php5?title=OpenHoldem:EndUserDocumentation:Symbols#General_symbols" 
      rel="nofollow">http://www.maxinmontreal.com/wiki/index.php5?title=OpenHoldem:EndUserDocumentation:Symbols#General_symbols</A>).
    </TD></TR>
  <TR>
    <TD>reseller </TD>
    <TD> Legacy support of WinScrape's symbol.  Not particularly relevant in 
      the open source OpenScrape world, but there if you need it.  This is not 
      used in the OpenHoldem engine anywhere, and is just metadata for the .tm 
      file.</TD></TR>
  <TR>
    <TD>mechanic </TD>
    <TD> Legacy support of WinScrape's symbol.  Not particularly relevant in 
      the open source OpenScrape world, but there if you need it.  This is not 
      used in the OpenHoldem engine anywhere, and is just metadata for the .tm 
      file.  Feel free to populate this symbol if you want your moment in the 
      limelight.</TD></TR>
  <TR>
    <TD>chairconfig </TD>
    <TD>  Legacy support of WinScrape's symbol.  OpenHoldem does not adjust 
      its display layout based on the value of this symbol like WinHoldem, and 
      thus this is not used in the OpenHoldem engine anywhere.</TD></TR>
  <TR>
    <TD>swagtextmethod </TD>
    <TD> Used by the autoplayer to determine how to enter the f$swag amount 
      into the swag entry box on the casino window.  Refer <A title="OpenHoldem:EndUserDocumentation:Formulas" 
      href="http://www.maxinmontreal.com/wiki/index.php5/OpenHoldem:EndUserDocumentation:Formulas#f.24swag_-_Stated_Wager_.28NL.29">here</A> 
      for more information on the use of this symbol.</TD></TR>
  <TR>
    <TD>potmethod </TD>
    <TD> This is used to determine the appropriate site interpretation for the 
      contents of c0pot0.
      <UL>
        <LI> 1: (default, legacy) Common pot</LI>
        <LI> 2: (new) Total pot, including current bets and side bets</LI></UL>
  </TD></TR>
  <TR>
    <TD>activemethod </TD>
    <TD> This is used to determine how OH treats information from the pXactive 
      and uXactive regions.
      <UL>
        <LI> 1: (default, legacy) Inactive unless pXactive/uXactive returns 
        true/active</LI>
        <LI> 2: (new) Active unless pXactive/uXactive returns 
        false/inactive/out/away</LI></UL></TD></TR>
  <TR>
    <TD>t0type - t3type </TD>
    <TD> These symbols control which OCR algorithm will get used for the 
      specific text transform 0-3. For example if the symbol h3type is defined 
      as fuzzy then all regions with transform Text3 will use the fuzzy 
      algorithm.  The default value is "plain" if no symbol exists for a given 
      group.
      <P>The possible values for these symbols are "fuzzy", "plain", or a 
      specific tolerance value.  The default fuzzy text tolerance is 25%, but 
      can be overridden by stating the value in this symbol, such as "s$t3type  
      0.355", which would cause the scraper engine to use the fuzzy text 
      algorithm with a 35.5% tolerance value.  Values of 0 are the same as 
      "plain".</P></TD></TR></TBODY></TABLE><A name="Regions"></A>
<H2><SPAN class="editsection">[<A title="Edit section: Regions" href="http://www.maxinmontreal.com/wiki/index.php5?title=OpenScrape:EndUserDocumentation:TableMapFormatReference&amp;action=edit&amp;section=3">edit</A>]</SPAN> 
<SPAN class="mw-headline">Regions</SPAN></H2>
<P>Internally in the .tm file, these records will be preceded with the 
characters "r$".  The purpose of the region records is to provide the ability to 
describe a named rectangular area within a frame that contains target 
information to be acquired according to the transform selected.  Region records 
have the following format:</P><PRE>r$&lt;name&gt; left top right bottom color radius transform
</PRE>
<UL>
  <LI>name is the name of the record (see table below)</LI>
  <LI>left, top, right and bottom are integer values within the casino table, 
  where the upper left corner of the client frame is considered to be 0, 0.</LI>
  <LI>color is a 1-8 character hexadecimal number in the form AABBGGRR (Window's 
  COLORREF format).  The usage of the color value is dependent on the transform 
  selected.</LI>
  <LI>radius is an RGB color distance.</LI>
  <LI>transform describes the engine algorithm that should be used to attempt to 
  find a match.  The available transforms are:</LI></UL>
<TABLE border="1" cellSpacing="0">
  <TBODY>
  <TR>
    <TH>Type </TH>
    <TH> Description</TH></TR>
  <TR>
    <TD>N </TD>
    <TD> None - This is used for those regions that do not need a transform as 
      their only purpose is to describe a rectangle for use by the scraper 
      engine.  An example is button location (i0button - i9button) which informs 
      the autoplayer engine of the allowed rectangle for mouse clicks.</TD></TR>
  <TR>
    <TD>C </TD>
    <TD> Color - This is a calculation of the average RGB color for the entire 
      region.  Used in conjunction with the radius, the engine will determine if 
      the contents of the region as seen during game play actually match the 
      color/radius as specified in the Table Map.  The color value in the region 
      record defines the center of a cube, and the radius defines the dimensions 
      of that cube.  This cube is then mapped to an RGB color space, and if the 
      average color of the region as seen during game play falls within this 
      cube, then a match is reported.  A negative radius can also be specified, 
      in which case if the average color of the region as seen during game play 
      falls outside of the cube, then a match is reported.</TD></TR>
  <TR>
    <TD>I </TD>
    <TD> Image - This transform does two things.  It first searches the i$ 
      records in the .tm for a pixel-by-pixel match, and returns the value of 
      that i$ record if a match is found.  If no pixel-by-pixel match is found, 
      the transform then searches for the closest match, based on this 
      perceptual difference algorithm: <A class="external free" title="http://pdiff.sourceforge.net/" 
      href="http://pdiff.sourceforge.net/" 
      rel="nofollow">http://pdiff.sourceforge.net/</A>  There is an internal 
      hard-coded limit, which prevents i$ records from matching the current 
      region if 65% of available pixels of that region do not match.  If this 
      limit did not exist, then clearly non-matching regions could return all 
      sorts of junk.
      <P>This exact-match-to-pdiff failover is automatic, and requires no 
      additional work from the .tm creator other than to set the transform to 
      "I" and to collect the images.</P></TD></TR>
  <TR>
    <TD>T </TD>
    <TD> Text - This is an OCR (<A class="external free" title="http://en.wikipedia.org/wiki/Optical_character_recognition" 
      href="http://en.wikipedia.org/wiki/Optical_character_recognition" rel="nofollow">http://en.wikipedia.org/wiki/Optical_character_recognition</A>) 
      algorithm for the purpose of converting screen pixels to ASCII text.  The 
      color cube specifications (as in the C transform) are used to separate the 
      foreground from the background pixels.  A lookup is then performed against 
      the font (t$) records on a character by character basis to produce a 
      resultant text string.</TD></TR>
  <TR>
    <TD>Hn </TD>
    <TD> Hash n - This transform reduces the contents of a rectangle to a 
      32-bit value.  OH/OS use only a single well respected hash algorithm that 
      is open for public review.  Because of this selection, we have not yet 
      seen a hash collision (that did not have an unrelated root cause, like 
      record duplication) such as those which plague WinScrape.  That is not to 
      say that a hash collision is not impossible, however the mapping of 52 
      card images (for example) into a 32-bit address space makes this highly 
      unlikely.  If a collision ever occurs, there is the option to use hash 
      types other than Type 0.  Types 0-3 all use different hash seeds with the 
      same algorithm, and thus if a collision is seen, once could simply change 
      the hash type for that region.
      <P>The Type 0 hash algorithm uses all pixels in a region to calculate a 
      hash.  To use specific pixels in the region, use Types 1-3.  Types 1-3 
      default to using all pixels in a region as well, but if Hash Point records 
      are present in the Table Map and of a matching type, the engine will use 
      those specific points for calculation of the hash. As a region is hashed 
      during actual game play, the resultant 32-bit hash value is then looked up 
      in the h$ records in the Table Map.  If a match is found, the name of the 
      h$ record is returned and acted on appropriately (i.e. common card 1 is 
      Queen-Hearts, Fold button is present, Player 2 is seated, etc.)</P>
  </TD></TR></TBODY></TABLE>
<P><BR>Valid region records and their descriptions:</P>
<TABLE border="1" cellSpacing="0">
  <TBODY>
  <TR>
    <TH>Record </TH>
    <TH> Description</TH></TR>
  <TR>
    <TD>c0cardface0 - c0cardface4 </TD>
    <TD> Common cards 0-4; represents the entire card, the best transformation 
      is probably hash.  Typically either "c0cardfaceX" is used, or 
      "c0cardfaceXrank/c0cardfaceXsuit", but not both.</TD></TR>
  <TR>
    <TD>c0cardface0rank - c0cardface4rank </TD>
    <TD> Rank of common cards 0-4; the best transformation is probably text. 
      Typically either "c0cardface" is used, or 
      "c0cardfaceXrank/c0cardfaceXsuit", but not both.</TD></TR>
  <TR>
    <TD>c0cardface0suit - c0cardface4suit </TD>
    <TD> Suit of common cards 0-4; the best transformation is probably text. 
      Typically either "c0cardface" is used, or 
      "c0cardfaceXrank/c0cardfaceXsuit", but not both.</TD></TR>
  <TR>
    <TD>c0handnumber, c0handnumber1 - c0handnumber9 </TD>
    <TD> Ten regions to specify where OS/OH should find the current 
      handnumber.  The first one found with valid numeric information will be 
      used and the remainder skipped.  c0handnumber is searched first, then 
      c0handnumber1 to 9 in that order.</TD></TR>
  <TR>
    <TD>c0istournament </TD>
    <TD> Used to identify if this table is a tournament game.</TD></TR>
  <TR>
    <TD>c0smallblind </TD>
    <TD> Identifies the region on the casino table where the small blind can 
      be found.  Title text parsing is much easier to implement if that option 
      is available, otherwise a text transformation can be used with this region 
      to identify the small blind.</TD></TR>
  <TR>
    <TD>c0bigblind </TD>
    <TD> Identifies the region on the casino table where the big blind can  be 
      found.  Title text parsing is much easier to implement if that option is 
      available, otherwise a text transformation can be used with this region to 
      identify the big blind.</TD></TR>
  <TR>
    <TD>c0bigbet </TD>
    <TD> Identifies the region on the casino table where the big bet can  be 
      found.  Title text parsing is much easier to implement if that option is 
      available, otherwise a text transformation can be used with this region to 
      identify the big bet.</TD></TR>
  <TR>
    <TD>c0ante </TD>
    <TD> Identifies the region on the casino table where the ante can  be 
      found.  Title text parsing is much easier to implement if that option is 
      available, otherwise a text transformation can be used with this region to 
      identify the ante.</TD></TR>
  <TR>
    <TD>c0pot0 - c0pot4 </TD>
    <TD> The value of the main pot should be identified by c0pot0 and using a 
      text transform.  c0pot1 to c0pot4 can be used to identify side pots if 
      required.</TD></TR>
  <TR>
    <TD>c0potNchipXY </TD>
    <TD> See chip scraping instructions for p0chipXY - p9chipXY below.  The 
      difference is that the "N" refers to the different pots - N=0 is the main 
      pot, N=1-4 are side pots.</TD></TR>
  <TR>
    <TD>c0limits, c0limits0 - c0limits9 </TD>
    <TD> Identifies the region on the casino table where the limit information 
      can  be found; this region is used in conjunction with the Symbols 
      c0limits and c0limits0-c0limit9 text parse strings.  This region should 
      really only be used if title text parsing is not an option.</TD></TR>
  <TR>
    <TD>i0button - i9button </TD>
    <TD> Specifies the rectangular area in which the autoplayer can click the 
      mouse for each button 0-9.</TD></TR>
  <TR>
    <TD>i0label - i9label </TD>
    <TD> Specifies the action that should be associated with buttons 0-9.  By 
      default, and if not overridden here, button 0 will be interpreted as the 
      fold button, 1 as the call button, 2 as the raise button and 3 as the 
      allin button.
      <P>The return value from the transformation of this region (hash or text) 
      will determine how the scraper engine interprets the button. All values 
      are changed to lowercase and have spaces and '-' removed. Only the first n 
      characters will be tested</P>
      <UL>
        <LI>"allin", "a11in", "allln", "a111n", "aiiin"&nbsp;: button is seen as 
        the allin button</LI>
        <LI>"raise", "ra1se", "ralse", "bet"&nbsp;: button is seen as the raise 
        button</LI>
        <LI>"call", "caii", "ca11"&nbsp;: button is seen as the call button</LI>
        <LI>"check"&nbsp;: button is seen as the check button</LI>
        <LI>"fold", "fo1d", "foid"&nbsp;: button is seen as the fold button</LI>
        <LI>"autopost", "aut0p0st"&nbsp;: button is seen as the autopost button
        </LI>
        <LI>"sitin", "s1t1n"&nbsp;: button is seen as the sitin button</LI>
        <LI>"sitout", "s1tout", "sit0ut", "s1t0ut"&nbsp;: button is seen as the 
        sitout button</LI>
        <LI>"leave"&nbsp;: button is seen as the leave button</LI>
        <LI>"prefold"&nbsp;: button is seen as the prefold button</LI></UL>
      <P>Examples: "All-In" will be recognized as allin "Auto-post blinds" will 
      be recognized as autopost</P></TD></TR>
  <TR>
    <TD>i0labelY - i9labelY </TD>
    <TD> Where Y = 0 - 9. As an adjunct to the iXlabel regions, the iXlabelY 
      region definitions allow the specification of an alternative location with 
      alternate properties, such as color, for any button. The specification of 
      these regions is exactly as that of the iXlabel regions with an addition 
      of a numeric (0 - 9) suffix. The iXlabel regions are searched first, then 
      the iXlabelY regions. The first region that resolves to a text value will 
      stop any subsequent evaluations.</TD></TR>
  <TR>
    <TD>i0state - i9state </TD>
    <TD> Specifies whether the button 0-9 is live and available to be clicked. 
       If this is set as a color transform, then if the color/radius matches, 
      then the button will be seen as available to be clicked.  If this is set 
      as a hash transform, then button will be seen as available to be clicked 
      if the matching hash record is named: "true", "on", "yes", "checked" or 
      "lit"; any other hash value names will indicate that the button is not 
      available to be clicked.</TD></TR>
  <TR>
    <TD>i3edit </TD>
    <TD> Specifies the rectangular region that can be used for entering a SWAG 
      bet.</TD></TR>
  <TR>
    <TD>i86button, i860button - i869button </TD>
    <TD> Similar to the i0button - i9button regions, however these regions are 
      intended to be used to combat spam/popups that could occlude the poker 
      window.  If the corresponding state region returns true, the autoplayer 
      will try to click in this region to dismiss the spam/popup.</TD></TR>
  <TR>
    <TD>i86state, i860state - i869state </TD>
    <TD> The corresponding state regions for the i86button, i860button - 
      i869button regions above.</TD></TR>
  <TR>
    <TD>p0active - p9active </TD>
    <TD> Identifies the region used to determine if a player is active 
      (sitting in) or not (sitting out).
      <P>Valid values that can returned by color, text, image or hash 
      transformations are: "true" or "active" for active and "false", 
      "inactive", "out" or "away" for inactive.</P></TD></TR>
  <TR>
    <TD>p0balance - p9balance </TD>
    <TD> Used to identify a player's balance, and should use a text transform.
    </TD></TR>
  <TR>
    <TD>p0bet - p9bet </TD>
    <TD> Used to identify a player's bet, and should use a text transform.
  </TD></TR>
  <TR>
    <TD>p0cardback - p9cardback </TD>
    <TD> Used to identify when a seat 0-9 displays a card back, the best 
      transformation is hash or color.</TD></TR>
  <TR>
    <TD>p0cardface0 - p9cardface0 </TD>
    <TD> The first card for seats 0-9; represents the entire card, the best 
      transformation is probably hash. Typically either "pXcardfaceY" is used, 
      or "pXcardfaceYrank/pXcardfaceYsuit", but not both.</TD></TR>
  <TR>
    <TD>p0cardface1 - p9cardface1 </TD>
    <TD> The second card for seats 0-9; represents the entire card, the best 
      transformation is probably hash. Typically either "pXcardfaceY" is used, 
      or "pXcardfaceYrank/pXcardfaceYsuit", but not both.</TD></TR>
  <TR>
    <TD>p0cardface0rank - p9cardface0rank </TD>
    <TD> The rank of the first card for seats 0-9; the best transformation is 
      probably text. Typically either "pXcardfaceY" is used, or 
      "pXcardfaceYrank/pXcardfaceYsuit", but not both.</TD></TR>
  <TR>
    <TD>p0cardface0suit - p9cardface0suit </TD>
    <TD> The suit of the first card for seats 0-9; the best transformation is 
      probably text. Typically either "pXcardfaceY" is used, or 
      "pXcardfaceYrank/pXcardfaceYsuit", but not both.</TD></TR>
  <TR>
    <TD>p0cardface1rank - p9cardface1rank </TD>
    <TD> The rank of the second card for seats 0-9; the best transformation is 
      probably text. Typically either "pXcardfaceY" is used, or 
      "pXcardfaceYrank/pXcardfaceYsuit", but not both.</TD></TR>
  <TR>
    <TD>p0cardface1suit - p9cardface1suit </TD>
    <TD> The suit of the second card for seats 0-9; the best transformation is 
      probably text. Typically either "pXcardfaceY" is used, or 
      "pXcardfaceYrank/pXcardfaceYsuit", but not both.</TD></TR>
  <TR>
    <TD>p0dealer - p9dealer </TD>
    <TD> Identifies if the dealer button is found for seat 0-9 or not.</TD></TR>
  <TR>
    <TD>p0name - p9name </TD>
    <TD> Identifies the name of the player in seat 0-9; requires a text 
      transform.</TD></TR>
  <TR>
    <TD>p0seated - p9seated </TD>
    <TD> Identifies whether seat 0-9 is occupied (seated) or not.
      <P>Valid values that can returned by color, text, image or hash 
      transformations are: "true" or "seated" for seated and "false" or 
      "unseated" for unseated.</P></TD></TR>
  <TR>
    <TD>p0chipXY - p9chipXY </TD>
    <TD> Note: Chip scraping should *only* be used if the actual numeric bet 
      text cannot be found elsewhere on the poker table.  Text transformation is 
      magnitudes of effort easier to accomplish.
      <UL>
        <LI>Step 1&nbsp;: Ensure that the poker site uses static landings for 
        all of the chip stacks.</LI>
        <LI>Step 2&nbsp;: Determine the size of an individual chip, and should 
        include any portion of the chip that is painted anywhere within the 
        window regardless of how faded or transparent.</LI>
        <LI>Step 3&nbsp;: Create regions for the initial base of each player's 
        chip stacks with the size determined in step 2; p0chip00, p1chip00, ..., 
        p9chip00.</LI>
        <LI>Step 4&nbsp;: Create vertical stride chip regions for each player's 
        chip stack; p0chip01, p1chip01, ..., p9chip01.  These regions should 
        perfectly surround the 2nd chip that rests above the base pXchip00.</LI>
        <LI>Step 5&nbsp;: Create horizontal stride chip regions for each 
        player's chip stack; p0chip10, p1chip10, ..., p9chip10.  These regions 
        should perfectly surround the base chip in the second stack.</LI>
        <LI>Step 6&nbsp;: Optional and rare: If the vertical stride between 
        chips in a stack is not uniform, then you will need to define 
        pXchip02-pXchip09 for each chip in the stack.  For those sites with 
        non-uniform vertical chip strides, this means that there is a limit of 
        10 chips per stack that will be recognized by the engine.</LI>
        <LI>Step 7&nbsp;: Optional and rare: If the horizontal stride between 
        chip stacks is not uniform, then you will need to define 
        pXchip10-pXchip90 for each stack.  For those sites with non-uniform 
        horizontal chip strides, this means that there is a limit of 10 stacks 
        that will be recognized by the engine.  </LI></UL>
      <P>In a worst case situation, there may be 100 chip regions * 10 players = 
      1000 region definitions required to scrape chips! (So now go look at 
      scraping the bet text instead)</P></TD></TR>
  <TR>
    <TD>u0active - u9active </TD>
    <TD> These regions are alternatives to the p0active-p9active regions, and 
      are used for the player's seat.  They are typically used when the player's 
      seat changes appearance when it is the player's action, to avoid 
      misscrapes due to change in color/size, whatever.</TD></TR>
  <TR>
    <TD>ubalance, u0balance - u9balance </TD>
    <TD> These regions are alternatives to the p0balance-p9balance regions, 
      and are used for the player's seat.  They are typically used when the 
      player's seat changes appearance when it is the player's action, to avoid 
      misscrapes due to change in color/size, whatever.</TD></TR>
  <TR>
    <TD>u0cardface0 - u9cardface0 </TD>
    <TD> These regions are alternatives to the p0cardface0-p9cardface0 
      regions, and are used for the player's seat.  They are typically used when 
      the player's seat changes appearance when it is the player's action, to 
      avoid misscrapes due to change in color/size, whatever.</TD></TR>
  <TR>
    <TD>u0cardface1 - u9cardface1 </TD>
    <TD> These regions are alternatives to the p0cardface1-p9cardface1 
      regions, and are used for the player's seat.  They are typically used when 
      the player's seat changes appearance when it is the player's action, to 
      avoid misscrapes due to change in color/size, whatever.</TD></TR>
  <TR>
    <TD>uname, u0name - u9name </TD>
    <TD> These regions are alternatives to the p0name-p9name regions, and are 
      used for the player's seat.  They are typically used when the player's 
      seat changes appearance when it is the player's action, to avoid 
      misscrapes due to change in color/size, whatever.</TD></TR>
  <TR>
    <TD>u0seated - u9seated </TD>
    <TD> These regions are alternatives to the p0seated-p9seated regions, and 
      are used for the player's seat.  They are typically used when the player's 
      seat changes appearance when it is the player's action, to avoid 
      misscrapes due to change in color/size, whatever.</TD></TR>
  <TR>
    <TD>tablepointNNN </TD>
    <TD> These regions are used when the "Green Button" (connect) is clicked 
      on the OpenHoldem toolbar to "automagically" find a table to connect to.  
      These regions must be one pixel wide by one pixel tall and must use a 
      color transform.  All tablepoint records must match the pixel colors on 
      the casino window for it to be recognized on a connect.
</TD></TR></TBODY></TABLE><A name="Fonts"></A>
<H2><SPAN class="editsection">[<A title="Edit section: Fonts" href="http://www.maxinmontreal.com/wiki/index.php5?title=OpenScrape:EndUserDocumentation:TableMapFormatReference&amp;action=edit&amp;section=4">edit</A>]</SPAN> 
<SPAN class="mw-headline">Fonts</SPAN></H2>
<P>Internally in the .tm file, these records will be preceded with the 
characters "t$".  Font records have the following format:</P><PRE>t$[a] x0 x1 x2 .. x30
</PRE>
<UL>
  <LI>[a] is an actual printable (non-whitespace) case-sensitive ASCII character 
  (note that the brackets [] are not used)</LI>
  <LI>x0 - x30 are 32bit hexadecimal values that describe the foreground pixels 
  for the character.  The maximum individual character width is 31 pixels.  
  These values describe the on-off state of the pixels for the character, with 1 
  meaning on (foreground) and 0 meaning off (background)</LI></UL>
<UL>
  <LI>Table maps using fuzzy fonts can now be created. (See <A title="OpenScrape:ReleaseNotes:v1.1.0 2008-02-22" 
  href="http://www.maxinmontreal.com/wiki/index.php5/OpenScrape:ReleaseNotes:v1.1.0_2008-02-22">OpenScrape 
  1.1.0 release notes</A> for details)
  <UL>
    <LI>Decide which fonts will be fuzzy, and create those in a specifc group 
    (e.g. group 1).  Fonts can be created with the font color as the foreground, 
    or the background color as the foreground (inverse fonting).  If using the 
    font color for the foreground, it is probably best to make the fonts as 
    thick as possible using large radii.  If using the background color as the 
    foreground, a radius of zero probably works best.</LI>
    <LI>Set the symbol t1type to "fuzzy" for default tolerance (25%), or to a 
    specific tolerance value (0.50 for 50%, 0.33 for 33%, for example).  If this 
    symbol is set to anything besides "fuzzy" or a floating point value, then 
    the engine will used the old pixel-by-pixel font recognition engine.</LI>
    <LI>You can create multiple samples for various characters, and it will 
    help.  6/8/3, for example are all so similar that distinguishing fuzzy 
    versions of these is difficult.  Create more font records for the various 
    6's, 8s and 3's will help with the recognition.</LI></UL></LI></UL><A name="Hash_Points"></A>
<H2><SPAN class="editsection">[<A title="Edit section: Hash Points" href="http://www.maxinmontreal.com/wiki/index.php5?title=OpenScrape:EndUserDocumentation:TableMapFormatReference&amp;action=edit&amp;section=5">edit</A>]</SPAN> 
<SPAN class="mw-headline">Hash Points</SPAN></H2>
<P>Internally in the .tm file, these records will be preceded with the 
characters "p$". </P>
<P>The purpose of Hash Points is to define the points within an image that are 
checked  So, in order to use Hash2 for example, you must have Hash Points for 
type 2 defined, and those points must fall within the boundaries of the images 
that you are hashing.</P>
<P>An important note is that hash points that fall outside of the image will be 
ignored, as they are invalid. As an example, if you have cards that are 10x20 
pixels, then hash points (11,15) and (8,22) will be ignored, whereas hash points 
(5,5) and (9, 18 ) will be used in the hash calculation. </P>
<P>Hash point records have the following format:</P><PRE>p[n]$ x y
</PRE>
<UL>
  <LI>n is a number 0-3 </LI>
  <LI>x and y are the coordinates of the point, relative to the region's 
  rectangle, the top left corner of which is 0,0.</LI></UL><A name="Hashes"></A>
<H2><SPAN class="editsection">[<A title="Edit section: Hashes" href="http://www.maxinmontreal.com/wiki/index.php5?title=OpenScrape:EndUserDocumentation:TableMapFormatReference&amp;action=edit&amp;section=6">edit</A>]</SPAN> 
<SPAN class="mw-headline">Hashes</SPAN></H2>
<P>Internally in the .tm file, these records will be preceded with the 
characters "h$".  Hash records have the following format:</P><PRE>h[n]$&lt;name&gt; value
</PRE>
<UL>
  <LI>n is a number 0-3</LI>
  <LI>name is the string that is returned to the scraper engine upon a match
</LI>
  <LI>value is a 32bit hexadecimal value that contains the result of the 
  hash/seed being used</LI></UL>
<P><BR></P><A name="Images"></A>
<H2><SPAN class="editsection">[<A title="Edit section: Images" href="http://www.maxinmontreal.com/wiki/index.php5?title=OpenScrape:EndUserDocumentation:TableMapFormatReference&amp;action=edit&amp;section=7">edit</A>]</SPAN> 
<SPAN class="mw-headline">Images</SPAN></H2>
<P>Internally in the .tm file, these records will be preceded with the 
characters "i$".  Image records have the following format</P><PRE>i$&lt;name&gt; width height
scanline0
scanline1
...
scanlineN
</PRE>
<UL>
  <LI>name is the description of the image</LI>
  <LI>width and height are integer values that give the size of the image</LI>
  <LI>scanline0 - scanlineN contain the raw 32bit hexadecimal values for each 
  pixel.  Each pixel is in the form BBGGRRAA.  There is no whitespace between 
  pixel values.  Each scanline is terminated with a standard Microsoft Windows 
  line ending (carriage return/line feed).  The number of scanline records is 
  equal to the height of the image.  The text length of a scanline record is 
  width*8.</LI></UL>
<P><BR></P><A name="See_also"></A>
<H2><SPAN class="editsection">[<A title="Edit section: See also" href="http://www.maxinmontreal.com/wiki/index.php5?title=OpenScrape:EndUserDocumentation:TableMapFormatReference&amp;action=edit&amp;section=8">edit</A>]</SPAN> 
<SPAN class="mw-headline"> See also </SPAN></H2>
<UL>
  <LI> <A title="OpenScrape:EndUserDocumentation" href="http://www.maxinmontreal.com/wiki/index.php5/OpenScrape:EndUserDocumentation">OpenScrape 
  End User Documentation</A></LI>
  <LI> <A title="OpenScrape" href="http://www.maxinmontreal.com/wiki/index.php5/OpenScrape">OpenScrape</A>
  </LI></UL><!-- Saved in parser cache with key maxin_wiki:pcache:idhash:57-0!1!0!!en!2 and timestamp 20130309080455 -->
<DIV class="printfooter">Retrieved from "<A href="http://www.maxinmontreal.com/wiki/index.php5/OpenScrape:EndUserDocumentation:TableMapFormatReference">http://www.maxinmontreal.com/<B 
style="color: black; background-color: rgb(255, 255, 102);">wiki/index.php5/OpenScrape:EndUserDocumentation</B>:TableMapFormatReference</A>"</DIV><!-- end content -->
<DIV class="visualClear"></DIV></DIV></DIV></DIV>
<DIV id="column-one">
<DIV id="p-cactions" class="portlet">
<H5>Views</H5>
<DIV class="pBody">
<UL>
  <LI id="ca-nstab-main" class="selected"><A accessKey="c" title="View the content page [c]" 
  href="http://www.maxinmontreal.com/wiki/index.php5/OpenScrape:EndUserDocumentation:TableMapFormatReference">Article</A></LI>
  <LI id="ca-talk"><A accessKey="t" title="Discussion about the content page [t]" 
  href="http://www.maxinmontreal.com/wiki/index.php5/Talk:OpenScrape:EndUserDocumentation:TableMapFormatReference">Discussion</A></LI>
  <LI id="ca-edit"><A accessKey="e" title="You can edit this page. Please use the preview button before saving. [e]" 
  href="http://www.maxinmontreal.com/wiki/index.php5?title=OpenScrape:EndUserDocumentation:TableMapFormatReference&amp;action=edit">Edit</A></LI>
  <LI id="ca-history"><A accessKey="h" title="Past versions of this page. [h]" 
  href="http://www.maxinmontreal.com/wiki/index.php5?title=OpenScrape:EndUserDocumentation:TableMapFormatReference&amp;action=history">History</A></LI></UL></DIV></DIV>
<DIV id="p-personal" class="portlet">
<H5>Personal tools</H5>
<DIV class="pBody">
<UL>
  <LI id="pt-login"><A accessKey="o" title="You are encouraged to log in, it is not mandatory however. [o]" 
  href="http://www.maxinmontreal.com/wiki/index.php5?title=Special:Userlogin&amp;returnto=OpenScrape:EndUserDocumentation:TableMapFormatReference">Log 
  in / create account</A></LI></UL></DIV></DIV>
<DIV id="p-logo" class="portlet"><A style='background-image: url("/wiki/skins/common/images/wiki.png");' 
href="http://www.maxinmontreal.com/"></A></DIV>
<SCRIPT type="text/javascript"> if (window.isMSIE55) fixalpha(); </SCRIPT>

<DIV id="p-navigation" class="portlet">
<H5>Navigation</H5>
<DIV class="pBody">
<UL>
  <LI id="n-mainpage"><A accessKey="z" title="Visit the Main Page [z]" href="http://www.maxinmontreal.com/wiki/index.php5/Main_Page">Main 
  Page</A></LI>
  <LI id="n-portal"><A title="About the project, what you can do, where to find things" 
  href="http://www.maxinmontreal.com/wiki/index.php5/Maxin_Wiki:Community_Portal">Community 
  portal</A></LI>
  <LI id="n-currentevents"><A title="Find background information on current events" 
  href="http://www.maxinmontreal.com/wiki/index.php5/Current_events">Current 
  events</A></LI>
  <LI id="n-recentchanges"><A accessKey="r" title="The list of recent changes in the wiki. [r]" 
  href="http://www.maxinmontreal.com/wiki/index.php5/Special:Recentchanges">Recent 
  changes</A></LI>
  <LI id="n-randompage"><A accessKey="x" title="Load a random page [x]" href="http://www.maxinmontreal.com/wiki/index.php5/Special:Random">Random 
  page</A></LI>
  <LI id="n-help"><A title="The place to find out." href="http://www.maxinmontreal.com/wiki/index.php5/Help:Contents">Help</A></LI>
  <LI id="n-sitesupport"><A title="Support us" href="http://www.maxinmontreal.com/wiki/index.php5/Maxin_Wiki:Site_support">Donations</A></LI></UL></DIV></DIV>
<DIV id="p-search" class="portlet">
<H5><LABEL for="searchInput">Search</LABEL></H5>
<DIV id="searchBody" class="pBody">
<FORM id="searchform" action="/wiki/index.php5/Special:Search">
<DIV><INPUT accessKey="f" id="searchInput" title="Search Maxin Wiki [f]" name="search" 
type="text"><INPUT id="searchGoButton" class="searchButton" name="go" value="Go" type="submit">&nbsp;
				<INPUT id="mw-searchButton" class="searchButton" name="fulltext" value="Search" type="submit"></DIV></FORM></DIV></DIV>
<DIV id="p-tb" class="portlet">
<H5>Toolbox</H5>
<DIV class="pBody">
<UL>
  <LI id="t-whatlinkshere"><A accessKey="j" title="List of all wiki pages that link here [j]" 
  href="http://www.maxinmontreal.com/wiki/index.php5/Special:Whatlinkshere/OpenScrape:EndUserDocumentation:TableMapFormatReference">What 
  links here</A></LI>
  <LI id="t-recentchangeslinked"><A accessKey="k" title="Recent changes in pages linked from this page [k]" 
  href="http://www.maxinmontreal.com/wiki/index.php5/Special:Recentchangeslinked/OpenScrape:EndUserDocumentation:TableMapFormatReference">Related 
  changes</A></LI>
  <LI id="t-upload"><A accessKey="u" title="Upload images or media files [u]" 
  href="http://www.maxinmontreal.com/wiki/index.php5/Special:Upload">Upload 
  file</A></LI>
  <LI id="t-specialpages"><A accessKey="q" title="List of all special pages [q]" 
  href="http://www.maxinmontreal.com/wiki/index.php5/Special:Specialpages">Special 
  pages</A></LI>
  <LI id="t-print"><A accessKey="p" title="Printable version of this page [p]" 
  href="http://www.maxinmontreal.com/wiki/index.php5?title=OpenScrape:EndUserDocumentation:TableMapFormatReference&amp;redirect=no&amp;printable=yes">Printable 
  version</A></LI>
  <LI id="t-permalink"><A title="Permanent link to this version of the page" 
  href="http://www.maxinmontreal.com/wiki/index.php5?title=OpenScrape:EndUserDocumentation:TableMapFormatReference&amp;oldid=310580">Permanent 
  link</A></LI></UL></DIV></DIV></DIV><!-- end of the left (by default at least) column -->
<DIV class="visualClear"></DIV>
<DIV id="footer">
<DIV id="f-poweredbyico"><A href="http://www.mediawiki.org/"><IMG alt="Powered by MediaWiki" 
src="Openscrape_enduserdocumentation_tablemapformatreference_files/poweredby_mediawiki_88x31.png"></A></DIV>
<UL id="f-list">
  <LI id="lastmod"> This page was last modified 06:07, 6 February 2013.</LI>
  <LI id="viewcount">This page has been accessed 9,857 times.</LI>
  <LI id="privacy"><A title="Maxin Wiki:Privacy policy" href="http://www.maxinmontreal.com/wiki/index.php5/Maxin_Wiki:Privacy_policy">Privacy 
  policy</A></LI>
  <LI id="about"><A title="Maxin Wiki:About" href="http://www.maxinmontreal.com/wiki/index.php5/Maxin_Wiki:About">About 
  Maxin Wiki</A></LI>
  <LI id="disclaimer"><A title="Maxin Wiki:General disclaimer" href="http://www.maxinmontreal.com/wiki/index.php5/Maxin_Wiki:General_disclaimer">Disclaimers</A></LI></UL></DIV>
<SCRIPT type="text/javascript">if (window.runOnloadHook) runOnloadHook();</SCRIPT>
</DIV><!-- Served in 0.145 secs. --></DIV></BODY></HTML>
