#LyX 1.6.5 created this file. For more info see http://www.lyx.org/
\lyxformat 345
\begin_document
\begin_header
\textclass amsbook
\use_default_options true
\begin_modules
theorems-ams
eqs-within-sections
figs-within-sections
\end_modules
\language english
\inputencoding auto
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth -2
\tocdepth -2
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Chapter*
OpenPPL In Practice
\end_layout

\begin_layout Standard
If you have read this manual up to this point you have some basic understanding
 of OpenPPL: syntactical rules, symbols, etc.
 But the main thing --- turning your poker-knowledge into bot-logic ---
 may look like a different kind of beast, if you have no programming experience
 at all.
 So let us take some small examples and see how OpenPPL is used in practice.
\end_layout

\begin_layout Section*
Folding Trash
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

NEW LIST 000
\end_layout

\begin_layout Plain Layout

   // Trashy hands.
 
\end_layout

\begin_layout Plain Layout

   // Never to be played, except we are in the blinds
\end_layout

\begin_layout Plain Layout

   K8s K7s K6s K5s K4s K3s K2s Q7s...
\end_layout

\begin_layout Plain Layout

   K8o ...
 32o
\end_layout

\begin_layout Plain Layout

END LIST
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

PREFLOP
\end_layout

\begin_layout Plain Layout

    // Make life easy and get rid of the greatest trash
\end_layout

\begin_layout Plain Layout

    WHEN (NOT In BigBlind AND islist000) FOLD FORCE
\end_layout

\end_inset


\end_layout

\begin_layout Section*
Open-Raising On The Button
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

WHEN (StillToAct = 2 AND Calls = 0 AND Raises = 0)
\end_layout

\begin_layout Plain Layout

    WHEN ((Hand = AA) OR (Hand = KK) OR ...) RAISE 3 FORCE
\end_layout

\end_inset


\end_layout

\begin_layout Section*
Threebetting A Steal-Raiser
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

// LastRaiserPosition <= 3 means: CO, BU or SB
\end_layout

\begin_layout Plain Layout

WHEN (calls = 0 AND Raises = 1 AND LastRaiserPosition <= 3)
\end_layout

\begin_layout Plain Layout

    WHEN (AmountToCall <= 3 AND islist...) RAISE 9 FORCE
\end_layout

\end_inset


\end_layout

\begin_layout Section*
Contibetting
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

FLOP
\end_layout

\begin_layout Plain Layout

    WHEN (Bets = 0 AND BotIsLastRaiser)
\end_layout

\begin_layout Plain Layout

        WHEN (Opponents = 1 AND Random < 80) BETHALFPOT FORCE
\end_layout

\begin_layout Plain Layout

        WHEN (Opponents = 2 AND Position = Last) BET 66% FORCE
\end_layout

\end_inset


\end_layout

\begin_layout Section*
Effective StackSize
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

NEW SYMBOL EffectiveStacksize
\end_layout

\begin_layout Plain Layout

    // First orbit preflop only, as it uses MaxStillToActStackSize
\end_layout

\begin_layout Plain Layout

    WHEN (StackSize > MaxStillToActStackSize) RETURN MaxStillToActStackSize
 FORCE
\end_layout

\begin_layout Plain Layout

    WHEN Others RETURN StackSize FORCE
\end_layout

\begin_layout Plain Layout

END SYMBOL
\end_layout

\end_inset


\end_layout

\begin_layout Section*
Push/Folding In A SNG
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

// Going into push-fold-mode when stacksizes are small
\end_layout

\begin_layout Plain Layout

// But be careful!
\end_layout

\begin_layout Plain Layout

// We don't want to push loosely if something is wrong with the stacksize,
\end_layout

\begin_layout Plain Layout

// e.g.
 because the table was occluded, so we check, if it is non-zero.
\end_layout

\begin_layout Plain Layout

WHEN ((EffectiveStacksize > 0) AND (EffectiveStacksize <= 13)
\end_layout

\begin_layout Plain Layout

    WHEN (Calls = 0 AND Raises = 0 AND (Hand= ...)) RAISEMAX FORCE
\end_layout

\end_inset


\end_layout

\begin_layout Section*
Detecting A Limp-Raise
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

// First action preflop
\end_layout

\begin_layout Plain Layout

WHEN (BotsActionsOnThisRound = 0 AND Calls >= 1 AND Raises = 0)  
\end_layout

\begin_layout Plain Layout

    // FirstCallerPosition is limited to first orbit preflop only,
\end_layout

\begin_layout Plain Layout

    // so we remember it, making use of advanced memory symbols
\end_layout

\begin_layout Plain Layout

    WHEN Others me_st_MemFirstCallerPosition_FirstCallerPosition
\end_layout

\begin_layout Plain Layout

    // Then continue with normal bot-logic
\end_layout

\begin_layout Plain Layout

    ....
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

// After that we can detect a limp-raise like that
\end_layout

\begin_layout Plain Layout

// (assuming, there are no other raisers in the pot)
\end_layout

\begin_layout Plain Layout

WHEN (LastRaiserPosition = me_re_MemFirstCallerPosition) ...
\end_layout

\end_inset


\end_layout

\begin_layout Section*
Counting outs 
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

NEW SYMBOL MySimpleOutsCounter
\end_layout

\begin_layout Plain Layout

    WHEN (HaveNutFlushDraw AND HaveNutStraightDraw)
\end_layout

\begin_layout Plain Layout

        // We already have 9 + 8 - 2 duplicates
\end_layout

\begin_layout Plain Layout

        // Plus up to 6 undiscounted outs for Overcards
\end_layout

\begin_layout Plain Layout

        // but some may be already counted for the flush
\end_layout

\begin_layout Plain Layout

        // (if we want to make it extra good, we should check the colours
\end_layout

\begin_layout Plain Layout

        // of our hole cards with OpenHoldems symbols $$ps0 and $$ps1)
\end_layout

\begin_layout Plain Layout

        // The others should be discounted a bit
\end_layout

\begin_layout Plain Layout

        WHEN (OverCards = 2) RETURN 18 FORCE
\end_layout

\begin_layout Plain Layout

        WHEN (OverCards = 1) RETURN 16.5 FORCE
\end_layout

\begin_layout Plain Layout

        WHEN (OverCards = 0) RETURN 15 FORCE
\end_layout

\begin_layout Plain Layout

    WHEN (HaveNutFlushDraw) // AND NOT HaveNutStraightDraw
\end_layout

\begin_layout Plain Layout

        WHEN (HaveInsideStraightDraw AND OverCards = 2)...
 
\end_layout

\begin_layout Plain Layout

    ...
\end_layout

\begin_layout Plain Layout

END SYMBOL
\end_layout

\end_inset


\end_layout

\begin_layout Section*
Calling according to odds and outs
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

NEW SYMBOL CardsLeft
\end_layout

\begin_layout Plain Layout

    WHEN (betround = 2) RETURN 47 FORCE
\end_layout

\begin_layout Plain Layout

    WHEN (betround = 3) RETURN 46 FORCE
\end_layout

\begin_layout Plain Layout

    // Drawing at other betrounds doesn't make much sense
\end_layout

\begin_layout Plain Layout

    WHEN Others RETURN -1 FORCE
\end_layout

\begin_layout Plain Layout

END SYMBOL
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

WHEN (AmountToCall / (AmountToCall + PotSize) > Outs / CardsLeft) CALL FORCE
\end_layout

\end_inset


\end_layout

\begin_layout Section*
Playing fit-or-fold multiway
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

NEW SYMBOL HaveStrongDraw
\end_layout

\begin_layout Plain Layout

    WHEN (HaveStraightDraw OR HaveFlushDraw) RETURN True FORCE
\end_layout

\begin_layout Plain Layout

    WHEN (HaveInsideStraightDraw AND Overcards = 2) RETURN True FORCE
\end_layout

\begin_layout Plain Layout

    WHEN Others RETURN False FORCE
\end_layout

\begin_layout Plain Layout

END SYMBOL
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

NEW SYMBOL HaveTopPairOrBetter
\end_layout

\begin_layout Plain Layout

    WHEN (HaveTopPair) RETURN True FORCE
\end_layout

\begin_layout Plain Layout

    WHEN (HaveOverPair) RETURN True FORCE
\end_layout

\begin_layout Plain Layout

    WHEN (HaveBestOverpairOrBetter) RETURN True FORCE
\end_layout

\begin_layout Plain Layout

    WHEN Others RETURN False FORCE
\end_layout

\begin_layout Plain Layout

END SYMBOL
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

FLOP
\end_layout

\begin_layout Plain Layout

WHEN (Opponents >= 3 AND NOT (HaveTopPairOrBetter OR HaveStrongDraw)
\end_layout

\begin_layout Plain Layout

    WHEN (AmountToCall = 0) CHECK FORCE
\end_layout

\begin_layout Plain Layout

    WHEN Others FOLD FORCE
\end_layout

\end_inset


\end_layout

\begin_layout Section*
Leaving tight tables
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

NEW SYMBOL IsUTG
\end_layout

\begin_layout Plain Layout

    WHEN Others RETURN (dealposition = 3) FORCE
\end_layout

\begin_layout Plain Layout

END SYMBOL
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

PREFLOP
\end_layout

\begin_layout Plain Layout

    // SitOut FORCE will first fold and then sitout.
\end_layout

\begin_layout Plain Layout

    // handsplayed and floppct are OpenHoldem symbols 
\end_layout

\begin_layout Plain Layout

    // that can be used like any other OpenPPL symbol.
\end_layout

\begin_layout Plain Layout

    // We wait until the orbit is finished and leave the table
\end_layout

\begin_layout Plain Layout

    // before we have to post the big blind again.
\end_layout

\begin_layout Plain Layout

   WHEN (handsplayed > 15 AND floppct < 0.20 AND HaveTrash AND IsUTG) SitOut
 Force  
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\emph on
Now it's up to you.
 Let the fun begin!
\end_layout

\end_body
\end_document
