#LyX 1.6.2 created this file. For more info see http://www.lyx.org/
\lyxformat 345
\begin_document
\begin_header
\textclass amsbook
\use_default_options true
\begin_modules
theorems-ams
\end_modules
\language english
\inputencoding auto
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Chapter
The 
\begin_inset Index
status open

\begin_layout Plain Layout
GUI
\end_layout

\end_inset

GUI - Familiarizing yourself with OpenHoldem
\end_layout

\begin_layout Standard
So, here we are, 44 
\begin_inset Note Note
status open

\begin_layout Plain Layout
Change that number, before you release the final document!
\end_layout

\end_inset

pages into the manual and we have not created a single snippet of bot logic
 yet.
  However, by this point you should have selected a target casino, and have
 acquired or created a Table Map for that casino so that the game state
 engine in OpenHoldem can understand what is happening on the poker table
 at any given time.
\end_layout

\begin_layout Section
Menu Options
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename E:/Dokumente und Einstellungen/Development/Desktop/OH_SVN/trunk/Documentation/Images/GUI/GUI_Menu_File.JPG

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
OpenHoldem File menu
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename E:/Dokumente und Einstellungen/Development/Desktop/OH_SVN/trunk/Documentation/Images/GUI/GUI_Menu_Edit.JPG

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
OpenHoldem Edit menu
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
The Edit menu contains three options specific to OpenHoldem:
\end_layout

\begin_layout Standard
Figure 5.1-29 OpenHoldem View menuFigure 5.1-30 OpenHoldem DLL menu
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename E:/Dokumente und Einstellungen/Development/Desktop/OH_SVN/trunk/Documentation/Images/GUI/GUI_Menu_View.JPG

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
OpenHoldem View menu
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
The View menu has the standard Windows Toolbar/Status Bar options, plus
 two options specific to OpenHoldem:Scraper Output:  This option opens a
 window that allows you to monitor the output from the screen scraper engine.
  This is useful for debugging purposes.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename E:/Dokumente und Einstellungen/Development/Desktop/OH_SVN/trunk/Documentation/Images/GUI/GUI_Menu_DLL.JPG

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
OpenHoldem DLL menu
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Load:  This option will load the DLL specified in Preferences, or in the
 Formula file.Load Specific File: This option will present a standard File
 Open window to allow you to select a specific DLL file that you want to
 load.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename E:/Dokumente und Einstellungen/Development/Desktop/OH_SVN/trunk/Documentation/Images/GUI/GUI_Menu_Perl.JPG

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
OpenHoldem Perl menu
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
The Perl menu is not a standard Windows menu item, but rather is used to
 load Perl files containing bot logic for use by the OpenHoldem decision
 and action engine.
  See the {Perl} section for more information.
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features>
<column alignment="left" valignment="top" width="35text%">
<column alignment="left" valignment="top" width="65text%">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Load Formula
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
This option will load the Perl file specified in Preferences, or in the
 Formula file.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Reload Formula
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
This option will re-load the Perl file specified in Preferences, or in the
 Formula file.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Load Specific Formula
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
This option will present a standard File Open window to allow you to select
 a specific Perl file that you want to load.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Check Syntax
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
This option will execute your Perl interpreters function to check the syntax
 of your Perl script.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Edit Main Formula
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
This option will launch the editor specified in preferences and load it
 with your main Perl formula file.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename E:/Dokumente und Einstellungen/Development/Desktop/OH_SVN/trunk/Documentation/Images/GUI/GUI_Menu_PokerPro.JPG

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
OpenHoldem PokerPro menu
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
The PokerPro menu is not a standard Windows menu item, but rather is used
 to connect OpenHoldem to a PokerPro server.
  PokerPro is an open server protocol designed by Ray Bornert.
 Full documentation on the PokerPro protocol can be found at his website
\begin_inset Foot
status open

\begin_layout Plain Layout
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://forum.winholdem.net/wbb/viewforum.php?f=22
\end_layout

\end_inset


\end_layout

\end_inset

.
 More details can be found in the {PokerPro} section.
 
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="2">
<features>
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Go
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
This option displays the PokerPro control window.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename E:/Dokumente und Einstellungen/Development/Desktop/OH_SVN/trunk/Documentation/Images/GUI/GUI_Menu_Help.JPG

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
OpenHoldem Help menu
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Force Crash:  This option will literally cause OpenHoldem to crash with
 an error.
 Specifically, the error is an assignment to a NULL pointer, like so:
\end_layout

\begin_layout Standard

\noun on
int *invalid_memory_access = NULL;
\end_layout

\begin_layout Standard

\noun on
*invalid_memory_access = 0;
\end_layout

\begin_layout Standard
This option is present primarily for one reason, to allow you to test how
 your automation system will handle an OpenHoldem crash, if it occurs.
  OpenHoldem is very stable, but as with all software, the occasional bug
 creeps in.
  Also, as OpenHoldem allows the use of user-defined code (via DLLs, Perl
 scripts, etc), misbehaved user defined code can also cause crashes.
  See the chapter on {Automation} for more information.
\end_layout

\begin_layout Subsection
\begin_inset Index
status open

\begin_layout Plain Layout
Locking blinds
\end_layout

\end_inset

Locking Blinds 
\end_layout

\begin_layout Standard
There is a button on OpenHoldem’s main toolbar, that looks like a padlock
 and dollar symbol, which opens up the following window to allow you to
 “lock blinds”.
 
\end_layout

\begin_layout Standard
Figure 5.20-58 OpenHoldem Lock Blinds window
\end_layout

\begin_layout Standard
OpenHoldem has many methods for determining the blinds at any given time,
 including: Scraping of Title Bar text (as specified in the Table Map) Scraping
 of Regions from the Table Map Intuiting the blinds from patterns in betting
 round 1
\end_layout

\begin_layout Standard
In some cases, you may want to bypass all of these blind detection methods
 and force OpenHoldem to use a certain blind setup.
 A good example of this is if you are playing at a Ring Table, where the
 blinds never change.
 This would not be so applicable to SNGs or MTTs, as the blinds regularly
 change in those games.
 This window will allow you to specify blinds to be used as long as the
 “padlock and dollar symbol” button on the main toolbar is depressed.
\end_layout

\begin_layout Section
Toolbars
\end_layout

\begin_layout Standard
Figure 5.1-34 OpenHoldem Main toolbar !!!
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename E:/Dokumente und Einstellungen/Development/Desktop/OH_SVN/trunk/Documentation/Images/GUI/GUI_Main_Toolbar.JPG

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
OpenHoldem Main Toolbar
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
From left to right, the buttons on the Main toolbar are:
\end_layout

\begin_layout Itemize
New formula file
\end_layout

\begin_layout Itemize
Open formula file
\end_layout

\begin_layout Itemize
Save formula file
\end_layout

\begin_layout Itemize
Disconnect from table (Red circle)
\end_layout

\begin_layout Itemize
Engage The Autoplayer (Nested diamonds) !!! Vali!!!
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename E:/Dokumente und Einstellungen/Development/Desktop/OH_SVN/trunk/Documentation/Images/GUI/GUI_Flags_Toolbar.JPG

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
OpenHoldem Flags Toolbar
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
The Flags toolbar is used to set internal OpenHoldem flag symbols to on
 or off.
  See the {OH-Script} section for discussion on the use of the flags symbols.
\end_layout

\begin_layout Section
Status Bar
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename E:/Dokumente und Einstellungen/Development/Desktop/OH_SVN/trunk/Documentation/Images/GUI/GUI_Statusbar.JPG

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
OpenHoldem Statusbar
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
From left to right, the fields on the Status Bar are:
\end_layout

\begin_layout Itemize
Your hole cards
\end_layout

\begin_layout Itemize
The common (board) cards
\end_layout

\begin_layout Itemize
Your poker hand
\end_layout

\begin_layout Itemize
Current value of f$P, one of the standard formula functions.
 This formula is intended to indicate number of opponents, however this
 number can be more or less than the number of opponents actually seen on
 the table at any given time.
  More information on f$P can be found in the {Primary Functions} section.
\end_layout

\begin_layout Section
Table Display
\end_layout

\begin_layout Standard
The OpenHoldem table display is intended to give you a quick visual reference
 as to what the screen scraper engine is actually seeing on the poker table
 at any given time.
  In this screen shot, OpenHoldem is connected to a ManualMode window.
  See the {ManualMode} section for more information on ManualMode.
\end_layout

\begin_layout Standard
The FCKRA boxes on the bottom right indicate the status of the Fold, Call,
 Check, Raise and Allin buttons; colored means those buttons are seen as
 ready to be clicked, and white dotted outlines means they are not seen
 as ready to be clicked.
\end_layout

\begin_layout Standard
The center information box contains various other information, including
 the hand number, limit type and limits, ante and current pot value.
\end_layout

\begin_layout Section
The 
\begin_inset Index
status open

\begin_layout Plain Layout
Formula editor
\end_layout

\end_inset

Formula Editor
\end_layout

\begin_layout Standard
!!! Formula-description not here!!!, but in introduction!!!
\end_layout

\begin_layout Standard
Figure 5.6-37 OpenHoldem Formula Editor
\end_layout

\begin_layout Standard
The large control on the right side of the window displays the code for
 whatever function you have currently selected in the tree on the left.
 Primary FunctionsFunction Description 
\end_layout

\begin_layout Standard
f$alliThis 
\end_layout

\begin_layout Standard
function instructs the Autoplayer to move all-in, either with the slider,
 or by entering the bet into the SWAG box, depending on the parameters in
 the Table Map.
  If this function evaluates to a non-zero result, and an appropriate control
 is present on the table (slider, swag field), then the Autoplayer will
 move all in.
\end_layout

\begin_layout Standard
f$swagThis function instructs the Autoplayer to place a stated wager (SWAG)
 by entering the bet into the SWAG box.
  If this function evaluates to a non-zero result, and the SWAG box is present
 on the table, then the Autoplayer will enter the results of f$swag into
 the SWAG box and confirm the bet.
\end_layout

\begin_layout Standard
f$raisThis function instructs the Autoplayer to raise.
  If this function evaluates to a non-zero result, and the raise button
 is present on the table, then the Autoplayer will click the raise button.
\end_layout

\begin_layout Standard
f$callThis function instructs the Autoplayer to call.
  If this function evaluates to a non-zero result, and the call button is
 present on the table, then the Autoplayer will click the call button.Secondary
 FunctionsThe following table describes the secondary functions.
  These are secondary, because they do not directly instruct the Autoplayer
 to take action, but rather are used indirectly to determine the action,
 some of which are not the traditional poker actions of all-in, raising,
 checking, calling or folding.Function Description 
\end_layout

\begin_layout Standard
f$PThis function is intended to evaluate to the number of opponents that
 should be simulated when OpenHoldem calculates various symbols.The symbols
 influenced by this function are those calculated by the Iterator (see {The
 Iterator} section}, prwin, prlos, and prtie, and also by the symbols prwinnow,
 prlosnow, and handrankp.The f$P value is important to these symbols because
 it determines how many opposing hands are simulated.
 The f$P value will radically affect the values of these symbols.
  For example, the higher the f$P value the more opponent hands will be
 simulated and your win probability will be lower.
 Similarly, the lower the f$P value the less opponent hands will be simulated
 and your win probability will be higher.
  For instance, AA against 9 opponents (f$P==9) has about a 30% chance of
 winning, assuming every hand stays for the showdown (no-foldem).
  AA against 1 opponent (P=1) has about an 80% chance of winning.
  The possible values for f$P are 0 to 22, inclusive.
 If f$P exceeds 22, it will be set to 22, as 22 is the maximum number of
 players our imaginary HoldEm table would be able to play (22 opponents
 * 2 cards = 44 cards, my two cards, the 5 common cards).
\end_layout

\begin_layout Standard
f$sraiThis function is a support function for f$swag.
  The intent is that f$srai specifies the amount to raise above the current
 bet, and that f$swag then further adjusts that based on the style that
 the individual casino uses to post SWAG bets.
  Here is an example of a vanilla f$swag function that calls f$srai:##f$swag##f$
srai>0 ? ((((f$swag_adjust + f$srai)/sblind)+.5)^0)*sblind : 0##f$swag_adjust##sw
agtextmethod == 3 ? (call + currentbet) : swagtextmethod == 2 ? (call) :
 0Note that this f$swag also rounds your bet to the nearest sblind.
\end_layout

\begin_layout Standard
f$prefoldIf this function evaluates to non-zero, and a pre-fold button is
 visible on the poker table window (as defined in the Table Map), then OpenHolde
m will engage that pre-fold button as soon as it can (which may be before
 it is your turn to act).
 A good example of a f$prefold function might be the following:
\end_layout

\begin_layout Standard

\emph on
##f$prefold##
\end_layout

\begin_layout Standard

\emph on
br==1 
\end_layout

\begin_layout Standard

\emph on
&& nplayersdealt>4 
\end_layout

\begin_layout Standard

\emph on
&& handrank2652>2652*0.66 
\end_layout

\begin_layout Standard

\emph on
&& !currentbet && !f$swag &&!!!??? && !f$rais && !f$call
\end_layout

\begin_layout Standard
f$delayThe function controls how long to delay, once the specified number
 of stable frames have been seen (see {Preferences} section}, to take a
 poker action.
 The function evaluates to the delay time in milliseconds.An example of this
 might be:
\end_layout

\begin_layout Standard
f$chat
\end_layout

\begin_layout Standard
f$playThis function controls how the Autoplayer interacts with the sitin,
 sitout, and leave buttons as defined in the Table Map.
 The possible values that this function can return are explicit and limited.
  Any other return values are ignored.
 The allow return values and their meaning are: -2, Leave table -1, No change
 (if you are sitting out, stay out, if sitting in stay that way) 0, Sit
 out 1, Sit in/Stay inf$evraisf$evcallHelper FunctionsThe following table
 describes the helper functions.
  These are not used by the Autoplayer.Function Description 
\end_layout

\begin_layout Standard
Notes
\end_layout

\begin_layout Standard
This is a free form function for you to use as you please.
  This is typically used for usage instructions and version notes.
\end_layout

\begin_layout Standard
dll
\end_layout

\begin_layout Standard
Contains a filename or path to a DLL to load by default.
 For example: my_user_dll.dll
\end_layout

\begin_layout Standard
f$test
\end_layout

\begin_layout Standard
This function is intended to be used to test expressions.
 Whatever is typed in here gets calculated as a whole when the "Calc" button
 is clicked.
 f$test can be referenced from other formulas, although that is not recommended,
 as f$test is really intended as a development/debugging aid.
 
\end_layout

\begin_layout Standard
f$debug
\end_layout

\begin_layout Standard
The debug function operates differently than the other function.
 Its purpose is to allow for arbitrary expressions to be evaluated and the
 results of those expressions to be displayed.
 To add a new expression add a new line with an equal sign, followed by
 the expression.
 For example: 
\end_layout

\begin_layout Standard

\noun on
= 2+2
\end_layout

\begin_layout Standard

\noun on
= f$UserDefinedFormula
\end_layout

\begin_layout Standard

\noun on
= nopponents
\end_layout

\begin_layout Standard
In order for the results to be displayed you must either press the 'Calc'
 or 'Auto' button.
 The 'Auto' button will recalculate the debug formula once each heartbeat.
 For example: 
\end_layout

\begin_layout Standard

\noun on
4 = 2+2
\end_layout

\begin_layout Standard

\noun on
1 = f$UserDefinedFormula
\end_layout

\begin_layout Standard

\noun on
6 = nopponents
\end_layout

\begin_layout Standard
If an expression is invalid it will be reported where the result would normally
 be found.
 Menu OptionsFigure 5.11-38 Formula Editor - File menuThe File menu has three
 options to control how changes made to your formula are applied back to
 the production formula:Apply:  Copy changes made to the working formula
 to the production formula and keep the Formula Editor window openOK:  Copy
 changes made to the working formula to the production formula and close
 the Formula Editor windowCancel:  Discard changes made to the working formula
 and close the Formula Editor windowFigure 5.11-39 Formula Editor - Edit
 menuThe Edit menu has a number of options:Undo, Redo, Find, Cut, Copy,
 Paste, Delete Text, Select All:  These are all standard Windows menu items
 that operate in the standard way.Font:  This menu option opens the standard
 Windows font selector dialog to allow you to select the font to display
 in the Scintilla editor window.Settings:  This opens a window that allows
 you to set the Bankroll, Defcon, NIT, and Rake parameters of the formula
 file.
  These settings can be used in your formulas, and are referenced by some
 symbols.Hand List:  When a Hand List is selected, this will open the Hand
 List Editor window so you can specify which starting hands belong in the
 selected Hand List.
  See the {Hand Lists} section for more information.Figure 5.11-40 Formula
 Editor - View menuThe View menu has the standard Windows toolbar option,
 plus several OpenHoldem specific options:Show Line Numbers, Show Selection
 Margin, Show Folding Margin, and Syntax Coloring provide access to features
 of the Scintilla Control
\begin_inset Foot
status open

\begin_layout Plain Layout
See 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.scintilla.org
\end_layout

\end_inset

 for more information.
\end_layout

\end_inset

.
 Sort UDFs and Group UDFs allow for grouping and sorting of User Defined
 Functions that you create.
  These options simply allow for ease of navigation, especially for formulas
 with large numbers of UDFs.Figure 5.11-41 Formula Editor - Debug menuFigure
 5.11-42 Formula Editor - Help menu	The Help menu provides links to the OpenHolde
m Wiki and to the OpenHoldem discussion forums.ToolbarFigure 5.11-43 OpenHoldem
 Formula Editor toolbarFrom left to right, the buttons on the Main toolbar
 are:New function/hand list (empty document)Rename function/hand list (pencil)De
lete function/hand list (big X)Open the Windows font selection dialog (two
 blue letter As)Open the Formula Parameters window (hand pointing at a document)
Open the Hand List Editor window (3x3 squares)
\end_layout

\end_body
\end_document
