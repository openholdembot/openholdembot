#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass amsbook
\use_default_options true
\begin_modules
theorems-ams
eqs-within-sections
figs-within-sections
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 0
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 0
\use_package mhchem 1
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth -2
\tocdepth -2
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter*
Things To Know
\end_layout

\begin_layout Standard
If you are a botter who used Shanky-PPL in the past there are some differences
 you should know about:
\end_layout

\begin_layout Section*
No default bot
\end_layout

\begin_layout Standard
OpenPPL does not provide a default 
\begin_inset Quotes eld
\end_inset

winning-bot
\begin_inset Quotes erd
\end_inset

, especially no built-in 
\noun on
doodle
\noun default
-profile like BonusBots.
 
\noun on
Doodle
\noun default
 simply is a copyrighted business-secret of Shanky and giving away the miracle
 million-dollar-maker to every single one of your opponents would be no
 joy, wouldn't it?
\end_layout

\begin_layout Section*
Plain text only
\end_layout

\begin_layout Standard
For the same reason there is no support for encrypted PPL-profiles.
 Our aim is to build an open-source botting-tool and not a marketing-platform
 for shady salesmen.
 Therefore OpenPPL is plain text only --- for profiles you own legally,
 or even better: for profiles you build on your own.
\end_layout

\begin_layout Section*
No option settings
\end_layout

\begin_layout Standard
Standard Shanky-PPL supports option settings to configure their build-in-default
 bot; at least that was the old way to do so, but nowadays most of these
 settings get overwritten by the profile and have no effect at all.
 As OpenPPL does not support a default bot these option settings have no
 effect and get ignored.
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

MakePotSizedPreFlopRaisesWhen = 6
\end_layout

\begin_layout Plain Layout

FoldToPre-FlopRaisesForAQAJsKQ = OFF
\end_layout

\begin_layout Plain Layout

FoldPost-FlopBelowTopPairToAnyBetOrRaise = OFF
\end_layout

\begin_layout Plain Layout

FoldToPost-FlopRaisesWithUnpairedBoardsFor = 2 
\end_layout

\begin_layout Plain Layout

...
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

Custom
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

Preflop
\end_layout

\begin_layout Plain Layout

...
\end_layout

\end_inset


\end_layout

\begin_layout Section
No Keyword Custom
\end_layout

\begin_layout Standard
As no built-in default bot exists the whole bot-logic is 
\begin_inset Quotes eld
\end_inset

custom
\begin_inset Quotes erd
\end_inset

.
 Sure, we could ignore that superfluous keyword, however it is an indication
 of old-style or Shanky-style (Open)PPL.
 There will be more things 
\begin_inset Quotes eld
\end_inset

wrong
\begin_inset Quotes erd
\end_inset

 for sure, so we prefer to show you a warning as early as possible.
\end_layout

\begin_layout Section*
Preflop, Flop, Turn and River Sections
\end_layout

\begin_layout Standard
The four main code-sections are functions (technically speaking), therefore
 they have OH-script-style function-syntax:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

##f$preflop##
\end_layout

\begin_layout Plain Layout

WHEN ...
 RAISEMAX FORCE
\end_layout

\begin_layout Plain Layout

...
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

##f$flop##
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

##f$turn##
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

##f$river##
\end_layout

\end_inset


\end_layout

\begin_layout Standard
All four code-sections must be present for OpenHoldem to switch into OpenPPL-mod
e.
\end_layout

\begin_layout Section*
Naming Conventions
\end_layout

\begin_layout Section*
Floating Point Numbers
\end_layout

\begin_layout Standard
There are some differences between Standard PPL and OpenPPL that cause troubles
 for the converter -- luckily only very few:
\end_layout

\begin_layout Itemize
Standard PPL uses integers everywhere, whereas OpenPPL uses floating point
 numbers.
 An example: in Standard PPL you could write code like:
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

WHEN Stacksize = 1 AND ...
 RAISE FORCE
\end_layout

\begin_layout Plain Layout

WHEN Stacksize = 2 AND
\end_layout

\end_inset

or even
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

WHEN AmountToCall = 70% Stacksize
\end_layout

\end_inset

which will cause troubles with OpenHoldem, because OpenHolden uses real
 numbers like 31.41.
 Therefore it is recommended to use inequality-operators, for example like
 below: 
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

WHEN Stacksize < 1.5 AND ...
 RAISE FORCE
\end_layout

\begin_layout Plain Layout

WHEN Stacksize < 2.5 AND
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Standard PPLs symbol ButFullHouseOrFourOfAKind use lower numbers for better
 full houses or quads, but 0 for no full house at all.
 This is somewhat inconsistent and OpenPPL uses a high number (999) for
 that case.
\end_layout

\begin_layout Standard
However: you will get warned about the first case and the second case will
 be automatically fixed if you preprocess your existing profiles with our
 tool bracketify.pl.
\end_layout

\begin_layout Section*
Hand and board expressions
\end_layout

\begin_layout Section*
Cases matter (partially)
\end_layout

\begin_layout Standard
OpenHoldem is case-sensitive - contrary to standard PPL.
 So upper- and lower-cases matter - at least for the translated code.
 The rules for your OpenPPL-code are more user-friendly and less rigid.
 There are basically 3 cases:
\end_layout

\begin_layout Itemize
Keywords like 
\begin_inset Quotes eld
\end_inset

WHEN
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

AND
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

RAISEMAX
\begin_inset Quotes erd
\end_inset

, etc.
 For keywords 3 different spellings are allowed: all upper-cases, all lower-case
s and reasonable mixes.
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

WHEN (Hand = AA) RAISEMAX FORCE
\end_layout

\begin_layout Plain Layout

When (Hand = AA) RaiseMax Force
\end_layout

\begin_layout Plain Layout

when (Hand = AA) raisemax force
\end_layout

\end_inset

For better readability we recommend to use only upper-cases for keywords.
\end_layout

\begin_layout Itemize
OpenPPL-symbols that are part of the library.
 They are case-insensitive and you can write them any way you want.
 The translator knows their correct spelling and is able to generate correct
 code automatically.
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

WHEN (StillToAct < 2) RAISE 3 FORCE
\end_layout

\begin_layout Plain Layout

WHEN (stilltoact < 2) RAISE 3 FORCE
\end_layout

\begin_layout Plain Layout

WHEN (sTiLlToAcT < 2) RAISE 3 FORCE
\end_layout

\end_inset

For better readability we recommend mixed cases like in the library and
 in this manual.
\end_layout

\begin_layout Itemize
OpenHoldem symbols.
 Native OpenHoldem symbols are case-sensitive and always lower-cases.
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

WHEN (pt_vpip0 < 10) FOLD FORCE
\end_layout

\begin_layout Plain Layout

WHEN (balance0 < 50) RAISEMAX FORCE
\end_layout

\end_inset

However: you will probably use these symbols very rarely in your code.
 Probably only to create poker-logical symbols like PT_OpenRaiser_VPIP and
 BigBlindStackSize.
\end_layout

\begin_layout Section*
No Shanky-Style Delay
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

##f$delay##
\end_layout

\begin_layout Plain Layout

WHEN UncoordinatedFlop AND Random < 10 RETURN 2500 FORCE
\end_layout

\begin_layout Plain Layout

WHEN ...
\end_layout

\end_inset


\end_layout

\begin_layout Section*
f$sitout function
\end_layout

\end_body
\end_document
