#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass amsbook
\use_default_options true
\begin_modules
theorems-ams
eqs-within-sections
figs-within-sections
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth -2
\tocdepth -2
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
Image Records 
\end_layout

\begin_layout Subsection
Description
\end_layout

\begin_layout Standard
Image records serve multiple purposes.
 The first purpose is for regions that use the Image transform.
 When a region requires this type of lookup, the screen scraper engine will
 first look for an exact pixel-for-pixel image match in the Image records,
 and if no match is found, will then look for the closest match (with the
 65% tolerance, as described in the Region Records {Technical Reference}
 section).
 The second purpose of the Image records is to serve as a reference from
 which Hash records are created (see the {Hash Records} section).
 Note: Image transforms are very CPU intensive, as they require 2 passes
 through the Image records, the first to try to find an exact match, and
 the second to find a closest match.
 Each pass requires a comparison of every single pixel in the region.
 For large regions, this is a lot of comparisons.
 The time required to do Image transform lookups is directly proportional
 to the number of Image records present, and the size of the requesting
 Region record.
 It almost always makes more sense to use the Hash transform to do image
 matching, as the Hash lookup algorithm is orders of magnitude faster.
\end_layout

\begin_layout Subsection
Manipulating image records using OpenScrape
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/OS_CreateImage.png

\end_inset


\end_layout

\begin_layout Standard
The “Create Image” button on the Table Map Editor window is used to create
 new Image records.
 This button is only available if a region record has previously been selected.
\end_layout

\begin_layout Standard
When the “Create Image” button is clicked, the following window will appear:
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/OS_NewImage.png

\end_inset


\end_layout

\begin_layout Standard
The only required piece of information on this window is the name of the
 Image record, however, the name you choose is crucially important, as this
 name is what is returned to the game state engine directly for an Image
 transform, and is what is populated on the Hash record when you create
 a hash from this image.
\end_layout

\begin_layout Standard
The name is dependent on what the image is used for, but for example, if
 this is an image of the ace of clubs, you would want to name it “Ac”.
 If this is an image of a dealer button, you would want to name it “dealer”.
 (See the Region Records section, {Technical Reference}, for valid return
 values for each region)
\end_layout

\begin_layout Subsection
Technical Reference 
\end_layout

\begin_layout Standard
In the Table Map (.tm) file, these records will be preceded with the characters
 "i$".
 Image records have the following format:
\end_layout

\begin_layout Standard

\noun on
i$<name> width height 
\end_layout

\begin_layout Standard

\noun on
scanline0 
\end_layout

\begin_layout Standard

\noun on
scanline1 
\end_layout

\begin_layout Standard

\noun on
...
 
\end_layout

\begin_layout Standard

\noun on
scanlineN
\end_layout

\begin_layout Standard
<name> is the description of the image, and is the value returned to the
 screen scraper engine or is the name given to an associated Hash record
 <width> and <height> are integer values that give the size of the image
 <scanline0> - <scanlineN> contain the raw 32bit hexadecimal values for
 each pixel.
 Each pixel is in the form BBGGRRAA.
 There is no whitespace between pixel values.
 Each scanline is terminated with a standard Microsoft Windows line ending
 (carriage return/line feed).
 The number of scanline records is equal to the height of the image.
 The text length of a scanline record is width*8.
 
\end_layout

\end_body
\end_document
