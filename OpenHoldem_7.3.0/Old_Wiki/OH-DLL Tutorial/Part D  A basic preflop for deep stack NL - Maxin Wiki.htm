
<!-- saved from url=(0222)http://cc.bingj.com/cache.aspx?q=%22links%3ahttp%3a%2f%2fwww.maxinmontreal.com%2fwiki%2f+site%3ahttp%3a%2f%2fwww.maxinmontreal.com+dll+part+d%22&d=4691565575407298&mkt=fr-CH&setlang=fr-CH&w=X3nMIHTgO9VVeiBeaMYi0G6TApE6Q5Az -->
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><!--<base href="http://www.maxinmontreal.com/wiki/index.php5/Part_D:_A_basic_preflop_for_deep_stack_NL">--><base href="."><!-- Banner:Start --><style type="text/css">#b_cpb{color: black; font: normal normal normal small normal arial,sans-serif} #b_cpb a{color: blue; text-decoration: underline; font-weight:normal}</style><!--LocalizedDate:07.04.2013--><!--InvariantDate:4/7/2013--></head><body class="mediawiki ns-0 ltr page-Part_D_A_basic_preflop_for_deep_stack_NL"><table width="100%" style="background-color:#fff; text-align:left;" border="1" bordercolor="#909090" cellpadding="5"><tbody><tr><td><span id="b_cpb"><!-- Title:Start --><div>Vous avez atteint la page mise en cache pour <strong><a href="http://www.maxinmontreal.com/wiki/index.php5/Part_D:_A_basic_preflop_for_deep_stack_NL" h="ID=SERP,5003.1">http://www.maxinmontreal.com/wiki/index.php5/Part_D:_A_basic_preflop_for_deep_stack_NL</a></strong></div><!-- Title:End --><!-- Content:Start --><div style="margin-top:1em;">Vous trouverez ci-dessous un aperçu de la page Web telle qu'elle s'affichait le <strong>07.04.2013</strong>. Il s'agit de la version de la page utilisée pour classer vos résultats de recherche. Cette page peut avoir changé depuis sa dernière mise en cache. Pour voir ce qui peut avoir changé (sans le surlignage), <a href="http://www.maxinmontreal.com/wiki/index.php5/Part_D:_A_basic_preflop_for_deep_stack_NL" h="ID=SERP,5003.2">visitez la page actuelle</a>.</div><!-- Content:End --><!-- Disclaimer:Start --><div style="margin-top:1em;float:right"><span style="font-size:x-small;">Bing n'est pas responsable du contenu de cette page.</span></div><!-- Disclaimer:End --></span></td></tr></tbody></table><!-- Banner:End --><div style="position:relative">

	
		
				<meta name="keywords" content="Part D: A basic preflop for deep stack NL">
		<link rel="shortcut icon" href="http://www.maxinmontreal.com/favicon.ico">
		<link rel="search" type="application/opensearchdescription+xml" href="http://www.maxinmontreal.com/wiki/opensearch_desc.php" title="Maxin Wiki (English)">
		<title>Part D: A basic preflop for deep stack NL - Maxin Wiki</title>
		<style type="text/css" media="screen, projection">/*<![CDATA[*/
			@import "/wiki/skins/common/shared.css?97";
			@import "/wiki/skins/monobook/main.css?97";
		/*]]>*/</style>
		<link rel="stylesheet" type="text/css" media="print" href="./Part D  A basic preflop for deep stack NL - Maxin Wiki_files/commonPrint.css">
		<!--[if lt IE 5.5000]><style type="text/css">@import "/wiki/skins/monobook/IE50Fixes.css?97";</style><![endif]-->
		<!--[if IE 5.5000]><style type="text/css">@import "/wiki/skins/monobook/IE55Fixes.css?97";</style><![endif]-->
		<!--[if IE 6]><style type="text/css">@import "/wiki/skins/monobook/IE60Fixes.css?97";</style><![endif]-->
		<!--[if IE 7]><style type="text/css">@import "/wiki/skins/monobook/IE70Fixes.css?97";</style><![endif]-->
		<!--[if lt IE 7]><script type="text/javascript" src="/wiki/skins/common/IEFixes.js?97"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->
		
		<script type="text/javascript">/*<![CDATA[*/
var skin = "monobook";
var stylepath = "/wiki/skins";
var wgArticlePath = "/wiki/index.php5/$1";
var wgScriptPath = "/wiki";
var wgScript = "/wiki/index.php5";
var wgServer = "http://www.maxinmontreal.com";
var wgCanonicalNamespace = "";
var wgCanonicalSpecialPageName = false;
var wgNamespaceNumber = 0;
var wgPageName = "Part_D:_A_basic_preflop_for_deep_stack_NL";
var wgTitle = "Part D: A basic preflop for deep stack NL";
var wgAction = "view";
var wgRestrictionEdit = [];
var wgRestrictionMove = [];
var wgArticleId = "524";
var wgIsArticle = true;
var wgUserName = null;
var wgUserGroups = null;
var wgUserLanguage = "en";
var wgContentLanguage = "en";
var wgBreakFrames = false;
var wgCurRevisionId = "292584";
/*]]>*/</script>
                
		<script type="text/javascript" src="./Part D  A basic preflop for deep stack NL - Maxin Wiki_files/wikibits.js"><!-- wikibits js --></script><link rel="stylesheet" type="text/css" href="./Part D  A basic preflop for deep stack NL - Maxin Wiki_files/KHTMLFixes.css">
		<script type="text/javascript" src="./Part D  A basic preflop for deep stack NL - Maxin Wiki_files/index.php5"><!-- site js --></script>
		<style type="text/css">/*<![CDATA[*/
@import "/wiki/index.php5?title=MediaWiki:Common.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=18000";
@import "/wiki/index.php5?title=MediaWiki:Monobook.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=18000";
@import "/wiki/index.php5?title=-&action=raw&gen=css&maxage=18000";
/*]]>*/</style>
		<!-- Head Scripts -->
		<script type="text/javascript" src="./Part D  A basic preflop for deep stack NL - Maxin Wiki_files/ajax.js"></script>
	

	<div id="globalWrapper">
		<div id="column-content">
	<div id="content">
		<a name="top" id="top"></a>
				<h1 class="firstHeading">Part D: A basic preflop for deep stack NL</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From Maxin Wiki</h3>
			<div id="contentSub"></div>
									<div id="jump-to-nav">Jump to: <a href="http://www.maxinmontreal.com/wiki/index.php5/Part_D:_A_basic_preflop_for_deep_stack_NL#column-one">navigation</a>, <a href="http://www.maxinmontreal.com/wiki/index.php5/Part_D:_A_basic_preflop_for_deep_stack_NL#searchInput">search</a></div>			<!-- start content -->
			<table id="toc" class="toc" summary="Contents"><tbody><tr><td><div id="toctitle"><h2>Contents</h2> <span class="toctoggle">[<a id="togglelink" class="internal" href="javascript:toggleToc()">hide</a>]</span></div>
<ul>
<li class="toclevel-1"><a href="http://www.maxinmontreal.com/wiki/index.php5/Part_D:_A_basic_preflop_for_deep_stack_NL#Factors_affecting_preflop_decisions"><span class="tocnumber">1</span> <span class="toctext">Factors affecting preflop decisions</span></a></li>
<li class="toclevel-1"><a href="http://www.maxinmontreal.com/wiki/index.php5/Part_D:_A_basic_preflop_for_deep_stack_NL#Basic_Functions"><span class="tocnumber">2</span> <span class="toctext">Basic Functions</span></a>
<ul>
<li class="toclevel-2"><a href="http://www.maxinmontreal.com/wiki/index.php5/Part_D:_A_basic_preflop_for_deep_stack_NL#Type_of_Hand"><span class="tocnumber">2.1</span> <span class="toctext">Type of Hand</span></a></li>
<li class="toclevel-2"><a href="http://www.maxinmontreal.com/wiki/index.php5/Part_D:_A_basic_preflop_for_deep_stack_NL#Position"><span class="tocnumber">2.2</span> <span class="toctext">Position</span></a></li>
<li class="toclevel-2"><a href="http://www.maxinmontreal.com/wiki/index.php5/Part_D:_A_basic_preflop_for_deep_stack_NL#Money_and_Player_Variables"><span class="tocnumber">2.3</span> <span class="toctext">Money and Player Variables</span></a></li>
<li class="toclevel-2"><a href="http://www.maxinmontreal.com/wiki/index.php5/Part_D:_A_basic_preflop_for_deep_stack_NL#OH-globalvars.h"><span class="tocnumber">2.4</span> <span class="toctext">OH-globalvars.h</span></a></li>
<li class="toclevel-2"><a href="http://www.maxinmontreal.com/wiki/index.php5/Part_D:_A_basic_preflop_for_deep_stack_NL#OH-general.h"><span class="tocnumber">2.5</span> <span class="toctext">OH-general.h</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="http://www.maxinmontreal.com/wiki/index.php5/Part_D:_A_basic_preflop_for_deep_stack_NL#Remarks_on_Preflop_Code"><span class="tocnumber">3</span> <span class="toctext">Remarks on Preflop Code</span></a>
<ul>
<li class="toclevel-2"><a href="http://www.maxinmontreal.com/wiki/index.php5/Part_D:_A_basic_preflop_for_deep_stack_NL#Source_Code"><span class="tocnumber">3.1</span> <span class="toctext">Source Code</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="http://www.maxinmontreal.com/wiki/index.php5/Part_D:_A_basic_preflop_for_deep_stack_NL#Files"><span class="tocnumber">4</span> <span class="toctext">Files</span></a></li>
</ul>


</td></tr></tbody></table><script type="text/javascript"> if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } </script>
<a name="Factors_affecting_preflop_decisions"></a><h3><span class="editsection">[<a href="http://www.maxinmontreal.com/wiki/index.php5?title=Part_D:_A_basic_preflop_for_deep_stack_NL&action=edit&section=1" title="Edit section: Factors affecting preflop decisions">edit</a>]</span> <span class="mw-headline"> Factors affecting preflop decisions </span></h3>
<p>The first things we need are the basic tools, so we need to think about the factors which affect the decision preflop.
</p>
<ul><li> type of hand
</li><li> position
</li><li> current hand scenario (first in, limped pot, raised pot, 3bet pot etc.)
</li></ul>
<p>Obviously there is more, like which types of opponents are still playing in the hand, what is the table image, but we will neglect opponent modeling for this article.
</p><p><b>Source(s):</b>  <a href="http://www.downloadranking.com/" class="external text" title="http://www.downloadranking.com" rel="nofollow">Factors affecting preflop decisions </a>
</p>
<a name="Basic_Functions"></a><h3><span class="editsection">[<a href="http://www.maxinmontreal.com/wiki/index.php5?title=Part_D:_A_basic_preflop_for_deep_stack_NL&action=edit&section=2" title="Edit section: Basic Functions">edit</a>]</span> <span class="mw-headline"> Basic Functions </span></h3>
<a name="Type_of_Hand"></a><h4><span class="editsection">[<a href="http://www.maxinmontreal.com/wiki/index.php5?title=Part_D:_A_basic_preflop_for_deep_stack_NL&action=edit&section=3" title="Edit section: Type of Hand">edit</a>]</span> <span class="mw-headline"> Type of Hand </span></h4>
<p>This is pretty easy, we only need rankhiplayer, rankloplayer, issuited to determine your hand. You can always simply get these values with the gws() function, but I will extract them from the "holdem_state" struct, it's more examples for you and it's better to avoid gws() calls as often as possible.
</p><p>These are the vars we will define to determine the type of hand:
</p>
<pre>bool issuited;
int card[7][2];
int rankhiplayer;
int rankloplayer;
int gap;            // 0 = pair, 1 = connected, 2 = one-gapper etc...

</pre>
<p>First we need a function to set our card values:
</p>
<pre>void set_card_values(){
	/*
		sets the card values
	*/

	//pocket cards
	card[0][0] = RANK(m_holdem_state[m_ndx].m_player[userchair].m_cards[0]);
	card[0][1] = SUIT(m_holdem_state[m_ndx].m_player[userchair].m_cards[0]);
	card[1][0] = RANK(m_holdem_state[m_ndx].m_player[userchair].m_cards[1]);
	card[1][1] = SUIT(m_holdem_state[m_ndx].m_player[userchair].m_cards[1]);

	//board cards
	for(int u=0;u&lt;5;u++){
		card[u+2][0] = RANK(m_holdem_state[(m_ndx)&amp;0xff].m_cards[u]);
		card[u+2][1] = SUIT(m_holdem_state[(m_ndx)&amp;0xff].m_cards[u]);
	}
}
</pre>
<p>Note that we used the card macros RANK &amp; SUIT, which were provided with the basic dll. These macros convert the "unsigned char" values to "integer" values:
</p><p>rank 2&nbsp;; ...&nbsp;; 14=A <br>
suit 1=C&nbsp;; 2=D&nbsp;; 3=H&nbsp;; 4=S <br>
</p><p>Now we can define the functions to set our variables:
</p>
<pre>int set_rankhiplayer(){
	/*
		returns hi player rank
	*/
	if(card[0][0] &gt; card[1][0]){
		return card[0][0];
	}
	else{
		return card[1][0];
	}
}
int set_rankloplayer(){
	/*
		returns lo player rank
	*/
	if(card[0][0] &gt; card[1][0]){
		return card[1][0];
	}
	else{
		return card[0][0];
	}
}
bool set_suited(){
	/*
		1 - suited&nbsp;; 0 -unsuited
	*/
	if(card[0][1] == card[1][1]){
		return 1;
	}
	else{
		return 0;
	}
}
int set_gap(){
	/*
		0 - pair&nbsp;; 1 - connected&nbsp;; 2 - one-gapper ...
	*/
	return rankhiplayer-rankloplayer;
}
</pre>
<a name="Position"></a><h4><span class="editsection">[<a href="http://www.maxinmontreal.com/wiki/index.php5?title=Part_D:_A_basic_preflop_for_deep_stack_NL&action=edit&section=4" title="Edit section: Position">edit</a>]</span> <span class="mw-headline"> Position </span></h4>
<p>I will use the following convention here, since i've grown quite familiar to it and it makes a lot of sense&nbsp;:)
</p>
<pre> 7 UTG
 6 UTG+1
 5 UTG+2
 4 MP1
 3 MP2
 2 MP3
 1 CO
 0 BU
-1 SB
-2 BB
</pre>
<p>The first problem you can encounter at some pokersites is that some actually allow hands without a small blind. We need to take care of that:
</p>
<pre>bool set_SB(){
	/*
		checks if sblind was posted at the table
	*/
	for(int i=0;i&lt;10;i++){
		if(m_holdem_state[(m_ndx)&amp;0xff].m_player[i].m_currentbet &lt; bblind-0.01){
			return 1;
		}
	}

	return 0;

}
</pre>
<p>The function above determins if there is a small blind present at the table. The function below determins our position:
</p>
<pre>int pf_pos(){
	/*
		returns the current position
	*/
	int dealposition = (int)gws("dealposition");
	int nopponentsdealt = (int)gws("nopponentsdealt");

	if(SB){
		if(nopponentsdealt == 1){
			int pos[2] = {{-2},{-1}};
			return pos[dealposition-1];
		}
		if(nopponentsdealt == 2){
			int pos[3] = {{-1},{-2},{0}};
			return pos[dealposition-1];
		}
		if(nopponentsdealt == 3){
			int pos[4] = {{-1},{-2},{1},{0}};
			return pos[dealposition-1];
		}
		if(nopponentsdealt == 4){
			int pos[5] = {{-1},{-2},{2},{1},{0}};
			return pos[dealposition-1];
		}
		if(nopponentsdealt == 5){
			int pos[6] = {{-1},{-2},{3},{2},{1},{0}};
			return pos[dealposition-1];
		}
		if(nopponentsdealt == 6){
			int pos[7] = {{-1},{-2},{4},{3},{2},{1},{0}};
			return pos[dealposition-1];
		}
		if(nopponentsdealt == 7){
			int pos[8] = {{-1},{-2},{5},{4},{3},{2},{1},{0}};
			return pos[dealposition-1];
		}
		if(nopponentsdealt == 8){
			int pos[9] = {{-1},{-2},{6},{5},{4},{3},{2},{1},{0}};
			return pos[dealposition-1];
		}
		if(nopponentsdealt == 9){
			int pos[10] = {{-1},{-2},{7},{6},{5},{4},{3},{2},{1},{0}};
			return pos[dealposition-1];
		}
	}
	else{
		if(nopponentsdealt == 1){
			int pos[2] = {{0},{-2}};
			return pos[dealposition-1];
		}
		if(nopponentsdealt == 2){
			int pos[3] = {{-2},{1},{0}};
			return pos[dealposition-1];
		}
		if(nopponentsdealt == 3){
			int pos[4] = {{-2},{2},{1},{0}};
			return pos[dealposition-1];
		}
		if(nopponentsdealt == 4){
			int pos[5] = {{-2},{3},{2},{1},{0}};
			return pos[dealposition-1];
		}
		if(nopponentsdealt == 5){
			int pos[6] = {{-2},{4},{3},{2},{1},{0}};
			return pos[dealposition-1];
		}
		if(nopponentsdealt == 6){
			int pos[7] = {{-2},{5},{4},{3},{2},{1},{0}};
			return pos[dealposition-1];
		}
		if(nopponentsdealt == 7){
			int pos[8] = {{-2},{6},{5},{4},{3},{2},{1},{0}};
			return pos[dealposition-1];
		}
		if(nopponentsdealt == 8){
			int pos[9] = {{-2},{7},{6},{5},{4},{3},{2},{1},{0}};
			return pos[dealposition-1];
		}
	}

	return 0;

}
</pre>
<p>As you can see we also need new variables "nplayersdealt", "dealposition" defined locally and SB should be defined in "OH-globalvars.h" as "bool SB".
</p>
<a name="Money_and_Player_Variables"></a><h4><span class="editsection">[<a href="http://www.maxinmontreal.com/wiki/index.php5?title=Part_D:_A_basic_preflop_for_deep_stack_NL&action=edit&section=5" title="Edit section: Money and Player Variables">edit</a>]</span> <span class="mw-headline"> Money and Player Variables </span></h4>
<p>We will need the following variables:
</p>
<pre>bool isminbet;
int pf_entered; //how many players entered the pot, including dead money posters
int nopponentscalling; //how many opponents called a raise
double pot;
double call;
double currentbet;
double ncurrentbet; //maximum currentbet on the table
double balance;
double stack_depth; //the amount of money which is the max(userbalance, highest balance of opponent still playing)

</pre>
<pre>bool is_playing(int chair){
	/*
		returns if player is playing at specified chair
	*/
	bitset&lt;16&gt; lok_play((int)gws("playersplayingbits"));

	return lok_play.test(chair);		
}
double set_ncurrentbet(){
	/*
		returns the maximum currentbet on the table
	*/
	double dumpvar = 0;

	for(int i = 0; i &lt; 10;i++){
		if(is_playing(i) &amp;&amp; m_holdem_state[(m_ndx)&amp;0xff].m_player[i].m_currentbet &gt; dumpvar){
			dumpvar = m_holdem_state[(m_ndx)&amp;0xff].m_player[i].m_currentbet;
		}
	}

	return dumpvar;
}
int set_nopponentsbetting(){
	/*
		number of opponents betting
	*/
	int lok_count = 0;

	for(int k=0;k&lt;10;k++){
		if(is_playing(k) &amp;&amp; m_holdem_state[(m_ndx)&amp;0xff].m_player[k].m_currentbet &gt; 0 &amp;&amp; k&nbsp;!= userchair){
			lok_count++;
		}
	}

	return lok_count;

}
int set_nopponentscalling(){
	/*
		number of opponents betting
	*/
	int lok_count = 0;

	for(int k=0;k&lt;10;k++){
		if(is_playing(k) &amp;&amp; m_holdem_state[(m_ndx)&amp;0xff].m_player[k].m_currentbet &gt; ncurrentbet-0.01 
		&amp;&amp; k&nbsp;!= userchair &amp;&amp; m_holdem_state[(m_ndx)&amp;0xff].m_player[k].m_currentbet &lt; ncurrentbet+0.01){
			lok_count++;
		}
	}

	if(lok_count-1 &gt; 0){
		return lok_count-1;
	}

	return 0;

}
int set_pf_entered(){
	/*
		returns amout of players who entered the pot
	*/
	if(SB){
		if(pf_my_pos == -2){
			return nopponentsbetting;
		}
		if(pf_my_pos== -1){
			return nopponentsbetting-1;
		}
		if(pf_my_pos&gt; -1){
			return nopponentsbetting-2;
		}
	}
	else{
		if(pf_my_pos== -2){
			return nopponentsbetting;
		}
		if(pf_my_pos&gt; -1){
			return nopponentsbetting-1;
		}
	}

	return 0;

}
double set_stack_depth(){
	/*
		returns the max(userbalance , oppbalance)
	*/
	double dumpvar = 0;

	for(int i = 0; i &lt; 10;i++){
		if(is_playing(i) &amp;&amp; m_holdem_state[(m_ndx)&amp;0xff].m_player[i].m_balance+m_holdem_state[(m_ndx)&amp;0xff].m_player[i].m_currentbet-currentbet &gt; dumpvar 
                &amp;&amp; i&nbsp;!= userchair){
			dumpvar = m_holdem_state[(m_ndx)&amp;0xff].m_player[i].m_balance+m_holdem_state[(m_ndx)&amp;0xff].m_player[i].m_currentbet-currentbet;
		}
	}
	if(balance &gt; dumpvar){
		return balance;
	}

	return dumpvar;

}
</pre>
<p>The functions above will set some of these values the rest we get with the gws() call. There were only changes made to "OH-general.h" and "OH-globalvars.h" so far, they look like this now:
</p>
<a name="OH-globalvars.h"></a><h4><span class="editsection">[<a href="http://www.maxinmontreal.com/wiki/index.php5?title=Part_D:_A_basic_preflop_for_deep_stack_NL&action=edit&section=6" title="Edit section: OH-globalvars.h">edit</a>]</span> <span class="mw-headline"> OH-globalvars.h </span></h4>
<pre>/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//OWN VARS
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//GENERAL VARS
bool SB;
int userchair;
int ismyturn;
int betround;
double bblind;
double decision;

//MONEY VARS
double pot;
double call;
double currentbet;
double ncurrentbet; //maximum currentbet on the table
double balance;
double stack_depth;

//OPPONENT VARS
int nopponentsbetting;
int nopponentscalling; //how many opponents called a raise

//PREFLOP
int pf_my_pos;
int pf_entered;

//SUIT VARS
int flushrank;

//HAND VARS
bool issuited;
int card[7][2];		//rank 2&nbsp;; ...&nbsp;; 14=A suit 1=C&nbsp;; 2=D&nbsp;; 3=H&nbsp;; 4=S
int rankhiplayer;
int rankloplayer;
int gap;            //0 = pair, 1 = connected, 2 = one-gapper etc...
</pre>
<a name="OH-general.h"></a><h4><span class="editsection">[<a href="http://www.maxinmontreal.com/wiki/index.php5?title=Part_D:_A_basic_preflop_for_deep_stack_NL&action=edit&section=7" title="Edit section: OH-general.h">edit</a>]</span> <span class="mw-headline"> OH-general.h </span></h4>
<pre>//////////////////////////////////////////////////////////////////////////
//OWN FUNCS
//////////////////////////////////////////////////////////////////////////
int set_flush_rank(){

	bitset&lt;16&gt; srb( (int)gws("srankbits") ); 

	srb = (~srb ) &gt;&gt;= (int)gws("srankhiplayer"); 

	return (int)srb.count(); 
}
void set_card_values(){
	/*
		sets the card values
	*/

	//pocket cards
	card[0][0] = RANK(m_holdem_state[m_ndx].m_player[userchair].m_cards[0]);
	card[0][1] = SUIT(m_holdem_state[m_ndx].m_player[userchair].m_cards[0]);
	card[1][0] = RANK(m_holdem_state[m_ndx].m_player[userchair].m_cards[1]);
	card[1][1] = SUIT(m_holdem_state[m_ndx].m_player[userchair].m_cards[1]);

	//board cards
	for(int u=0;u&lt;5;u++){
		card[u+2][0] = RANK(m_holdem_state[(m_ndx)&amp;0xff].m_cards[u]);
		card[u+2][1] = SUIT(m_holdem_state[(m_ndx)&amp;0xff].m_cards[u]);
	}
}
int set_rankhiplayer(){
	/*
		returns hi player rank
	*/
	if(card[0][0] &gt; card[1][0]){
		return card[0][0];
	}
	else{
		return card[1][0];
	}
}
int set_rankloplayer(){
	/*
		returns lo player rank
	*/
	if(card[0][0] &gt; card[1][0]){
		return card[1][0];
	}
	else{
		return card[0][0];
	}
}
bool set_suited(){
	/*
		1 - suited&nbsp;; 0 -unsuited
	*/
	if(card[0][1] == card[1][1]){
		return 1;
	}
	else{
		return 0;
	}
}
int set_gap(){
	/*
		0 - pair&nbsp;; 1 - connected&nbsp;; 2 - one-gapper ...
	*/
	return rankhiplayer-rankloplayer;
}
bool set_SB(){
	/*
		checks if sblind was posted at the table
	*/
	for(int i=0;i&lt;10;i++){
		if(m_holdem_state[(m_ndx)&amp;0xff].m_player[i].m_currentbet &lt; bblind-0.01){
			return 1;
		}
	}

	return 0;

}
int pf_pos(){
	/*
		returns the current position
	*/
	int dealposition = (int)gws("dealposition");
	int nopponentsdealt = (int)gws("nopponentsdealt");

	if(SB){
		if(nopponentsdealt == 1){
			int pos[2] = {{-2},{-1}};
			return pos[dealposition-1];
		}
		if(nopponentsdealt == 2){
			int pos[3] = {{-1},{-2},{0}};
			return pos[dealposition-1];
		}
		if(nopponentsdealt == 3){
			int pos[4] = {{-1},{-2},{1},{0}};
			return pos[dealposition-1];
		}
		if(nopponentsdealt == 4){
			int pos[5] = {{-1},{-2},{2},{1},{0}};
			return pos[dealposition-1];
		}
		if(nopponentsdealt == 5){
			int pos[6] = {{-1},{-2},{3},{2},{1},{0}};
			return pos[dealposition-1];
		}
		if(nopponentsdealt == 6){
			int pos[7] = {{-1},{-2},{4},{3},{2},{1},{0}};
			return pos[dealposition-1];
		}
		if(nopponentsdealt == 7){
			int pos[8] = {{-1},{-2},{5},{4},{3},{2},{1},{0}};
			return pos[dealposition-1];
		}
		if(nopponentsdealt == 8){
			int pos[9] = {{-1},{-2},{6},{5},{4},{3},{2},{1},{0}};
			return pos[dealposition-1];
		}
		if(nopponentsdealt == 9){
			int pos[10] = {{-1},{-2},{7},{6},{5},{4},{3},{2},{1},{0}};
			return pos[dealposition-1];
		}
	}
	else{
		if(nopponentsdealt == 1){
			int pos[2] = {{0},{-2}};
			return pos[dealposition-1];
		}
		if(nopponentsdealt == 2){
			int pos[3] = {{-2},{1},{0}};
			return pos[dealposition-1];
		}
		if(nopponentsdealt == 3){
			int pos[4] = {{-2},{2},{1},{0}};
			return pos[dealposition-1];
		}
		if(nopponentsdealt == 4){
			int pos[5] = {{-2},{3},{2},{1},{0}};
			return pos[dealposition-1];
		}
		if(nopponentsdealt == 5){
			int pos[6] = {{-2},{4},{3},{2},{1},{0}};
			return pos[dealposition-1];
		}
		if(nopponentsdealt == 6){
			int pos[7] = {{-2},{5},{4},{3},{2},{1},{0}};
			return pos[dealposition-1];
		}
		if(nopponentsdealt == 7){
			int pos[8] = {{-2},{6},{5},{4},{3},{2},{1},{0}};
			return pos[dealposition-1];
		}
		if(nopponentsdealt == 8){
			int pos[9] = {{-2},{7},{6},{5},{4},{3},{2},{1},{0}};
			return pos[dealposition-1];
		}
	}

	return 0;

}
bool is_playing(int chair){
	/*
		returns if player is playing at specified chair
	*/
	bitset&lt;16&gt; lok_play((int)gws("playersplayingbits"));

	return lok_play.test(chair);		
}
double set_ncurrentbet(){
	/*
		returns the maximum currentbet on the table
	*/
	double dumpvar = 0;

	for(int i = 0; i &lt; 10;i++){
		if(is_playing(i) &amp;&amp; m_holdem_state[(m_ndx)&amp;0xff].m_player[i].m_currentbet &gt; dumpvar){
			dumpvar = m_holdem_state[(m_ndx)&amp;0xff].m_player[i].m_currentbet;
		}
	}

	return dumpvar;
}
int set_nopponentsbetting(){
	/*
		number of opponents betting
	*/
	int lok_count = 0;

	for(int k=0;k&lt;10;k++){
		if(is_playing(k) &amp;&amp; m_holdem_state[(m_ndx)&amp;0xff].m_player[k].m_currentbet &gt; 0 &amp;&amp; k&nbsp;!= userchair){
			lok_count++;
		}
	}

	return lok_count;

}
int set_nopponentscalling(){
	/*
		number of opponents betting
	*/
	int lok_count = 0;

	for(int k=0;k&lt;10;k++){
		if(is_playing(k) &amp;&amp; m_holdem_state[(m_ndx)&amp;0xff].m_player[k].m_currentbet &gt; ncurrentbet-0.01 
		&amp;&amp; k&nbsp;!= userchair &amp;&amp; m_holdem_state[(m_ndx)&amp;0xff].m_player[k].m_currentbet &lt; ncurrentbet+0.01){
			lok_count++;
		}
	}

	if(lok_count-1 &gt; 0){
		return lok_count-1;
	}

	return 0;

}
int set_pf_entered(){
	/*
		returns amout of players who entered the pot
	*/
	if(SB){
		if(pf_my_pos == -2){
			return nopponentsbetting;
		}
		if(pf_my_pos== -1){
			return nopponentsbetting-1;
		}
		if(pf_my_pos&gt; -1){
			return nopponentsbetting-2;
		}
	}
	else{
		if(pf_my_pos== -2){
			return nopponentsbetting;
		}
		if(pf_my_pos&gt; -1){
			return nopponentsbetting-1;
		}
	}

	return 0;

}
double set_stack_depth(){
	/*
		returns the max(userbalance , raiserbalance)
	*/
	double dumpvar = 0;

	for(int i = 0; i &lt; 10;i++){
		if(is_playing(i) &amp;&amp; m_holdem_state[(m_ndx)&amp;0xff].m_player[i].m_balance+m_holdem_state[(m_ndx)&amp;0xff].m_player[i].m_currentbet-currentbet &gt; dumpvar 
		&amp;&amp; i&nbsp;!= userchair &amp;&amp; m_holdem_state[(m_ndx)&amp;0xff].m_player[i].m_currentbet &gt; ncurrentbet-0.01
		&amp;&amp; m_holdem_state[(m_ndx)&amp;0xff].m_player[i].m_currentbet &lt; ncurrentbet+0.01){
			dumpvar = m_holdem_state[(m_ndx)&amp;0xff].m_player[i].m_balance+m_holdem_state[(m_ndx)&amp;0xff].m_player[i].m_currentbet-currentbet;
		}
	}
	if(balance &gt; dumpvar){
		return balance;
	}

	return dumpvar;

}
void int_oh_symbols(){

	//GENERAL VARS
	SB = set_SB();
	ismyturn = (int)gws("ismyturn");
	betround = (int)gws("betround");
	userchair = (int)gws("userchair");
	bblind = gws("bblind");

	//MONEY VARS
	pot = gws("pot");
	currentbet = m_holdem_state[(m_ndx)&amp;0xff].m_player[userchair].m_currentbet;
	ncurrentbet = set_ncurrentbet();
	call = ncurrentbet-currentbet;
	balance = m_holdem_state[(m_ndx)&amp;0xff].m_player[userchair].m_balance;
	stack_depth = set_stack_depth();

	//OPPONENT VARS
	nopponentsbetting = set_nopponentsbetting();
	nopponentscalling = set_nopponentscalling();

	//preflop
	pf_my_pos = pf_pos();
	pf_entered = set_pf_entered();

	//updating card values
	set_card_values();

	//updating hand values
	issuited = set_suited();
	rankhiplayer = set_rankloplayer();
	rankloplayer = set_rankhiplayer();
	gap = set_gap();

	//updating flush rank
	flushrank = set_flush_rank();

}
</pre>
<a name="Remarks_on_Preflop_Code"></a><h3><span class="editsection">[<a href="http://www.maxinmontreal.com/wiki/index.php5?title=Part_D:_A_basic_preflop_for_deep_stack_NL&action=edit&section=8" title="Edit section: Remarks on Preflop Code">edit</a>]</span> <span class="mw-headline"> Remarks on Preflop Code </span></h3>
<p>I will distinguish between the following scenarios:
</p>
<pre>- first in
- limpers/minraise
- raised pot lower than 6bb
- rest
</pre>
<p>I also define the following standard bet amounts:
</p>
<pre>	double standart_raise = (pf_entered+4)*bblind+0.01;
	double standart_minbet_raise = (2*nopponentscalling+(pf_entered-nopponentscalling)+6)*bblind+0.01;
	double standart_Xbet = (3+nopponentscalling)*(call+currentbet);
	double dothecall = 0.01; //will call if amount returned by dll &gt; 0
</pre>
<p>e.g:
</p>
<pre>- 2 limpers -&gt; raise = 6BB
- 1 minbettor -&gt; raise = 7BB
- 4BB raise -&gt; raise = 12BB
</pre>
<a name="Source_Code"></a><h4><span class="editsection">[<a href="http://www.maxinmontreal.com/wiki/index.php5?title=Part_D:_A_basic_preflop_for_deep_stack_NL&action=edit&section=9" title="Edit section: Source Code">edit</a>]</span> <span class="mw-headline"> Source Code </span></h4>
<pre>double preflop(){
	/*
		preflop code
	*/

	double standart_raise = (pf_entered+4)*bblind+0.01;
	double standart_minbet_raise = (2*nopponentscalling+(pf_entered-nopponentscalling)+6)*bblind+0.01;
	double standart_Xbet = (3+nopponentscalling)*(call+currentbet);
	double dothecall = 0.01;

	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	//FIRST IN
	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	if(currentbet &lt; sblind+0.01 &amp;&amp; pot &lt; bblind+sblind+0.01){
		///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		//BETTING STANDARTS:
		//
		//+7 - UTG		R TT+, AQ+
		//+6 - UTG+1	R 99+, AQ+
		//+5 - UTG+2	R 88+, AQ+, AJs+, KQs
		//+4 - MP1		R 66+, AQ+, AJs+, KQs
		//+3 - MP2		R 22+, AJ+, KQ
		//+2 - MP3		R 22+, AT+, KJ+
		//+1 - CO		R 22+, A8+, AXs, XT+, 54s+
		//+0 - BU		R 22+, AX+, KXs, K7+, Q5s+, Q8+, 97s+, X9+
		//-1 - SB		R 22+, A8+, AXs, JT+, 54s+
		///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		if(gap == 0 &amp;&amp; rankloplayer &gt; 9
		|| gap == 0 &amp;&amp; rankloplayer &gt; 8 &amp;&amp; pf_my_pos &lt; 7
		|| gap == 0 &amp;&amp; rankloplayer &gt; 7 &amp;&amp; pf_my_pos &lt; 6
		|| gap == 0 &amp;&amp; rankloplayer &gt; 5 &amp;&amp; pf_my_pos &lt; 5
		|| gap == 0 &amp;&amp; pf_my_pos &lt; 4
		|| rankhiplayer == 14 &amp;&amp; rankloplayer &gt; 11
		|| rankhiplayer == 14 &amp;&amp; rankloplayer &gt; 10 &amp;&amp; issuited &amp;&amp; pf_my_pos &lt; 6
		|| rankhiplayer == 14 &amp;&amp; rankloplayer &gt; 10 &amp;&amp; pf_my_pos &lt; 4
		|| rankhiplayer == 14 &amp;&amp; rankloplayer &gt; 9 &amp;&amp; pf_my_pos &lt; 3
		|| rankhiplayer == 14 &amp;&amp; rankloplayer &gt; 7 &amp;&amp; pf_my_pos &lt; 2
		|| rankhiplayer == 14 &amp;&amp; issuited &amp;&amp; pf_my_pos &lt; 2
		|| rankhiplayer == 14 &amp;&amp; pf_my_pos == 0
		|| rankhiplayer == 13 &amp;&amp; rankloplayer == 12 &amp;&amp; issuited &amp;&amp; pf_my_pos &lt; 6
		|| rankhiplayer == 13 &amp;&amp; rankloplayer == 12 &amp;&amp; pf_my_pos &lt; 4
		|| rankhiplayer == 13 &amp;&amp; rankloplayer &gt; 10 &amp;&amp; pf_my_pos &lt; 3
		|| rankhiplayer == 13 &amp;&amp; rankloplayer &gt; 6 &amp;&amp; pf_my_pos == 0
		|| rankhiplayer == 13 &amp;&amp; issuited &amp;&amp; pf_my_pos == 0
		|| rankhiplayer == 12 &amp;&amp; rankloplayer &gt; 7 &amp;&amp; pf_my_pos == 0
		|| rankhiplayer == 12 &amp;&amp; rankloplayer &gt; 4 &amp;&amp; issuited &amp;&amp; pf_my_pos == 0
		|| rankhiplayer == 11 &amp;&amp; rankloplayer &gt; 8 &amp;&amp; pf_my_pos == 0
		|| rankhiplayer &gt; 8 &amp;&amp; rankloplayer &gt; 6 &amp;&amp; issuited &amp;&amp; pf_my_pos == 0
		|| rankloplayer &gt; 9 &amp;&amp; pf_my_pos &lt; 2
		|| rankloplayer &gt; 8 &amp;&amp; pf_my_pos == 0
		|| rankloplayer &gt; 3 &amp;&amp; gap == 1 &amp;&amp; issuited &amp;&amp; pf_my_pos &lt; 2
		){
			return standart_raise;
		}
	}
	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	//LIMPERS
	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	if(ncurrentbet &lt; bblind+0.01 &amp;&amp; pot &gt; bblind+sblind+0.01){
		///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		//BETTING STANDARTS:
		//
		//+6 - UTG+1	R TT+, AQ+ C 22+, ATs+, KJs
		//+5 - UTG+2	R TT+, AQ+ C 22+, ATs+, KJs
		//+4 - MP1		R TT+, AQ+, AJs+, KQs C 22+, ATs+, KJs C2 JTs+
		//+3 - MP2		R TT+, AQ+, AJs+, KQs C 22+, ATs+, KJs C2 JTs+
		//+2 - MP3		R TT+, AQ+, AJs+, KQs C 22+, ATs+, KJs C2 54s+
		//+1 - CO		R TT+, AQ+, AJs+, KQs C 22+, AXs, JTs+, 54s+ R2 22+, A8s+, JT+, 54s+ C2 54o+, 53+
		//+0 - BU		R TT+, AQ+, AJs+, KQs C 22+, AXs, JTs+, 54s+ R2 22+, AXs, J8s+, JT+, 54s+ C2 54o+, 53+
		//-1 - SB		R TT+, AQ+, AJs+, KQs C 22+, AXs, JTs+, 54s+ C2 XXs, 54o+, 53+
		//-2 - BB		R TT+, AQ+, AJs+, KQs
		///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		if(gap == 0 &amp;&amp; rankloplayer &gt;= 10
		|| gap == 0 &amp;&amp; pf_entered &lt; 3 &amp;&amp; pf_my_pos &gt; -1 &amp;&amp; pf_my_pos &lt; 2
		|| rankhiplayer == 14 &amp;&amp; rankloplayer &gt; 11
		|| rankhiplayer == 14 &amp;&amp; rankloplayer &gt; 10 &amp;&amp; issuited &amp;&amp; pf_my_pos &lt; 5
		|| rankhiplayer == 14 &amp;&amp; rankloplayer &gt; 9 &amp;&amp; pf_entered &lt; 3 &amp;&amp; pf_my_pos &gt; -1 &amp;&amp; pf_my_pos &lt; 2
		|| rankhiplayer == 14 &amp;&amp; rankloplayer &gt; 7 &amp;&amp; issuited &amp;&amp; pf_entered &lt; 3 &amp;&amp; pf_my_pos &gt; -1 &amp;&amp; pf_my_pos &lt; 2
		|| rankhiplayer == 14 &amp;&amp; issuited &amp;&amp; pf_entered &lt; 3 &amp;&amp; pf_my_pos == 0
		|| rankhiplayer == 13 &amp;&amp; rankloplayer == 12 &amp;&amp; issuited &amp;&amp; pf_my_pos &lt; 5
		|| rankloplayer &gt; 9 &amp;&amp; pf_entered &lt; 3 &amp;&amp; pf_my_pos &gt; -1 &amp;&amp; pf_my_pos &lt; 2
		|| rankloplayer &gt; 7 &amp;&amp; issuited &amp;&amp; pf_entered &lt; 3 &amp;&amp; pf_my_pos == 0
		|| rankloplayer &gt; 3 &amp;&amp; gap == 1 &amp;&amp; issuited &amp;&amp; pf_entered &lt; 3 &amp;&amp; pf_my_pos &gt; -1 &amp;&amp; pf_my_pos &lt; 3
		){
			return standart_raise;
		}
		if(gap == 0
			|| rankhiplayer == 14 &amp;&amp; rankloplayer &gt; 9 &amp;&amp; issuited
			|| rankhiplayer == 14 &amp;&amp; issuited &amp;&amp; pf_my_pos &lt; 2
			|| rankhiplayer == 13 &amp;&amp; rankloplayer &gt; 10 &amp;&amp; issuited
			|| rankloplayer &gt; 9 &amp;&amp; issuited &amp;&amp; pf_entered &gt; 1 &amp;&amp; pf_my_pos &lt; 5
			|| rankloplayer &gt; 9 &amp;&amp; issuited &amp;&amp; pf_my_pos &lt; 2
			|| rankloplayer &gt; 3 &amp;&amp; gap == 1 &amp;&amp; issuited &amp;&amp; pf_my_pos &lt; 2
			|| rankloplayer &gt; 3 &amp;&amp; gap == 1 &amp;&amp; pf_entered &gt; 1 &amp;&amp; pf_my_pos &lt; 3
			|| gap == 2 &amp;&amp; pf_entered &gt; 1 &amp;&amp; pf_my_pos &lt; 3
			|| issuited &amp;&amp; pf_entered &gt; 1 &amp;&amp; pf_my_pos == -1
			){
				return dothecall;
		}
	}
	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	//MINRAISE
	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	if(ncurrentbet &gt; bblind+0.01 &amp;&amp; ncurrentbet &lt; 2*bblind+0.01 &amp;&amp; pot &gt; bblind+sblind+0.01){
		///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		//BETTING STANDARTS:
		//
		//+6 - UTG+1	R TT+, AQ+ C 22+, AJs, KQs
		//+5 - UTG+2	R TT+, AQ+ C 22+, AJs, KQs
		//+4 - MP1		R TT+, AQ+ C 22+, AJs, KQs C2 JTs+
		//+3 - MP2		R TT+, AQ+ C 22+, AJs, KQs C2 JTs+
		//+2 - MP3		R TT+, AQ+ C 22+, AJs, KQs C2 JTs+
		//+1 - CO		R TT+, AQ+ C 22+, AXs, JTs+
		//+0 - BU		R TT+, AQ+ C 22+, AXs, JTs+
		//-1 - SB		R TT+, AQ+ C 22+, AJs, KQs
		//-2 - BB		R TT+, AQ+ C 22+, AJs, KQs
		///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////				
		if(gap == 0 &amp;&amp; rankloplayer &gt; 9
		|| rankhiplayer == 14 &amp;&amp; rankloplayer &gt; 11
		){
				return standart_minbet_raise;
		}
		if(gap == 0
		|| rankhiplayer == 14 &amp;&amp; rankloplayer &gt; 10 &amp;&amp; issuited
		|| rankhiplayer == 13 &amp;&amp; rankloplayer == 12 &amp;&amp; issuited
		|| rankloplayer &gt; 9 &amp;&amp; issuited &amp;&amp; pf_entered &gt; 1 &amp;&amp; pf_my_pos &gt; -1 &amp;&amp; pf_my_pos &lt; 5
		|| rankhiplayer == 14 &amp;&amp; issuited &amp;&amp; pf_my_pos &gt; -1 &amp;&amp; pf_my_pos &lt; 2
		|| rankloplayer &gt; 9 &amp;&amp; issuited &amp;&amp; pf_my_pos &gt; -1 &amp;&amp; pf_my_pos &lt; 2
		){
				return dothecall;
		}
	}
	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	//RAISED POT 6*BB-
	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	if(currentbet &lt; 0.01 &amp;&amp; call &gt; 2*bblind+0.01 &amp;&amp; call &lt; 6*bblind+0.01
	|| currentbet &lt; sblind+0.01 &amp;&amp; pf_my_pos == -1 &amp;&amp; call &gt; 2*bblind-sblind+0.01 &amp;&amp; call &lt; 6*bblind-sblind+0.01
	|| currentbet &lt; bblind+0.01 &amp;&amp; pf_my_pos == -2 &amp;&amp; call &gt; bblind+0.01 &amp;&amp; call &lt; 5*bblind+0.01){
		///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		//BETTING STANDARTS:
		//
		//	R TT+, AK 
		///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		if(gap == 0 &amp;&amp; rankloplayer &gt; 9
		|| rankhiplayer == 14 &amp;&amp; rankloplayer == 13
		){
			return standart_Xbet;
		}
	}
	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	//REST
	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		//BETTING STANDARTS:
		//
		//	R KK+
		//	C 22+			(at least 1:20 (stack+pot-call)/call ratio of the raising chair)
		//  C 54s+ and JTs+ (at least 1:20 (stack+pot-call)/call ratio of the raising chair) and 1 caller+
		//	C AXs			(at least 1:20 (stack+pot-call)/call ratio of the raising chair) and 2 caller+
		///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		if(gap == 0 &amp;&amp; rankloplayer &gt; 12){
			return standart_Xbet;
		}
		if(gap == 0 &amp;&amp; (stack_depth+pot-call)/call &gt; 19
		|| rankloplayer &gt; 3 &amp;&amp; gap == 1 &amp;&amp; issuited &amp;&amp; (stack_depth+pot-call)/call &gt; 19 &amp;&amp; nopponentscalling &gt; 0
		|| issuited &amp;&amp; rankhiplayer == 14 &amp;&amp; (stack_depth+pot-call)/call &gt; 19 &amp;&amp; nopponentscalling &gt; 1
		){
			return dothecall;
		}

	return 0;

}
</pre>
<p>I think it's pretty much self explaining. If you have any questions plz ask in the forum thread. The code itself is untested in this form, all I know is that it compiles, but there has not been any bug testing and I don't know if all values are set as they are supposed to, if you find any bugs plz report...
</p>
<a name="Files"></a><h3><span class="editsection">[<a href="http://www.maxinmontreal.com/wiki/index.php5?title=Part_D:_A_basic_preflop_for_deep_stack_NL&action=edit&section=10" title="Edit section: Files">edit</a>]</span> <span class="mw-headline"> Files </span></h3>
<ul><li><a href="http://www.maxinmontreal.com/wiki/index.php5/Image:OH-DLL-D.rar" title="Image:OH-DLL-D.rar">Image:OH-DLL-D.rar</a>
</li></ul>

<!-- Saved in parser cache with key maxin_wiki:pcache:idhash:524-0!1!0!!en!2 and timestamp 20130219140849 -->
<div class="printfooter">
Retrieved from "<a href="http://www.maxinmontreal.com/wiki/index.php5/Part_D:_A_basic_preflop_for_deep_stack_NL">http://www.maxinmontreal.com/wiki/index.php5/Part_D:_A_basic_preflop_for_deep_stack_NL</a>"</div>
						<!-- end content -->
			<div class="visualClear"></div>
		</div>
	</div>
		</div>
		<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
					 <li id="ca-nstab-main" class="selected"><a href="http://www.maxinmontreal.com/wiki/index.php5/Part_D:_A_basic_preflop_for_deep_stack_NL" title="View the content page [ctrl-c]" accesskey="c">Article</a></li>
					 <li id="ca-talk" class="new"><a href="http://www.maxinmontreal.com/wiki/index.php5?title=Talk:Part_D:_A_basic_preflop_for_deep_stack_NL&action=edit" title="Discussion about the content page [ctrl-t]" accesskey="t">Discussion</a></li>
					 <li id="ca-edit"><a href="http://www.maxinmontreal.com/wiki/index.php5?title=Part_D:_A_basic_preflop_for_deep_stack_NL&action=edit" title="You can edit this page. Please use the preview button before saving. [ctrl-e]" accesskey="e">Edit</a></li>
					 <li id="ca-history"><a href="http://www.maxinmontreal.com/wiki/index.php5?title=Part_D:_A_basic_preflop_for_deep_stack_NL&action=history" title="Past versions of this page. [ctrl-h]" accesskey="h">History</a></li>
				</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul>
				<li id="pt-login"><a href="http://www.maxinmontreal.com/wiki/index.php5?title=Special:Userlogin&returnto=Part_D:_A_basic_preflop_for_deep_stack_NL" title="You are encouraged to log in, it is not mandatory however. [ctrl-o]" accesskey="o">Log in / create account</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(/wiki/skins/common/images/wiki.png);" href="http://www.maxinmontreal.com/"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
		<div class="portlet" id="p-navigation">
		<h5>Navigation</h5>
		<div class="pBody">
			<ul>
				<li id="n-mainpage"><a href="http://www.maxinmontreal.com/wiki/index.php5/Main_Page" title="Visit the Main Page [ctrl-z]" accesskey="z">Main Page</a></li>
				<li id="n-portal"><a href="http://www.maxinmontreal.com/wiki/index.php5/Maxin_Wiki:Community_Portal" title="About the project, what you can do, where to find things">Community portal</a></li>
				<li id="n-currentevents"><a href="http://www.maxinmontreal.com/wiki/index.php5/Current_events" title="Find background information on current events">Current events</a></li>
				<li id="n-recentchanges"><a href="http://www.maxinmontreal.com/wiki/index.php5/Special:Recentchanges" title="The list of recent changes in the wiki. [ctrl-r]" accesskey="r">Recent changes</a></li>
				<li id="n-randompage"><a href="http://www.maxinmontreal.com/wiki/index.php5/Special:Random" title="Load a random page [ctrl-x]" accesskey="x">Random page</a></li>
				<li id="n-help"><a href="http://www.maxinmontreal.com/wiki/index.php5/Help:Contents" title="The place to find out.">Help</a></li>
				<li id="n-sitesupport"><a href="http://www.maxinmontreal.com/wiki/index.php5/Maxin_Wiki:Site_support" title="Support us">Donations</a></li>
			</ul>
		</div>
	</div>
		<div id="p-search" class="portlet">
		<h5><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="http://www.maxinmontreal.com/wiki/index.php5/Special:Search" id="searchform"><div>
				<input id="searchInput" name="search" type="text" title="Search Maxin Wiki [ctrl-f]" accesskey="f" value="">
				<input type="submit" name="go" class="searchButton" id="searchGoButton" value="Go">&nbsp;
				<input type="submit" name="fulltext" class="searchButton" id="mw-searchButton" value="Search">
			</div></form>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="http://www.maxinmontreal.com/wiki/index.php5/Special:Whatlinkshere/Part_D:_A_basic_preflop_for_deep_stack_NL" title="List of all wiki pages that link here [ctrl-j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="http://www.maxinmontreal.com/wiki/index.php5/Special:Recentchangeslinked/Part_D:_A_basic_preflop_for_deep_stack_NL" title="Recent changes in pages linked from this page [ctrl-k]" accesskey="k">Related changes</a></li>
<li id="t-upload"><a href="http://www.maxinmontreal.com/wiki/index.php5/Special:Upload" title="Upload images or media files [ctrl-u]" accesskey="u">Upload file</a></li>
<li id="t-specialpages"><a href="http://www.maxinmontreal.com/wiki/index.php5/Special:Specialpages" title="List of all special pages [ctrl-q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="http://www.maxinmontreal.com/wiki/index.php5?title=Part_D:_A_basic_preflop_for_deep_stack_NL&printable=yes" title="Printable version of this page [ctrl-p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="http://www.maxinmontreal.com/wiki/index.php5?title=Part_D:_A_basic_preflop_for_deep_stack_NL&oldid=292584" title="Permanent link to this version of the page">Permanent link</a></li>			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="./Part D  A basic preflop for deep stack NL - Maxin Wiki_files/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki"></a></div>
			<ul id="f-list">
				<li id="lastmod"> This page was last modified 05:49, 1 February 2013.</li>
				<li id="viewcount">This page has been accessed 12,941 times.</li>
				<li id="privacy"><a href="http://www.maxinmontreal.com/wiki/index.php5/Maxin_Wiki:Privacy_policy" title="Maxin Wiki:Privacy policy">Privacy policy</a></li>
				<li id="about"><a href="http://www.maxinmontreal.com/wiki/index.php5/Maxin_Wiki:About" title="Maxin Wiki:About">About Maxin Wiki</a></li>
				<li id="disclaimer"><a href="http://www.maxinmontreal.com/wiki/index.php5/Maxin_Wiki:General_disclaimer" title="Maxin Wiki:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
		
	
		<script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
</div>
<!-- Served in 0.097 secs. -->
</div></body></html>