<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3c.org/TR/1999/REC-html401-19991224/loose.dtd">
<!-- saved from url=(0236)http://webcache.googleusercontent.com/search -->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><HTML><HEAD>
<META content="text/html; charset=UTF-8" http-equiv="Content-Type">
<META name="GENERATOR" content="MSHTML 9.00.8112.16476"></HEAD>
<BODY class="mediawiki ns-0 ltr page-Part_B_Basic_overview_over_the_dll_structure_examples">
<DIV style="background: rgb(255, 255, 255); margin: -1px -1px 0px; padding: 0px; border: 1px solid rgb(153, 153, 153);">
<DIV style="background: rgb(221, 221, 221); font: 13px/normal arial, sans-serif; margin: 12px; padding: 8px; border: 1px solid rgb(153, 153, 153); text-align: left; color: rgb(0, 0, 0); font-size-adjust: none; font-stretch: normal;">This 
is Google's cache of <A style="color: rgb(0, 0, 204); text-decoration: underline;" 
href="http://www.maxinmontreal.com/wiki/index.php5?title=Part_B:_Basic_overview_over_the_dll_structure_%26_examples&amp;redirect=no">http://www.maxinmontreal.com/wiki/index.php5?title=Part_B:_Basic_overview_over_the_dll_structure_%26_examples&amp;redirect=no</A>. 
It is a snapshot of the page as it appeared on Mar 26, 2013 15:55:47 GMT. The <A 
style="color: rgb(0, 0, 204); text-decoration: underline;" href="http://www.maxinmontreal.com/wiki/index.php5?title=Part_B:_Basic_overview_over_the_dll_structure_%26_examples&amp;redirect=no">current 
page</A> could have changed in the meantime. <A style="color: rgb(0, 0, 204); text-decoration: underline;" 
href="http://support.google.com/websearch/bin/answer.py?hl=en&amp;p=cached&amp;answer=1687222">Learn 
more</A><BR>Tip: To quickly find your search term on this page, press 
<B>Ctrl+F</B> or <B>⌘-F</B> (Mac) and use the find bar.<BR><BR>
<DIV style="float: right;"><A style="color: rgb(0, 0, 204); text-decoration: underline;" 
href="http://webcache.googleusercontent.com/search?q=cache:gm_d1IvR1TcJ:www.maxinmontreal.com/wiki/index.php5%3Ftitle%3DPart_B:_Basic_overview_over_the_dll_structure_%2526_examples%26redirect%3Dno+maxinmontrial+part+b&amp;hl=en&amp;gl=us&amp;strip=1">Text-only 
version</A></DIV>
<DIV>These search terms are highlighted: <SPAN style="background: rgb(160, 255, 255); color: black; font-weight: bold;">part</SPAN>&nbsp;<SPAN 
style="background: rgb(153, 255, 153); color: black; font-weight: bold;">b</SPAN>&nbsp;&nbsp;</DIV></DIV></DIV>
<DIV style="position: relative;">
<META name="keywords" content="Part B: Basic overview over the dll structure &amp; examples,Enhanced Prwin,OpenHoldem:EndUserDocumentation:Symbols,Part A: Compiling the first dll,Phl1k,Prw1326"><LINK 
rel="shortcut icon" href="/favicon.ico"><LINK title="Maxin Wiki (English)" rel="search" 
type="application/opensearchdescription+xml" 
href="/wiki/opensearch_desc.php"><TITLE>Part B: Basic overview over the dll 
structure &amp; examples - Maxin Wiki</TITLE>
<STYLE type="text/css" media="screen, projection">/*<![CDATA[*/
			@import "/wiki/skins/common/shared.css?97";
			@import "/wiki/skins/monobook/main.css?97";
		/*]]>*/</STYLE>
<LINK rel="stylesheet" type="text/css" href="Tutorialseries_partB_basicoverviewofdllstructure_files/commonPrint.css" 
media="print"><!--[if lt IE 5.5000]><style type="text/css">@import "/wiki/skins/monobook/IE50Fixes.css?97";</style><![endif]--><!--[if IE 5.5000]><style type="text/css">@import "/wiki/skins/monobook/IE55Fixes.css?97";</style><![endif]--><!--[if IE 6]><style type="text/css">@import "/wiki/skins/monobook/IE60Fixes.css?97";</style><![endif]--><!--[if IE 7]><style type="text/css">@import "/wiki/skins/monobook/IE70Fixes.css?97";</style><![endif]--><!--[if lt IE 7]><script type="text/javascript" src="/wiki/skins/common/IEFixes.js?97"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->
<SCRIPT type="text/javascript">/*<![CDATA[*/
var skin = "monobook";
var stylepath = "/wiki/skins";
var wgArticlePath = "/wiki/index.php5/$1";
var wgScriptPath = "/wiki";
var wgScript = "/wiki/index.php5";
var wgServer = "http://www.maxinmontreal.com";
var wgCanonicalNamespace = "";
var wgCanonicalSpecialPageName = false;
var wgNamespaceNumber = 0;
var wgPageName = "Part_B:_Basic_overview_over_the_dll_structure_\x26_examples";
var wgTitle = "Part B: Basic overview over the dll structure \x26 examples";
var wgAction = "view";
var wgRestrictionEdit = [];
var wgRestrictionMove = [];
var wgArticleId = "512";
var wgIsArticle = true;
var wgUserName = null;
var wgUserGroups = null;
var wgUserLanguage = "en";
var wgContentLanguage = "en";
var wgBreakFrames = false;
var wgCurRevisionId = "373284";
/*]]>*/</SCRIPT>

<SCRIPT type="text/javascript" src="Tutorialseries_partB_basicoverviewofdllstructure_files/wikibits.js"><!-- wikibits js --></SCRIPT>

<SCRIPT type="text/javascript" src=""><!-- site js --></SCRIPT>

<STYLE type="text/css">/*<![CDATA[*/
@import "/wiki/index.php5?title=MediaWiki:Common.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=18000";
@import "/wiki/index.php5?title=MediaWiki:Monobook.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=18000";
@import "/wiki/index.php5?title=-&action=raw&gen=css&maxage=18000";
/*]]>*/</STYLE>
<!-- Head Scripts -->
<SCRIPT type="text/javascript" src="Tutorialseries_partB_basicoverviewofdllstructure_files/ajax.js"></SCRIPT>

<DIV id="globalWrapper">
<DIV id="column-content">
<DIV id="content"><A id="top" name="top"></A>
<H1 class="firstHeading"><B style="color: black; background-color: rgb(160, 255, 255);">Part</B> 
<B style="color: black; background-color: rgb(153, 255, 153);">B</B>: Basic 
overview over the dll structure &amp; examples</H1>
<DIV id="bodyContent">
<H3 id="siteSub">From Maxin Wiki</H3>
<DIV id="contentSub"></DIV>
<DIV id="jump-to-nav">Jump to: <A href="http://www.maxinmontreal.com/wiki/index.php5?title=Part_B:_Basic_overview_over_the_dll_structure_%26_examples&amp;redirect=no#column-one">navigation</A>, 
<A href="http://www.maxinmontreal.com/wiki/index.php5?title=Part_B:_Basic_overview_over_the_dll_structure_%26_examples&amp;redirect=no#searchInput">search</A></DIV><!-- start content -->
<P>If you are not following my guide from <A title="Part A: Compiling the first dll" 
href="http://www.maxinmontreal.com/wiki/index.php5/Part_A:_Compiling_the_first_dll"><B 
style="color: black; background-color: rgb(160, 255, 255);">Part</B> A: 
Compiling the first dll</A> there might be slight differences you may find in 
the basic files you use, since i already added some code, which is needed 
anyway...</P>
<P><B>Source(s):</B><A class="external text" title="http://www.downloadranking.com" 
href="http://www.downloadranking.com/" rel="nofollow">code solutions</A></P>
<TABLE id="toc" class="toc" summary="Contents">
  <TBODY>
  <TR>
    <TD>
      <DIV id="toctitle">
      <H2>Contents</H2></DIV>
      <UL>
        <LI class="toclevel-1"><A href="http://www.maxinmontreal.com/wiki/index.php5?title=Part_B:_Basic_overview_over_the_dll_structure_%26_examples&amp;redirect=no#The_OH-DLL.cpp"><SPAN 
        class="tocnumber">1</SPAN> <SPAN class="toctext">The 
        OH-DLL.cpp</SPAN></A>
        <UL>
          <LI class="toclevel-2"><A href="http://www.maxinmontreal.com/wiki/index.php5?title=Part_B:_Basic_overview_over_the_dll_structure_%26_examples&amp;redirect=no#gws_function"><SPAN 
          class="tocnumber">1.1</SPAN> <SPAN class="toctext">gws 
          function</SPAN></A></LI>
          <LI class="toclevel-2"><A href="http://www.maxinmontreal.com/wiki/index.php5?title=Part_B:_Basic_overview_over_the_dll_structure_%26_examples&amp;redirect=no#hlset_.26_hlget"><SPAN 
          class="tocnumber">1.2</SPAN> <SPAN class="toctext">hlset &amp; 
          hlget</SPAN></A></LI>
          <LI class="toclevel-2"><A href="http://www.maxinmontreal.com/wiki/index.php5?title=Part_B:_Basic_overview_over_the_dll_structure_%26_examples&amp;redirect=no#process_query_function"><SPAN 
          class="tocnumber">1.3</SPAN> <SPAN class="toctext">process_query 
          function</SPAN></A></LI>
          <LI class="toclevel-2"><A href="http://www.maxinmontreal.com/wiki/index.php5?title=Part_B:_Basic_overview_over_the_dll_structure_%26_examples&amp;redirect=no#process_state_function"><SPAN 
          class="tocnumber">1.4</SPAN> <SPAN class="toctext">process_state 
          function</SPAN></A></LI></UL></LI>
        <LI class="toclevel-1"><A href="http://www.maxinmontreal.com/wiki/index.php5?title=Part_B:_Basic_overview_over_the_dll_structure_%26_examples&amp;redirect=no#The_OH-DLL.h_Header"><SPAN 
        class="tocnumber">2</SPAN> <SPAN class="toctext">The OH-DLL.h 
        Header</SPAN></A>
        <UL>
          <LI class="toclevel-2"><A href="http://www.maxinmontreal.com/wiki/index.php5?title=Part_B:_Basic_overview_over_the_dll_structure_%26_examples&amp;redirect=no#The_struct_holdem_state"><SPAN 
          class="tocnumber">2.1</SPAN> <SPAN class="toctext">The struct 
          holdem_state</SPAN></A></LI>
          <LI class="toclevel-2"><A href="http://www.maxinmontreal.com/wiki/index.php5?title=Part_B:_Basic_overview_over_the_dll_structure_%26_examples&amp;redirect=no#The_struct_holdem_player"><SPAN 
          class="tocnumber">2.2</SPAN> <SPAN class="toctext">The struct 
          holdem_player</SPAN></A></LI>
          <LI class="toclevel-2"><A href="http://www.maxinmontreal.com/wiki/index.php5?title=Part_B:_Basic_overview_over_the_dll_structure_%26_examples&amp;redirect=no#prw1326_Datastructures"><SPAN 
          class="tocnumber">2.3</SPAN> <SPAN class="toctext">prw1326 
          Datastructures</SPAN></A></LI></UL></LI>
        <LI class="toclevel-1"><A href="http://www.maxinmontreal.com/wiki/index.php5?title=Part_B:_Basic_overview_over_the_dll_structure_%26_examples&amp;redirect=no#Examples"><SPAN 
        class="tocnumber">3</SPAN> <SPAN class="toctext">Examples</SPAN></A>
        <UL>
          <LI class="toclevel-2"><A href="http://www.maxinmontreal.com/wiki/index.php5?title=Part_B:_Basic_overview_over_the_dll_structure_%26_examples&amp;redirect=no#Accessing_information_from_the_.22struct.22_.22holdem_state.22"><SPAN 
          class="tocnumber">3.1</SPAN> <SPAN class="toctext">Accessing 
          information from the "struct" "holdem_state"</SPAN></A></LI>
          <LI class="toclevel-2"><A href="http://www.maxinmontreal.com/wiki/index.php5?title=Part_B:_Basic_overview_over_the_dll_structure_%26_examples&amp;redirect=no#A_function_returning_the_flush_rank_of_the_player"><SPAN 
          class="tocnumber">3.2</SPAN> <SPAN class="toctext">A function 
          returning the flush rank of the player</SPAN></A></LI></UL></LI>
        <LI class="toclevel-1"><A href="http://www.maxinmontreal.com/wiki/index.php5?title=Part_B:_Basic_overview_over_the_dll_structure_%26_examples&amp;redirect=no#Files"><SPAN 
        class="tocnumber">4</SPAN> <SPAN class="toctext">Files</SPAN></A></LI>
    </UL></TD></TR></TBODY></TABLE>
<SCRIPT type="text/javascript"> if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } </SCRIPT>
<A name="The_OH-DLL.cpp"></A>
<H3><SPAN class="editsection">[<A title="Edit section: The OH-DLL.cpp" href="http://www.maxinmontreal.com/wiki/index.php5?title=Part_B:_Basic_overview_over_the_dll_structure_%26_examples&amp;action=edit&amp;section=1">edit</A>]</SPAN> 
<SPAN class="mw-headline"> The OH-DLL.cpp </SPAN></H3><PRE>#define WHUSER_EXPORTS 

#include "OH-DLL.h"
#include &lt;windows.h&gt;

///////////////////////////////////// 
//card macros 
#define RANK(c)	         ((c&gt;&gt;4)&amp;0x0f) 
#define SUIT(c)          ((c&gt;&gt;0)&amp;0x0f) 
#define ISCARDBACK(c)	 (c==0xff) 
#define ISUNKNOWN(c)	 (c==0) 
///////////////////////////////////// 

//////////////////////////////////// 
//consecutive states 
holdem_state    m_holdem_state[256]; 
unsigned char   m_ndx; 
////////////////////////////////////

//////////////////////////////////// 
//versus list &amp; prwin
phl1k_t m_phl1k;
pp13 prw1326;
////////////////////////////////////

//////////////////////////////////// 
//WH symbols
pfgws_t m_pget_winholdem_symbol;
////////////////////////////////////

double gws(int chair, const char* name, bool&amp; iserr){ 
	return (*m_pget_winholdem_symbol)(chair,name,iserr); 
} 

double gws(const char* name){ 
	bool iserr; 
	int mychair = (int)gws(0,"userchair",iserr); 
	return gws(mychair,name,iserr); 
}

bool hlset( int rank0, int rank1, int listnum, bool onoff ){
   return ((*m_phl1k)[listnum][rank0-2][rank1-2] = onoff);
}

bool hlget( int rank0, int rank1, int listnum ){
   return ((*m_phl1k)[listnum][rank0-2][rank1-2]);
}

double process_query(const char* pquery){

	if(pquery==NULL)
		return 0;
	//example
	if(strcmp(pquery,"dll$test")==0)
		return 101;

	return 0;

}

double process_state(holdem_state* pstate){

	if(pstate!=NULL)
      m_holdem_state[ (++m_ndx)&amp;0xff ] = *pstate;

	return 0;

}
///////////////////////////////////////////////////// 
//WINHOLDEM RUNTIME ENTRY POINT 
///////////////////////////////////////////////////// 
WHUSER_API double process_message(const char* pmessage, const void* param){

	if(pmessage==NULL){
		return 0;
	}
	if(param==NULL){
		return 0;
	}
	if(strcmp(pmessage,"state")==0){
		return process_state( (holdem_state*)param );
	}
	if(strcmp(pmessage,"phl1k")==0){   
		m_phl1k = (phl1k_t)param;
		return 0;
	}
	if(strcmp(pmessage,"prw1326")==0){	
		prw1326 = (pp13)param;
		return 0;
	}
	if(strcmp(pmessage,"query")==0){ 
		return process_query((const char*)param);
	}
	if(strcmp(pmessage,"pfgws")==0){
		m_pget_winholdem_symbol = (pfgws_t)param;
		return 0;
	}

	return 0;

}
///////////////////////////////// 
//DLLMAIN 
///////////////////////////////// 
BOOL APIENTRY DllMain( HANDLE hModule, DWORD ul_reason_for_call, LPVOID lpReserved){

	switch(ul_reason_for_call){
		case DLL_PROCESS_ATTACH:
			break; 
		case DLL_THREAD_ATTACH:
			break; 
		case DLL_THREAD_DETACH:
			break; 
		case DLL_PROCESS_DETACH:
			break;
	}

	return TRUE;

}
</PRE>
<A name="gws_function"></A>
<H4><SPAN class="editsection">[<A title="Edit section: gws function" href="http://www.maxinmontreal.com/wiki/index.php5?title=Part_B:_Basic_overview_over_the_dll_structure_%26_examples&amp;action=edit&amp;section=2">edit</A>]</SPAN> 
<SPAN class="mw-headline"> gws function </SPAN></H4><PRE>double gws(const char* name){ 
	bool iserr; 
	int mychair = (int)gws(0,"userchair",iserr); 
	return gws(mychair,name,iserr); 
}
</PRE>
<P>This function you see here, is very important, because you can access all 
symbols, which are available for Openholdem with it. <BR>e.g: gws("userchair") 
returns the value of the userchair symbol. <BR></P><A 
name="hlset_.26_hlget"></A>
<H4><SPAN class="editsection">[<A title="Edit section: hlset &amp; hlget" href="http://www.maxinmontreal.com/wiki/index.php5?title=Part_B:_Basic_overview_over_the_dll_structure_%26_examples&amp;action=edit&amp;section=3">edit</A>]</SPAN> 
<SPAN class="mw-headline"> hlset &amp; hlget </SPAN></H4><PRE>bool hlset( int rank0, int rank1, int listnum, bool onoff ){
   return ((*m_phl1k)[listnum][rank0-2][rank1-2] = onoff);
}

bool hlget( int rank0, int rank1, int listnum ){
   return ((*m_phl1k)[listnum][rank0-2][rank1-2]);
}
</PRE>
<P>These functions can be used to access and dynamically modify versus lists 
during play e.g: </P><PRE>    hlset( 14, 13, 5, 1);
</PRE>
<P>this sets AKs on list 5 to true. More details can be found here <A title="Phl1k" 
href="http://www.maxinmontreal.com/wiki/index.php5/Phl1k">Phl1k</A>.</P><A name="process_query_function"></A>
<H4><SPAN class="editsection">[<A title="Edit section: process_query function" 
href="http://www.maxinmontreal.com/wiki/index.php5?title=Part_B:_Basic_overview_over_the_dll_structure_%26_examples&amp;action=edit&amp;section=4">edit</A>]</SPAN> 
<SPAN class="mw-headline"> process_query function </SPAN></H4><PRE>double process_query(const char* pquery){

	if(pquery==NULL)
		return 0;
	//example
	if(strcmp(pquery,"dll$test")==0)
		return 101;

	return 0;

}
</PRE>
<P>Inside this scope you can define symbols which you can access with the OH 
formula editor.</P>
<P>e.g: If you add " = dll$test" in the OH formula editor in the debug tab, 
you'll get the value "101". You can experiment with it if you want and try some 
values from the gws function, but remember to recompile each time you change 
something in the code.</P><A name="process_state_function"></A>
<H4><SPAN class="editsection">[<A title="Edit section: process_state function" 
href="http://www.maxinmontreal.com/wiki/index.php5?title=Part_B:_Basic_overview_over_the_dll_structure_%26_examples&amp;action=edit&amp;section=5">edit</A>]</SPAN> 
<SPAN class="mw-headline"> process_state function </SPAN></H4><PRE>double process_state(holdem_state* pstate){

	if(pstate!=NULL)
      m_holdem_state[ (++m_ndx)&amp;0xff ] = *pstate;

	return 0;

}
</PRE>
<P>This function is called each time OH scrapes a new state, if you want to 
update values or some other functions you might code later you have to put some 
of it in this scope.</P><A name="The_OH-DLL.h_Header"></A>
<H3><SPAN class="editsection">[<A title="Edit section: The OH-DLL.h Header" 
href="http://www.maxinmontreal.com/wiki/index.php5?title=Part_B:_Basic_overview_over_the_dll_structure_%26_examples&amp;action=edit&amp;section=6">edit</A>]</SPAN> 
<SPAN class="mw-headline"> The OH-DLL.h Header </SPAN></H3><PRE>#ifndef _whuser_h_
#define _whuser_h_

#ifdef WHUSER_EXPORTS
#define WHUSER_API __declspec(dllexport)
#else
#define WHUSER_API __declspec(dllimport)
#endif

struct holdem_player{

    char            m_name[16]         &nbsp;;	//player name if known
    double          m_balance          &nbsp;;	//player balance 
    double          m_currentbet       &nbsp;;	//player current bet
    unsigned char   m_cards[2]         &nbsp;;	//player cards

    unsigned char   m_name_known   &nbsp;: 1&nbsp;;	//0=no 1=yes
    unsigned char   m_balance_known&nbsp;: 1&nbsp;;	//0=no 1=yes
    unsigned char   m_fillerbits   &nbsp;: 6&nbsp;;	//filler bits
    unsigned char   m_fillerbyte       &nbsp;;	//filler bytes

};

struct holdem_state{

    char            m_title[64]        &nbsp;;	//table title
    double          m_pot[10]          &nbsp;;	//total in each pot

    unsigned char   m_cards[5]         &nbsp;;	//common cards

    unsigned char   m_is_playing   &nbsp;: 1&nbsp;;	//0=sitting-out, 1=sitting-in
    unsigned char   m_is_posting   &nbsp;: 1&nbsp;;	//0=autopost-off, 1=autopost-on
    unsigned char   m_fillerbits   &nbsp;: 6&nbsp;;	//filler bits

    unsigned char   m_fillerbyte       &nbsp;;	//filler byte
    unsigned char   m_dealer_chair     &nbsp;;	//0-9

    holdem_player   m_player[10]       &nbsp;;	//player records

};

struct sprw1326_chair{

	int	level;		//indicates weighting level for 'always consider'
	int	limit;		//max index into weight array - used for computational efficiency
	int	ignore;		//if non-zero no weighting will be applied to this chair
	int	rankhi[1326];	//higher ranked card number in pocket cards
	int	ranklo[1326];	//lower ranked card number in pocket cards
	int	weight[1326];	//the significance value for this hand
	double	scratch;	//for future reference 

};

struct sprw1326{

	int	useme;		//unless set to 1326 the normal OH prwin will be used
	int	preflop;	//unless set to 1326 the normal OH prwin will be used pre-flop
	int	usecallback;	//unless set to 1326 the callback function will not be invoked
	double	(*prw_callback)(void); //if enabled will be invoked before the prwin calculation pass
	double	scratch;	//for future reference
	int	bblimp;		//if non-zero no weighting will be applied if a chair has put nothing in the pot
	sprw1326_chair	vanilla_chair;	   //will be precalculated by OH at startup - convenience values
	sprw1326_chair  chair[10];  //structures for each chair

};

typedef double (*process_message_t)(const char* message, const void* param );
WHUSER_API double process_message( const char* message, const void* param );

typedef double (*pfgws_t)( int c, const char* psym, bool&amp; iserr );
typedef bool hl1k_t[1000][13][13];  // list number, rank0, rank1 - rank0&gt;=rank1 == suited, rank0&lt;rank1 == unsuited
typedef hl1k_t* phl1k_t;
typedef sprw1326* pp13;

#endif
</PRE>
<P>Here you have some definitions of datatypes. The important definitions are 
the two structs, you can basically compare a "struct"-datatype to an object with 
some attributes, these attributes are accessed by using the "." operator, look 
in the examples section below... <BR><BR></P><A 
name="The_struct_holdem_state"></A>
<H4><SPAN class="editsection">[<A title="Edit section: The struct holdem_state" 
href="http://www.maxinmontreal.com/wiki/index.php5?title=Part_B:_Basic_overview_over_the_dll_structure_%26_examples&amp;action=edit&amp;section=7">edit</A>]</SPAN> 
<SPAN class="mw-headline"> The struct holdem_state </SPAN></H4><PRE>struct holdem_state{

    char            m_title[64]        &nbsp;;	//table title
    double          m_pot[10]          &nbsp;;	//total in each pot

    unsigned char   m_cards[5]         &nbsp;;	//common cards

    unsigned char   m_is_playing   &nbsp;: 1&nbsp;;	//0=sitting-out, 1=sitting-in
    unsigned char   m_is_posting   &nbsp;: 1&nbsp;;	//0=autopost-off, 1=autopost-on
    unsigned char   m_fillerbits   &nbsp;: 6&nbsp;;	//filler bits

    unsigned char   m_fillerbyte       &nbsp;;	//filler byte
    unsigned char   m_dealer_chair     &nbsp;;	//0-9

    holdem_player   m_player[10]       &nbsp;;	//player records

};
</PRE>
<P>- What you basically have here is the information of an OH state which was 
scraped  <BR>- You can access information like the 
tabletitle/potsize/dealerchair etc. ofc nothing new, as you have symbols for 
that at formula level <BR>- It also holds information about the players which is 
saved in the "struct" "holdem_player" <BR><BR></P><A name="The_struct_holdem_player"></A>
<H4><SPAN class="editsection">[<A title="Edit section: The struct holdem_player" 
href="http://www.maxinmontreal.com/wiki/index.php5?title=Part_B:_Basic_overview_over_the_dll_structure_%26_examples&amp;action=edit&amp;section=8">edit</A>]</SPAN> 
<SPAN class="mw-headline"> The struct holdem_player </SPAN></H4><PRE>struct holdem_player{

    char            m_name[16]         &nbsp;;	//player name if known
    double          m_balance          &nbsp;;	//player balance 
    double          m_currentbet       &nbsp;;	//player current bet
    unsigned char   m_cards[2]         &nbsp;;	//player cards

    unsigned char   m_name_known   &nbsp;: 1&nbsp;;	//0=no 1=yes
    unsigned char   m_balance_known&nbsp;: 1&nbsp;;	//0=no 1=yes
    unsigned char   m_fillerbits   &nbsp;: 6&nbsp;;	//filler bits
    unsigned char   m_fillerbyte       &nbsp;;	//filler bytes

};
</PRE>
<P>- Pretty obvious that this contains information about the players at the 
table <BR>- You can access balances/currentbets/cards/names<BR></P><A name="prw1326_Datastructures"></A>
<H4><SPAN class="editsection">[<A title="Edit section: prw1326 Datastructures" 
href="http://www.maxinmontreal.com/wiki/index.php5?title=Part_B:_Basic_overview_over_the_dll_structure_%26_examples&amp;action=edit&amp;section=9">edit</A>]</SPAN> 
<SPAN class="mw-headline"> prw1326 Datastructures</SPAN></H4>
<P>You can find all information and examples on it in these articles <A title="Prw1326" 
href="http://www.maxinmontreal.com/wiki/index.php5/Prw1326">Prw1326</A>, <A 
title="Enhanced Prwin" href="http://www.maxinmontreal.com/wiki/index.php5/Enhanced_Prwin">Enhanced 
Prwin</A>.</P><A name="Examples"></A>
<H3><SPAN class="editsection">[<A title="Edit section: Examples" href="http://www.maxinmontreal.com/wiki/index.php5?title=Part_B:_Basic_overview_over_the_dll_structure_%26_examples&amp;action=edit&amp;section=10">edit</A>]</SPAN> 
<SPAN class="mw-headline"> Examples </SPAN></H3><A name="Accessing_information_from_the_.22struct.22_.22holdem_state.22"></A>
<H4><SPAN class="editsection">[<A title='Edit section: Accessing information from the "struct" "holdem_state"' 
href="http://www.maxinmontreal.com/wiki/index.php5?title=Part_B:_Basic_overview_over_the_dll_structure_%26_examples&amp;action=edit&amp;section=11">edit</A>]</SPAN> 
<SPAN class="mw-headline"> Accessing information from the "struct" 
"holdem_state" </SPAN></H4><PRE>double process_query(const char* pquery){

	if(pquery==NULL)
		return 0;
	//example
	if(strcmp(pquery,"dll$test")==0)
		return 101;
	if(strcmp(pquery,"dll$dealerchair")==0)
		return m_holdem_state[(m_ndx)&amp;0xff].m_dealer_chair;
	if(strcmp(pquery,"dll$currentbet3")==0)
		return m_holdem_state[(m_ndx)&amp;0xff].m_player[3].m_currentbet;

	return 0;

}
</PRE>
<P>You can see in the code example above, how you have to use the point operator 
on a struct to access the information stored in the struct of the scraped state.
</P><A name="A_function_returning_the_flush_rank_of_the_player"></A>
<H4><SPAN class="editsection">[<A title="Edit section: A function returning the flush rank of the player" 
href="http://www.maxinmontreal.com/wiki/index.php5?title=Part_B:_Basic_overview_over_the_dll_structure_%26_examples&amp;action=edit&amp;section=12">edit</A>]</SPAN> 
<SPAN class="mw-headline"> A function returning the flush rank of the player 
</SPAN></H4>
<P>For convinience we restructure the code, by adding another header file: <BR>
</P>
<P>- Click on project -&gt; Add New Item -&gt; select "Header File (.h)" -&gt; 
name it "OH-general", you can also do it in the solution explorer by clicking on 
the "Header Files" folder <BR></P><PRE>///////////////////////////////////// 
//card macros 
#define RANK(c)	         ((c&gt;&gt;4)&amp;0x0f) 
#define SUIT(c)          ((c&gt;&gt;0)&amp;0x0f) 
#define ISCARDBACK(c)	 (c==0xff) 
#define ISUNKNOWN(c)	 (c==0) 
///////////////////////////////////// 

//////////////////////////////////// 
//consecutive states 
holdem_state    m_holdem_state[256]; 
unsigned char   m_ndx; 
////////////////////////////////////

//////////////////////////////////// 
//versus list &amp; prwin
phl1k_t m_phl1k;
pp13 prw1326;
////////////////////////////////////

//////////////////////////////////// 
//WH symbols
pfgws_t m_pget_winholdem_symbol;
////////////////////////////////////

double gws(int chair, const char* name, bool&amp; iserr){ 
	return (*m_pget_winholdem_symbol)(chair,name,iserr); 
} 

double gws(const char* name){ 
	bool iserr; 
	int mychair = (int)gws(0,"userchair",iserr); 
	return gws(mychair,name,iserr); 
}

bool hlset( int rank0, int rank1, int listnum, bool onoff ){
   return ((*m_phl1k)[listnum][rank0-2][rank1-2] = onoff);
}

bool hlget( int rank0, int rank1, int listnum ){
   return ((*m_phl1k)[listnum][rank0-2][rank1-2]);
}
</PRE>
<P>- Cut / paste the code above from the "OH-DLL.cpp" file to the "OH-general.h" 
header file.</P>
<P>- We will also need another include now, it's a standard library of C++, 
which contains a datatype called bitset <BR>- The bitset datatype converts 
integer values to their binary representation, we will need this because we are 
going to work with "srankbits" <BR>- You can read more about how rankbit values 
are obtained here: <A title="OpenHoldem:EndUserDocumentation:Symbols" href="http://www.maxinmontreal.com/wiki/index.php5/OpenHoldem:EndUserDocumentation:Symbols">OpenHoldem:EndUserDocumentation:Symbols</A>, 
look at the very bottom of the page <BR>- You can find documentation on the C++ 
library here: <A class="external free" title="http://www.cppreference.com/wiki/stl/bitset/start" 
href="http://www.cppreference.com/wiki/stl/bitset/start" 
rel="nofollow">http://www.cppreference.com/wiki/stl/bitset/start</A> <BR><BR>
</P>
<P>After you're done with cut-pasting add the "bitset" include and also "using 
namespace std;" this is neccessary line, don't think much about it, but the 
include would not work without it. Your OH-DLL.cpp includes section should look 
like this now:</P><PRE>#define WHUSER_EXPORTS 

#include "OH-DLL.h"
#include &lt;windows.h&gt;
#include &lt;bitset&gt;

using namespace std;

#include "OH-general.h"
</PRE>
<P>Now we can begin with the actual coding, in the next step open "OH-general.h" 
and add the following code:<BR></P><PRE>int srankhiplayer;
int srankbits;
int flushrank;
</PRE><PRE>int set_flush_rank(){

	bitset&lt;16&gt; srb( srankbits ); 

	srb = (~srb ) &gt;&gt;= srankhiplayer; 

	return (int)srb.count(); 
}
</PRE>
<P>This function will determine the flush rank via some bitset operations, 1 - 
nutflush, 2 - 2nd nutflush, ...</P><PRE>void int_oh_symbols(){

	srankbits = (int)gws("srankbits");
	srankhiplayer = (int)gws("srankhiplayer");
	flushrank = set_flush_rank();

}
</PRE>
<P>This function will update the values each time a new state is scraped.</P>
<P>You also need to modify the "OH-DLL.cpp" to include this new symbol:</P><PRE>double process_query(const char* pquery){

	if(pquery==NULL)
		return 0;
	//example
	if(strcmp(pquery,"dll$test")==0)
		return 101;
	if(strcmp(pquery,"dll$dealerchair")==0)
		return m_holdem_state[(m_ndx)&amp;0xff].m_dealer_chair;
	if(strcmp(pquery,"dll$currentbet3")==0)
		return m_holdem_state[(m_ndx)&amp;0xff].m_player[3].m_currentbet;
	if(strcmp(pquery,"dll$flushrank")==0)
		return flushrank;

	return 0;

}
</PRE><PRE>double process_state(holdem_state* pstate){

	if(pstate!=NULL){m_holdem_state[ (++m_ndx)&amp;0xff ] = *pstate;}

	int_oh_symbols();

	return 0;

}
</PRE>
<P>If all went well you can access the flush rank with "dll$flushrank" on 
formula lvl now.</P><A name="Files"></A>
<H2><SPAN class="editsection">[<A title="Edit section: Files" href="http://www.maxinmontreal.com/wiki/index.php5?title=Part_B:_Basic_overview_over_the_dll_structure_%26_examples&amp;action=edit&amp;section=13">edit</A>]</SPAN> 
<SPAN class="mw-headline"> Files </SPAN></H2>
<UL>
  <LI><A title="Image:OH-DLL-B.rar" href="http://www.maxinmontreal.com/wiki/index.php5/Image:OH-DLL-B.rar">Image:OH-DLL-<B 
  style="color: black; background-color: rgb(153, 255, 153);">B</B>.rar</A>
</LI></UL><!-- Saved in parser cache with key maxin_wiki:pcache:idhash:512-0!1!0!!en!2 and timestamp 20130326155547 -->
<DIV class="printfooter">Retrieved from "<A href="http://www.maxinmontreal.com/wiki/index.php5/Part_B:_Basic_overview_over_the_dll_structure_%26_examples">http://www.maxinmontreal.com/wiki/index.php5/Part_B:_Basic_overview_over_the_dll_structure_%26_examples</A>"</DIV><!-- end content -->
<DIV class="visualClear"></DIV></DIV></DIV></DIV>
<DIV id="column-one">
<DIV id="p-cactions" class="portlet">
<H5>Views</H5>
<DIV class="pBody">
<UL>
  <LI id="ca-nstab-main" class="selected"><A accessKey="c" title="View the content page [c]" 
  href="http://www.maxinmontreal.com/wiki/index.php5/Part_B:_Basic_overview_over_the_dll_structure_%26_examples">Article</A></LI>
  <LI id="ca-talk"><A accessKey="t" title="Discussion about the content page [t]" 
  href="http://www.maxinmontreal.com/wiki/index.php5/Talk:Part_B:_Basic_overview_over_the_dll_structure_%26_examples">Discussion</A></LI>
  <LI id="ca-edit"><A accessKey="e" title="You can edit this page. Please use the preview button before saving. [e]" 
  href="http://www.maxinmontreal.com/wiki/index.php5?title=Part_B:_Basic_overview_over_the_dll_structure_%26_examples&amp;action=edit">Edit</A></LI>
  <LI id="ca-history"><A accessKey="h" title="Past versions of this page. [h]" 
  href="http://www.maxinmontreal.com/wiki/index.php5?title=Part_B:_Basic_overview_over_the_dll_structure_%26_examples&amp;action=history">History</A></LI></UL></DIV></DIV>
<DIV id="p-personal" class="portlet">
<H5>Personal tools</H5>
<DIV class="pBody">
<UL>
  <LI id="pt-login"><A accessKey="o" title="You are encouraged to log in, it is not mandatory however. [o]" 
  href="http://www.maxinmontreal.com/wiki/index.php5?title=Special:Userlogin&amp;returnto=Part_B:_Basic_overview_over_the_dll_structure_%26_examples">Log 
  in / create account</A></LI></UL></DIV></DIV>
<DIV id="p-logo" class="portlet"><A style='background-image: url("/wiki/skins/common/images/wiki.png");' 
href="http://www.maxinmontreal.com/"></A></DIV>
<SCRIPT type="text/javascript"> if (window.isMSIE55) fixalpha(); </SCRIPT>

<DIV id="p-navigation" class="portlet">
<H5>Navigation</H5>
<DIV class="pBody">
<UL>
  <LI id="n-mainpage"><A accessKey="z" title="Visit the Main Page [z]" href="http://www.maxinmontreal.com/wiki/index.php5/Main_Page">Main 
  Page</A></LI>
  <LI id="n-portal"><A title="About the project, what you can do, where to find things" 
  href="http://www.maxinmontreal.com/wiki/index.php5/Maxin_Wiki:Community_Portal">Community 
  portal</A></LI>
  <LI id="n-currentevents"><A title="Find background information on current events" 
  href="http://www.maxinmontreal.com/wiki/index.php5/Current_events">Current 
  events</A></LI>
  <LI id="n-recentchanges"><A accessKey="r" title="The list of recent changes in the wiki. [r]" 
  href="http://www.maxinmontreal.com/wiki/index.php5/Special:Recentchanges">Recent 
  changes</A></LI>
  <LI id="n-randompage"><A accessKey="x" title="Load a random page [x]" href="http://www.maxinmontreal.com/wiki/index.php5/Special:Random">Random 
  page</A></LI>
  <LI id="n-help"><A title="The place to find out." href="http://www.maxinmontreal.com/wiki/index.php5/Help:Contents">Help</A></LI>
  <LI id="n-sitesupport"><A title="Support us" href="http://www.maxinmontreal.com/wiki/index.php5/Maxin_Wiki:Site_support">Donations</A></LI></UL></DIV></DIV>
<DIV id="p-search" class="portlet">
<H5><LABEL for="searchInput">Search</LABEL></H5>
<DIV id="searchBody" class="pBody">
<FORM id="searchform" action="/wiki/index.php5/Special:Search">
<DIV><INPUT accessKey="f" id="searchInput" title="Search Maxin Wiki [f]" name="search" 
type="text"><INPUT id="searchGoButton" class="searchButton" name="go" value="Go" type="submit">&nbsp;
				<INPUT id="mw-searchButton" class="searchButton" name="fulltext" value="Search" type="submit"></DIV></FORM></DIV></DIV>
<DIV id="p-tb" class="portlet">
<H5>Toolbox</H5>
<DIV class="pBody">
<UL>
  <LI id="t-whatlinkshere"><A accessKey="j" title="List of all wiki pages that link here [j]" 
  href="http://www.maxinmontreal.com/wiki/index.php5/Special:Whatlinkshere/Part_B:_Basic_overview_over_the_dll_structure_%26_examples">What 
  links here</A></LI>
  <LI id="t-recentchangeslinked"><A accessKey="k" title="Recent changes in pages linked from this page [k]" 
  href="http://www.maxinmontreal.com/wiki/index.php5/Special:Recentchangeslinked/Part_B:_Basic_overview_over_the_dll_structure_%26_examples">Related 
  changes</A></LI>
  <LI id="t-upload"><A accessKey="u" title="Upload images or media files [u]" 
  href="http://www.maxinmontreal.com/wiki/index.php5/Special:Upload">Upload 
  file</A></LI>
  <LI id="t-specialpages"><A accessKey="q" title="List of all special pages [q]" 
  href="http://www.maxinmontreal.com/wiki/index.php5/Special:Specialpages">Special 
  pages</A></LI>
  <LI id="t-print"><A accessKey="p" title="Printable version of this page [p]" 
  href="http://www.maxinmontreal.com/wiki/index.php5?title=Part_B:_Basic_overview_over_the_dll_structure_%26_examples&amp;redirect=no&amp;printable=yes">Printable 
  version</A></LI>
  <LI id="t-permalink"><A title="Permanent link to this version of the page" 
  href="http://www.maxinmontreal.com/wiki/index.php5?title=Part_B:_Basic_overview_over_the_dll_structure_%26_examples&amp;oldid=373284">Permanent 
  link</A></LI></UL></DIV></DIV></DIV><!-- end of the left (by default at least) column -->
<DIV class="visualClear"></DIV>
<DIV id="footer">
<DIV id="f-poweredbyico"><A href="http://www.mediawiki.org/"><IMG alt="Powered by MediaWiki" 
src="Tutorialseries_partB_basicoverviewofdllstructure_files/poweredby_mediawiki_88x31.png"></A></DIV>
<UL id="f-list">
  <LI id="lastmod"> This page was last modified 03:08, 25 February 2013.</LI>
  <LI id="viewcount">This page has been accessed 8,390 times.</LI>
  <LI id="privacy"><A title="Maxin Wiki:Privacy policy" href="http://www.maxinmontreal.com/wiki/index.php5/Maxin_Wiki:Privacy_policy">Privacy 
  policy</A></LI>
  <LI id="about"><A title="Maxin Wiki:About" href="http://www.maxinmontreal.com/wiki/index.php5/Maxin_Wiki:About">About 
  Maxin Wiki</A></LI>
  <LI id="disclaimer"><A title="Maxin Wiki:General disclaimer" href="http://www.maxinmontreal.com/wiki/index.php5/Maxin_Wiki:General_disclaimer">Disclaimers</A></LI></UL></DIV>
<SCRIPT type="text/javascript">if (window.runOnloadHook) runOnloadHook();</SCRIPT>
</DIV><!-- Served in 0.354 secs. --></DIV></BODY></HTML>
