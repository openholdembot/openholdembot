#LyX 1.6.5 created this file. For more info see http://www.lyx.org/
\lyxformat 345
\begin_document
\begin_header
\textclass amsbook
\use_default_options true
\begin_modules
theorems-ams
eqs-within-sections
figs-within-sections
\end_modules
\language english
\inputencoding auto
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth -2
\tocdepth -2
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Section
Connecting To A Table 
\end_layout

\begin_layout Standard
There are several ways to connect OpenHoldem to a table:
\end_layout

\begin_layout Itemize
Using the file-menu (or the green button), then choosing 
\begin_inset Quotes eld
\end_inset

Connect
\begin_inset Quotes erd
\end_inset

 and then selecting the table from a list.
 Historically that was the first and only way to connect.
 It is a bit inconvenient and some care has to be taken to make it really
 fail-safe.
\end_layout

\begin_layout Itemize
Sending messages to OpenHoldem, telling the bot to connect or disconnect.
 This way got introduced with OpenHoldem 2.0.0 and is far more easy for a
 hopper and far more failsafe.
\end_layout

\begin_layout Itemize
Using the auto-connector, that got introduced in OpenHoldem 2.1.0.
 Here all instances of the bot will be synchronized via shared-memory and
 connect automatically, when a new table appears.
 The behavior of the auto-connector can be adapted to your needs.
 See the chapter about preferences for more info.
\end_layout

\begin_layout Standard
The third way seems to be the most easy one, however there are reasons to
 connect by messages, be it, that your hopper needs to communicate with
 the casino-machine, be it, that you want to superwise everything.
 So we will describe these methods here.
\end_layout

\begin_layout Subsection
Connecting to a window
\end_layout

\begin_layout Standard
The following AutoIt script demonstrates how to instruct OpenHoldem to connect
 to a window:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

Global Const $WMA_DOCONNECT = 0x8002 
\end_layout

\begin_layout Plain Layout

Local $oh_hwnd = WinGetHandle("Default - OpenHoldem") 
\end_layout

\begin_layout Plain Layout

Local $oh_manual_mode = WinGetHandle("OpenHoldem Poker") 
\end_layout

\begin_layout Plain Layout

DllCall("user32.dll", "lresult", "SendMessage", "hwnd", 
\end_layout

\begin_layout Plain Layout

    $oh_hwnd, "uint", $WMA_DOCONNECT, "wparam", 0, 
\end_layout

\begin_layout Plain Layout

    "lparam", $oh_manual_mode)
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Disconnecting from a window
\end_layout

\begin_layout Standard
The following AutoIt script demonstrates how to instruct OpenHoldem to disconnec
t from a window:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

Global Const $WMA_DODISCONNECT = 0x8003 
\end_layout

\begin_layout Plain Layout

Local $oh_hwnd = WinGetHandle("Default - OpenHoldem") 
\end_layout

\begin_layout Plain Layout

DllCall("user32.dll", "lresult", "SendMessage", "hwnd", 
\end_layout

\begin_layout Plain Layout

    $oh_hwnd, "uint", $WMA_DODISCONNECT, "wparam", 0, 
\end_layout

\begin_layout Plain Layout

    "lparam", 0)
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Querying the connection-status
\end_layout

\begin_layout Standard
The following AutoIt script demonstrates how to query OpenHoldem for the
 window that it is connected to:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

#Include <String.au3> 
\end_layout

\begin_layout Plain Layout

Global Const $WMA_CONNECTEDHWND = 0x8004 
\end_layout

\begin_layout Plain Layout

Local $oh_hwnd = WinGetHandle("Default - OpenHoldem") 
\end_layout

\begin_layout Plain Layout

Local $a = DllCall("user32.dll", "lresult", "SendMessage", "hwnd", 
\end_layout

\begin_layout Plain Layout

    $oh_hwnd, "uint", $WMA_CONNECTEDHWND, "wparam", 0, 
\end_layout

\begin_layout Plain Layout

    "lparam", 0) 
\end_layout

\begin_layout Plain Layout

ConsoleWrite("Connected to: " & Hex($a[0]) & @CRLF)
\end_layout

\end_inset


\end_layout

\end_body
\end_document
